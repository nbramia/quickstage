{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/scrypt-js@3.0.1/node_modules/scrypt-js/scrypt.js", "../../../../node_modules/.pnpm/cross-fetch@4.1.0/node_modules/cross-fetch/dist/browser-ponyfill.js", "../../../../node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.js", "../../../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js", "../../../../node_modules/.pnpm/object-inspect@1.13.4/node_modules/object-inspect/index.js", "../../../../node_modules/.pnpm/side-channel-list@1.0.0/node_modules/side-channel-list/index.js", "../../../../node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js", "../../../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js", "../../../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js", "../../../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js", "../../../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js", "../../../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js", "../../../../node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js", "../../../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js", "../../../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js", "../../../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js", "../../../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js", "../../../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js", "../../../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js", "../../../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js", "../../../../node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js", "../../../../node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js", "../../../../node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js", "../../../../node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js", "../../../../node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js", "../../../../node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js", "../../../../node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js", "../../../../node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js", "../../../../node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js", "../../../../node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js", "../../../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionCall.js", "../../../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionApply.js", "../../../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/reflectApply.js", "../../../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/actualApply.js", "../../../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/index.js", "../../../../node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js", "../../../../node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js", "../../../../node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js", "../../../../node_modules/.pnpm/get-intrinsic@1.3.0/node_modules/get-intrinsic/index.js", "../../../../node_modules/.pnpm/call-bound@1.0.4/node_modules/call-bound/index.js", "../../../../node_modules/.pnpm/side-channel-map@1.0.1/node_modules/side-channel-map/index.js", "../../../../node_modules/.pnpm/side-channel-weakmap@1.0.2/node_modules/side-channel-weakmap/index.js", "../../../../node_modules/.pnpm/side-channel@1.1.0/node_modules/side-channel/index.js", "../../../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/formats.js", "../../../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/utils.js", "../../../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/stringify.js", "../../../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/parse.js", "../../../../node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/index.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/compose.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/request/constants.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/utils/body.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/utils/url.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/request.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/utils/html.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/context.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/router.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/utils/constants.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/hono-base.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/router/reg-exp-router/node.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/router/reg-exp-router/router.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/router/smart-router/router.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/router/trie-router/node.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/router/trie-router/router.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/hono.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/middleware/cors/index.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/utils/cookie.js", "../../../../node_modules/.pnpm/hono@4.9.0/node_modules/hono/dist/helper/cookie/index.js", "../../../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/external.js", "../../../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/helpers/util.js", "../../../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/ZodError.js", "../../../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/locales/en.js", "../../../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/errors.js", "../../../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/helpers/parseUtil.js", "../../../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/helpers/errorUtil.js", "../../../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/types.js", "../../../../packages/shared/src/schemas.ts", "../../../../packages/shared/src/index.ts", "../../../../apps/worker/src/utils.ts", "../../../../packages/shared/src/cookies.ts", "../../../../apps/worker/src/s3presign.ts", "../../../../apps/worker/src/version-info.ts", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js", "../../../../node_modules/.pnpm/@levischuck+tiny-cbor@0.2.11/node_modules/@levischuck/tiny-cbor/esm/index.js", "../../../../node_modules/.pnpm/@levischuck+tiny-cbor@0.2.11/node_modules/@levischuck/tiny-cbor/esm/cbor/cbor_internal.js", "../../../../node_modules/.pnpm/@levischuck+tiny-cbor@0.2.11/node_modules/@levischuck/tiny-cbor/esm/cbor/cbor.js", "../../../../node_modules/.pnpm/@hexagon+base64@1.1.28/node_modules/@hexagon/base64/src/base64.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/deps.js", "../../../../node_modules/.pnpm/asn1js@3.0.6/node_modules/asn1js/build/index.es.js", "../../../../node_modules/.pnpm/pvutils@1.1.3/node_modules/pvutils/build/utils.es.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/enums.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/types/bit_string.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/types/octet_string.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/converters.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/helper.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/schema.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/storage.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/decorators.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/parser.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/serializer.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/objects.js", "../../../../node_modules/.pnpm/@peculiar+asn1-schema@2.4.0/node_modules/@peculiar/asn1-schema/build/es2015/convert.js", "../../../../node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/ip_converter.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/name.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/general_name.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/object_identifiers.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_information_access.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_key_identifier.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/basic_constraints.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/general_names.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_issuer.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_policies.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_number.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_delta_indicator.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_distribution_points.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_freshest.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_issuing_distribution_point.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_reason.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/extended_key_usage.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/inhibit_any_policy.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/invalidity_date.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/issuer_alternative_name.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/key_usage.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/name_constraints.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_constraints.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_mappings.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_alternative_name.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/attribute.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_directory_attributes.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_key_identifier.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/private_key_usage_period.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/entrust_version_info.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_info_access.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/algorithm_identifier.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/subject_public_key_info.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/time.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/validity.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/extension.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/types.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/tbs_certificate.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/certificate.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/tbs_cert_list.js", "../../../../node_modules/.pnpm/@peculiar+asn1-x509@2.4.0/node_modules/@peculiar/asn1-x509/build/es2015/certificate_list.js", "../../../../node_modules/.pnpm/@peculiar+asn1-ecc@2.4.0/node_modules/@peculiar/asn1-ecc/build/es2015/object_identifiers.js", "../../../../node_modules/.pnpm/@peculiar+asn1-ecc@2.4.0/node_modules/@peculiar/asn1-ecc/build/es2015/algorithms.js", "../../../../node_modules/.pnpm/@peculiar+asn1-ecc@2.4.0/node_modules/@peculiar/asn1-ecc/build/es2015/rfc3279.js", "../../../../node_modules/.pnpm/@peculiar+asn1-ecc@2.4.0/node_modules/@peculiar/asn1-ecc/build/es2015/ec_parameters.js", "../../../../node_modules/.pnpm/@peculiar+asn1-ecc@2.4.0/node_modules/@peculiar/asn1-ecc/build/es2015/ec_private_key.js", "../../../../node_modules/.pnpm/@peculiar+asn1-ecc@2.4.0/node_modules/@peculiar/asn1-ecc/build/es2015/ec_signature_value.js", "../../../../node_modules/.pnpm/@peculiar+asn1-rsa@2.4.0/node_modules/@peculiar/asn1-rsa/build/es2015/object_identifiers.js", "../../../../node_modules/.pnpm/@peculiar+asn1-rsa@2.4.0/node_modules/@peculiar/asn1-rsa/build/es2015/algorithms.js", "../../../../node_modules/.pnpm/@peculiar+asn1-rsa@2.4.0/node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsaes_oaep.js", "../../../../node_modules/.pnpm/@peculiar+asn1-rsa@2.4.0/node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pss.js", "../../../../node_modules/.pnpm/@peculiar+asn1-rsa@2.4.0/node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pkcs1_v1_5.js", "../../../../node_modules/.pnpm/@peculiar+asn1-rsa@2.4.0/node_modules/@peculiar/asn1-rsa/build/es2015/other_prime_info.js", "../../../../node_modules/.pnpm/@peculiar+asn1-rsa@2.4.0/node_modules/@peculiar/asn1-rsa/build/es2015/rsa_private_key.js", "../../../../node_modules/.pnpm/@peculiar+asn1-rsa@2.4.0/node_modules/@peculiar/asn1-rsa/build/es2015/rsa_public_key.js", "../../../../node_modules/.pnpm/@peculiar+asn1-android@2.4.0/node_modules/@peculiar/asn1-android/build/es2015/key_description.js", "../../../../node_modules/.pnpm/@peculiar+asn1-android@2.4.0/node_modules/@peculiar/asn1-android/build/es2015/nonstandard.js", "../../../../node_modules/.pnpm/@peculiar+asn1-android@2.4.0/node_modules/@peculiar/asn1-android/build/es2015/attestation.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/cose.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/generateUserID.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/fetch.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/toHash.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/services/settingsService.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/validateExtFIDOGenCEAAGUID.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/helpers/logging.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/services/metadataService.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js", "../../../../node_modules/.pnpm/@simplewebauthn+server@11.0.0/node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/net/HttpClient.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/net/FetchHttpClient.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/crypto/CryptoProvider.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/crypto/SubtleCryptoProvider.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/platform/PlatformFunctions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/StripeEmitter.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/platform/WebPlatformFunctions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/Error.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/apiVersion.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/ResourceNamespace.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/utils.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/autoPagination.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/StripeMethod.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/StripeResource.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/FinancialConnections/Accounts.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Entitlements/ActiveEntitlements.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Issuing/Authorizations.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Issuing/Authorizations.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Tax/Calculations.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Issuing/Cardholders.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Issuing/Cards.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Issuing/Cards.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/BillingPortal/Configurations.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Terminal/Configurations.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/ConfirmationTokens.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Terminal/ConnectionTokens.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/CreditReversals.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Customers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/DebitReversals.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Issuing/Disputes.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Radar/EarlyFraudWarnings.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Entitlements/Features.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/FinancialAccounts.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Treasury/InboundTransfers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/InboundTransfers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Terminal/Locations.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Billing/MeterEventAdjustments.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Billing/MeterEvents.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Billing/Meters.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Climate/Orders.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundPayments.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/OutboundPayments.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundTransfers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/OutboundTransfers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Issuing/PersonalizationDesigns.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Issuing/PersonalizationDesigns.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Issuing/PhysicalBundles.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Climate/Products.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Terminal/Readers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Terminal/Readers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedCredits.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/ReceivedCredits.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedDebits.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/ReceivedDebits.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Refunds.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Tax/Registrations.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Reporting/ReportRuns.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Reporting/ReportTypes.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Forwarding/Requests.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Sigma/ScheduledQueryRuns.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Apps/Secrets.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/BillingPortal/Sessions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Checkout/Sessions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/FinancialConnections/Sessions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Tax/Settings.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Climate/Suppliers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/TestClocks.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Issuing/Tokens.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/TransactionEntries.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TestHelpers/Issuing/Transactions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/FinancialConnections/Transactions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Issuing/Transactions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Tax/Transactions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Treasury/Transactions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Radar/ValueListItems.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Radar/ValueLists.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Identity/VerificationReports.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Identity/VerificationSessions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Accounts.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/AccountLinks.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/AccountSessions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/ApplePayDomains.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/ApplicationFees.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Balance.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/BalanceTransactions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Charges.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/ConfirmationTokens.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/CountrySpecs.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Coupons.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/CreditNotes.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/CustomerSessions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Customers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Disputes.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/EphemeralKeys.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Events.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/ExchangeRates.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/FileLinks.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/multipart.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Files.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/InvoiceItems.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Invoices.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Mandates.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/OAuth.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/PaymentIntents.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/PaymentLinks.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/PaymentMethodConfigurations.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/PaymentMethodDomains.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/PaymentMethods.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Payouts.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Plans.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Prices.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Products.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/PromotionCodes.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Quotes.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Refunds.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Reviews.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/SetupAttempts.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/SetupIntents.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/ShippingRates.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Sources.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/SubscriptionItems.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/SubscriptionSchedules.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Subscriptions.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TaxCodes.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TaxIds.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/TaxRates.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Tokens.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Topups.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/Transfers.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/resources/WebhookEndpoints.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/RequestSender.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/Webhooks.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/stripe.core.js", "../../../../node_modules/.pnpm/stripe@14.25.0/node_modules/stripe/esm/stripe.esm.worker.js", "../../../../apps/worker/src/comments.ts", "../../../../apps/worker/src/index.ts"],
  "sourceRoot": "/Users/nathanramia/Documents/Code/QuickStage/infra/.wrangler/tmp/deploy-9tVx2D",
  "sourcesContent": ["\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n", "// Save global object in a variable\nvar __global__ =\n(typeof globalThis !== 'undefined' && globalThis) ||\n(typeof self !== 'undefined' && self) ||\n(typeof global !== 'undefined' && global);\n// Create an object that extends from __global__ without the fetch function\nvar __globalThis__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = __global__.DOMException\n}\nF.prototype = __global__; // Needed for feature detection on whatwg-fetch's code\nreturn new F();\n})();\n// Wraps whatwg-fetch with a function scope to hijack the global object\n// \"globalThis\" that's going to be patched\n(function(globalThis) {\n\nvar irrelevant = (function (exports) {\n\n  /* eslint-disable no-prototype-builtins */\n  var g =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    // eslint-disable-next-line no-undef\n    (typeof global !== 'undefined' && global) ||\n    {};\n\n  var support = {\n    searchParams: 'URLSearchParams' in g,\n    iterable: 'Symbol' in g && 'iterator' in Symbol,\n    blob:\n      'FileReader' in g &&\n      'Blob' in g &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in g,\n    arrayBuffer: 'ArrayBuffer' in g\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        if (header.length != 2) {\n          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\n        }\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body._noBody) return\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);\n    var encoding = match ? match[1] : 'utf-8';\n    reader.readAsText(blob, encoding);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      /*\n        fetch-mock wraps the Response object in an ES6 Proxy to\n        provide useful test harness features such as flush. However, on\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\n        on the object before the Proxy is created. This change ensures\n        Response.bodyUsed exists on the instance, while maintaining the\n        semantic of setting Request.bodyUsed in the constructor before\n        _initBody is called.\n      */\n      // eslint-disable-next-line no-self-assign\n      this.bodyUsed = this.bodyUsed;\n      this._bodyInit = body;\n      if (!body) {\n        this._noBody = true;\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this);\n        if (isConsumed) {\n          return isConsumed\n        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else if (support.blob) {\n        return this.blob().then(readBlobAsArrayBuffer)\n      } else {\n        throw new Error('could not read as ArrayBuffer')\n      }\n    };\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    if (!(this instanceof Request)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal || (function () {\n      if ('AbortController' in g) {\n        var ctrl = new AbortController();\n        return ctrl.signal;\n      }\n    }());\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\n        // Search for a '_' parameter in the query string\n        var reParamSearch = /([?&])_=[^&]*/;\n        if (reParamSearch.test(this.url)) {\n          // If it already exists then set the value with the current time\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n        } else {\n          // Otherwise add a new '_' parameter to the end with the current time\n          var reQueryString = /\\?/;\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n        }\n      }\n    }\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n    // https://github.com/github/fetch/issues/748\n    // https://github.com/zloirock/core-js/issues/751\n    preProcessedHeaders\n      .split('\\r')\n      .map(function(header) {\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n      })\n      .forEach(function(line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n        if (key) {\n          var value = parts.join(':').trim();\n          try {\n            headers.append(key, value);\n          } catch (error) {\n            console.warn('Response ' + error.message);\n          }\n        }\n      });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!(this instanceof Response)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    if (this.status < 200 || this.status > 599) {\n      throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\n    }\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 200, statusText: ''});\n    response.ok = false;\n    response.status = 0;\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = g.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        // This check if specifically for when a user fetches a file locally from the file system\n        // Only if the status is out of a normal range\n        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {\n          options.status = 200;\n        } else {\n          options.status = xhr.status;\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        setTimeout(function() {\n          resolve(new Response(body, options));\n        }, 0);\n      };\n\n      xhr.onerror = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.ontimeout = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request timed out'));\n        }, 0);\n      };\n\n      xhr.onabort = function() {\n        setTimeout(function() {\n          reject(new exports.DOMException('Aborted', 'AbortError'));\n        }, 0);\n      };\n\n      function fixUrl(url) {\n        try {\n          return url === '' && g.location.href ? g.location.href : url\n        } catch (e) {\n          return url\n        }\n      }\n\n      xhr.open(request.method, fixUrl(request.url), true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr) {\n        if (support.blob) {\n          xhr.responseType = 'blob';\n        } else if (\n          support.arrayBuffer\n        ) {\n          xhr.responseType = 'arraybuffer';\n        }\n      }\n\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\n        var names = [];\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n          names.push(normalizeName(name));\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n        });\n        request.headers.forEach(function(value, name) {\n          if (names.indexOf(name) === -1) {\n            xhr.setRequestHeader(name, value);\n          }\n        });\n      } else {\n        request.headers.forEach(function(value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n      }\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!g.fetch) {\n    g.fetch = fetch;\n    g.Headers = Headers;\n    g.Request = Request;\n    g.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n})({});\n})(__globalThis__);\n// This is a ponyfill, so...\n__globalThis__.fetch.ponyfill = true;\ndelete __globalThis__.fetch.polyfill;\n// Choose between native implementation (__global__) or custom implementation (__globalThis__)\nvar ctx = __global__.fetch ? __global__ : __globalThis__;\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n", "/*!\n * MIT License\n * \n * Copyright (c) 2017-2024 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\n'use strict';\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f\\s]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexports.BufferSourceConverter = BufferSourceConverter;\nexports.Convert = Convert;\nexports.assign = assign;\nexports.combine = combine;\nexports.isEqual = isEqual;\n", "'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction canTrustToString(obj) {\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\n}\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\n* By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('./list.d.ts').listGetNode} */\n// eslint-disable-next-line consistent-return\nvar listGetNode = function (list, key, isDelete) {\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\t// eslint-disable-next-line eqeqeq\n\tfor (; (curr = prev.next) != null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tif (!isDelete) {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\t}\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('./list.d.ts').listGet} */\nvar listGet = function (objects, key) {\n\tif (!objects) {\n\t\treturn void undefined;\n\t}\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('./list.d.ts').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('./list.d.ts').listHas} */\nvar listHas = function (objects, key) {\n\tif (!objects) {\n\t\treturn false;\n\t}\n\treturn !!listGetNode(objects, key);\n};\n/** @type {import('./list.d.ts').listDelete} */\n// eslint-disable-next-line consistent-return\nvar listDelete = function (objects, key) {\n\tif (objects) {\n\t\treturn listGetNode(objects, key, true);\n\t}\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannelList() {\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tvar root = $o && $o.next;\n\t\t\tvar deletedNode = listDelete($o, key);\n\t\t\tif (deletedNode && root && root === deletedNode) {\n\t\t\t\t$o = void undefined;\n\t\t\t}\n\t\t\treturn !!deletedNode;\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn listGet($o, key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn listHas($o, key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$o) {\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t$o = {\n\t\t\t\t\tnext: void undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n", "'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n", "'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n", "'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n", "'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n", "'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n", "'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n", "'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n", "'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n", "'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n", "'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n", "'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n", "'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n", "'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n", "'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n", "'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n", "'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n", "'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n", "'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n", "'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n", "'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n", "'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n", "'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n", "'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n", "'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $Map = GetIntrinsic('%Map%', true);\n\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\nvar $mapGet = callBound('Map.prototype.get', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\nvar $mapSet = callBound('Map.prototype.set', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapHas = callBound('Map.prototype.has', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapDelete = callBound('Map.prototype.delete', true);\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\nvar $mapSize = callBound('Map.prototype.size', true);\n\n/** @type {import('.')} */\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {Map<K, V> | undefined} */ var $m;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tif ($m) {\n\t\t\t\tvar result = $mapDelete($m, key);\n\t\t\t\tif ($mapSize($m) === 0) {\n\t\t\t\t\t$m = void undefined;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($m) {\n\t\t\t\treturn $mapGet($m, key);\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($m) {\n\t\t\t\treturn $mapHas($m, key);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$m) {\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\n\t\t\t\t$m = new $Map();\n\t\t\t}\n\t\t\t$mapSet($m, key, value);\n\t\t}\n\t};\n\n\t// @ts-expect-error TODO: figure out why TS is erroring here\n\treturn channel;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\nvar getSideChannelMap = require('side-channel-map');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\n\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\n\n/** @type {import('.')} */\nmodule.exports = $WeakMap\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\n\t\t/** @type {Channel | undefined} */ var $m;\n\n\t\t/** @type {Channel} */\n\t\tvar channel = {\n\t\t\tassert: function (key) {\n\t\t\t\tif (!channel.has(key)) {\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t\t}\n\t\t\t},\n\t\t\t'delete': function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif ($m) {\n\t\t\t\t\t\treturn $m['delete'](key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $m && $m.get(key);\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!$m && $m.has(key);\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif (!$wm) {\n\t\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t\t}\n\t\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif (!$m) {\n\t\t\t\t\t\t$m = getSideChannelMap();\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error TODO: figure out why this is erroring\n\t\treturn channel;\n\t}\n\t: getSideChannelMap;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    filter: void undefined,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && key && typeof key.value !== 'undefined'\n            ? key.value\n            : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\\./g, '%2E') : String(key);\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (options.skipNulls && value === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            value,\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false,\n    throwOnLimitExceeded: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(\n        options.delimiter,\n        options.throwOnLimitExceeded ? limit + 1 : limit\n    );\n\n    if (options.throwOnLimitExceeded && parts.length > limit) {\n        throw new RangeError('Parameter limit exceeded. Only ' + limit + ' parameter' + (limit === 1 ? '' : 's') + ' allowed.');\n    }\n\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n\n            val = utils.maybeMap(\n                parseArrayValue(\n                    part.slice(pos + 1),\n                    options,\n                    isArray(obj[key]) ? obj[key].length : 0\n                ),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : utils.combine([], leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    if (typeof opts.throwOnLimitExceeded !== 'undefined' && typeof opts.throwOnLimitExceeded !== 'boolean') {\n        throw new TypeError('`throwOnLimitExceeded` option must be a boolean');\n    }\n\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === 'boolean' ? opts.throwOnLimitExceeded : false\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_, tryDecode } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0, len = signatureBinStr.length; i < len; i++) {\n      signature[i] = signatureBinStr.charCodeAt(i);\n    }\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  if (name && cookie.indexOf(name) === -1) {\n    return {};\n  }\n  const pairs = cookie.trim().split(\";\");\n  const parsedCookie = {};\n  for (let pairStr of pairs) {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1) {\n      continue;\n    }\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\n      continue;\n    }\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\n      cookieValue = cookieValue.slice(1, -1);\n    }\n    if (validCookieValueRegEx.test(cookieValue)) {\n      parsedCookie[cookieName] = cookieValue.indexOf(\"%\") !== -1 ? tryDecode(cookieValue, decodeURIComponent_) : cookieValue;\n      if (name) {\n        break;\n      }\n    }\n  }\n  return parsedCookie;\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1) {\n      continue;\n    }\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\n      continue;\n    }\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (name.startsWith(\"__Secure-\") && !opt.secure) {\n    throw new Error(\"__Secure- Cookie must have Secure attributes\");\n  }\n  if (name.startsWith(\"__Host-\")) {\n    if (!opt.secure) {\n      throw new Error(\"__Host- Cookie must have Secure attributes\");\n    }\n    if (opt.path !== \"/\") {\n      throw new Error('__Host- Cookie must have Path attributes with \"/\"');\n    }\n    if (opt.domain) {\n      throw new Error(\"__Host- Cookie must not have Domain attributes\");\n    }\n  }\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    if (opt.maxAge > 3456e4) {\n      throw new Error(\n        \"Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.\"\n      );\n    }\n    cookie += `; Max-Age=${opt.maxAge | 0}`;\n  }\n  if (opt.domain && opt.prefix !== \"host\") {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    if (opt.expires.getTime() - Date.now() > 3456e7) {\n      throw new Error(\n        \"Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.\"\n      );\n    }\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;\n  }\n  if (opt.priority) {\n    cookie += `; Priority=${opt.priority.charAt(0).toUpperCase() + opt.priority.slice(1)}`;\n  }\n  if (opt.partitioned) {\n    if (!opt.secure) {\n      throw new Error(\"Partitioned Cookie must have Secure attributes\");\n    }\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/helper/cookie/index.ts\nimport { parse, parseSigned, serialize, serializeSigned } from \"../../utils/cookie.js\";\nvar getCookie = (c, key, prefix) => {\n  const cookie = c.req.raw.headers.get(\"Cookie\");\n  if (typeof key === \"string\") {\n    if (!cookie) {\n      return void 0;\n    }\n    let finalKey = key;\n    if (prefix === \"secure\") {\n      finalKey = \"__Secure-\" + key;\n    } else if (prefix === \"host\") {\n      finalKey = \"__Host-\" + key;\n    }\n    const obj2 = parse(cookie, finalKey);\n    return obj2[finalKey];\n  }\n  if (!cookie) {\n    return {};\n  }\n  const obj = parse(cookie);\n  return obj;\n};\nvar getSignedCookie = async (c, secret, key, prefix) => {\n  const cookie = c.req.raw.headers.get(\"Cookie\");\n  if (typeof key === \"string\") {\n    if (!cookie) {\n      return void 0;\n    }\n    let finalKey = key;\n    if (prefix === \"secure\") {\n      finalKey = \"__Secure-\" + key;\n    } else if (prefix === \"host\") {\n      finalKey = \"__Host-\" + key;\n    }\n    const obj2 = await parseSigned(cookie, secret, finalKey);\n    return obj2[finalKey];\n  }\n  if (!cookie) {\n    return {};\n  }\n  const obj = await parseSigned(cookie, secret);\n  return obj;\n};\nvar generateCookie = (name, value, opt) => {\n  let cookie;\n  if (opt?.prefix === \"secure\") {\n    cookie = serialize(\"__Secure-\" + name, value, { path: \"/\", ...opt, secure: true });\n  } else if (opt?.prefix === \"host\") {\n    cookie = serialize(\"__Host-\" + name, value, {\n      ...opt,\n      path: \"/\",\n      secure: true,\n      domain: void 0\n    });\n  } else {\n    cookie = serialize(name, value, { path: \"/\", ...opt });\n  }\n  return cookie;\n};\nvar setCookie = (c, name, value, opt) => {\n  const cookie = generateCookie(name, value, opt);\n  c.header(\"Set-Cookie\", cookie, { append: true });\n};\nvar generateSignedCookie = async (name, value, secret, opt) => {\n  let cookie;\n  if (opt?.prefix === \"secure\") {\n    cookie = await serializeSigned(\"__Secure-\" + name, value, secret, {\n      path: \"/\",\n      ...opt,\n      secure: true\n    });\n  } else if (opt?.prefix === \"host\") {\n    cookie = await serializeSigned(\"__Host-\" + name, value, secret, {\n      ...opt,\n      path: \"/\",\n      secure: true,\n      domain: void 0\n    });\n  } else {\n    cookie = await serializeSigned(name, value, secret, { path: \"/\", ...opt });\n  }\n  return cookie;\n};\nvar setSignedCookie = async (c, name, value, secret, opt) => {\n  const cookie = await generateSignedCookie(name, value, secret, opt);\n  c.header(\"set-cookie\", cookie, { append: true });\n};\nvar deleteCookie = (c, name, opt) => {\n  const deletedCookie = getCookie(c, name, opt?.prefix);\n  setCookie(c, name, \"\", { ...opt, maxAge: 0 });\n  return deletedCookie;\n};\nexport {\n  deleteCookie,\n  generateCookie,\n  generateSignedCookie,\n  getCookie,\n  getSignedCookie,\n  setCookie,\n  setSignedCookie\n};\n", "export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n", "export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n", "import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n", "import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n", "import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n", "export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n", "import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n", "import { z } from 'zod';\n\nexport const SnapshotFileSchema = z.object({\n  p: z.string(),\n  ct: z.string(),\n  sz: z.number().int().nonnegative(),\n  h: z.string().min(32),\n});\n\nexport const SnapshotCapsSchema = z.object({\n  maxBytes: z.number().int().positive(),\n  maxFile: z.number().int().positive(),\n  maxDays: z.number().int().positive(),\n});\n\nexport const SnapshotMetadataSchema = z.object({\n  id: z.string(),\n  ownerUid: z.string(),\n  createdAt: z.number().int(),\n  expiresAt: z.number().int(),\n  passwordHash: z.string(),\n  totalBytes: z.number().int(),\n  files: z.array(SnapshotFileSchema),\n  views: z.object({ m: z.string(), n: z.number().int() }),\n  commentsCount: z.number().int(),\n  public: z.boolean(),\n  caps: SnapshotCapsSchema,\n  status: z.enum(['creating', 'active', 'expired']).optional(),\n});\n\n// Snapshot creation schema\nexport const CreateSnapshotBodySchema = z.object({\n  expiryDays: z.number().min(1).max(90).optional().default(7),\n  password: z.string().optional(),\n  public: z.boolean().optional().default(false),\n});\n\n// Snapshot finalization schema\nexport const FinalizeSnapshotBodySchema = z.object({\n  id: z.string(),\n  totalBytes: z.number().positive(),\n  files: z.array(z.object({\n    p: z.string(), // path\n    ct: z.string(), // content-type\n    sz: z.number().positive(), // size\n    h: z.string(), // sha256 hash\n  })),\n});\n\n// Comment submission schema\nexport const CommentSubmissionSchema = z.object({\n  id: z.string(),\n  text: z.string().min(1).max(1000),\n  nick: z.string().max(40).optional(),\n});\n\n// Password verification schema\nexport const PasswordVerificationSchema = z.object({\n  password: z.string().min(1),\n});\n\n// User authentication schema\nexport const UserAuthSchema = z.object({\n  name: z.string().min(1).max(100),\n});\n\n// WebAuthn response schema\nexport const WebAuthnResponseSchema = z.object({\n  name: z.string(),\n  response: z.any(), // WebAuthn credential\n});\n\nexport type CreateSnapshotBody = z.infer<typeof CreateSnapshotBodySchema>;\nexport type FinalizeSnapshotBody = z.infer<typeof FinalizeSnapshotBodySchema>;\nexport type CommentSubmission = z.infer<typeof CommentSubmissionSchema>;\nexport type PasswordVerification = z.infer<typeof PasswordVerificationSchema>;\nexport type UserAuth = z.infer<typeof UserAuthSchema>;\nexport type WebAuthnResponse = z.infer<typeof WebAuthnResponseSchema>;\n\n\n", "export type SnapshotFile = {\n  p: string; // path\n  ct: string; // content-type\n  sz: number; // size bytes\n  h: string; // sha256 hex\n};\n\nexport type SnapshotCaps = {\n  maxBytes: number;\n  maxFile: number;\n  maxDays: number;\n};\n\nexport type SnapshotMetadata = {\n  id: string;\n  ownerUid: string;\n  createdAt: number;\n  expiresAt: number;\n  passwordHash: string;\n  totalBytes: number;\n  files: SnapshotFile[];\n  views: { m: string; n: number };\n  commentsCount: number;\n  public: boolean;\n  spaFallback?: boolean;\n  caps: SnapshotCaps;\n  status?: 'creating' | 'active' | 'expired';\n};\n\nexport const DEFAULT_CAPS: SnapshotCaps = {\n  maxBytes: 20 * 1024 * 1024,\n  maxFile: 5 * 1024 * 1024,\n  maxDays: 14,\n};\n\nexport const ALLOW_MIME_PREFIXES = [\n  'text/html',\n  'text/css',\n  'text/javascript',\n  'application/javascript',\n  'application/json',\n  'image/png',\n  'image/jpeg',\n  'image/svg+xml',\n  'image/gif',\n  'image/webp',\n  'font/woff2',\n  'application/wasm',\n];\n\nexport const VIEWER_COOKIE_PREFIX = 'ps_gate_';\nexport const SESSION_COOKIE_NAME = 'ps_sess';\n\n\n", "export async function sha256Hex(input: string | ArrayBuffer | Uint8Array): Promise<string> {\n  if (typeof input === 'string') {\n    input = new TextEncoder().encode(input);\n  }\n  \n  let dataToHash: BufferSource;\n  if (input instanceof Uint8Array) {\n    dataToHash = input as unknown as BufferSource;\n  } else if (input instanceof ArrayBuffer) {\n    dataToHash = input;\n  } else {\n    // This should never happen given the type signature, but TypeScript needs this\n    dataToHash = input;\n  }\n  \n  const hashBuf = await crypto.subtle.digest('SHA-256', dataToHash);\n  const bytes = new Uint8Array(hashBuf);\n  return Array.from(bytes).map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n\nexport function generateIdBase62(numBytes = 16): string {\n  const bytes = crypto.getRandomValues(new Uint8Array(numBytes));\n  const alphabet = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let out = '';\n  for (let i = 0; i < bytes.length; i++) {\n    const val = bytes[i] ?? 0;\n    const idx = val % 62;\n    out += alphabet.charAt(idx);\n  }\n  return out;\n}\n\nexport function randomHex(bytesLen: number): string {\n  const bytes = crypto.getRandomValues(new Uint8Array(bytesLen));\n  return Array.from(bytes).map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n\nexport async function hashPasswordArgon2id(password: string, saltHex: string): Promise<string> {\n  // Use WebCrypto scrypt as placeholder since Argon2 is not natively available in Workers.\n  // We will use scrypt-js for portability.\n  // Import scrypt-js; ensure it is included in dependencies\n  const { scrypt } = await import('scrypt-js');\n  const N = 1 << 15;\n  const r = 8;\n  const p = 1;\n  const keyLen = 32;\n  const pw = new TextEncoder().encode(password);\n  const salt = hexToBytes(saltHex);\n  const dk = await scrypt(pw, salt, N, r, p, keyLen);\n  return 'scrypt$' + bytesToHex(dk) + '$' + saltHex;\n}\n\nexport async function verifyPasswordHash(password: string, hash: string): Promise<boolean> {\n  if (!hash.startsWith('scrypt$')) return false;\n  const [, hashHex, saltHex] = hash.split('$');\n  if (!saltHex) return false;\n  const recomputed = await hashPasswordArgon2id(password, saltHex);\n  return recomputed === `scrypt$${hashHex}$${saltHex}`;\n}\n\nexport function bytesToHex(bytes: Uint8Array): string {\n  return Array.from(bytes)\n    .map((b) => b.toString(16).padStart(2, '0'))\n    .join('');\n}\n\nexport function hexToBytes(hex: string): Uint8Array {\n  const out = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < out.length; i++) {\n    out[i] = parseInt(hex.substr(i * 2, 2), 16);\n  }\n  return out;\n}\n\nexport function nowMs(): number {\n  return Date.now();\n}\n\n\n", "function base64ToBytes(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const out = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; i++) out[i] = bin.charCodeAt(i);\n  return out;\n}\n\nfunction bytesToBase64Url(bytes: Uint8Array): string {\n  let bin = '';\n  for (const b of bytes) bin += String.fromCharCode(b);\n  const b64 = btoa(bin).replace(/=+$/, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n  return b64;\n}\n\nfunction stringToBase64Url(s: string): string {\n  const enc = new TextEncoder();\n  return bytesToBase64Url(enc.encode(s));\n}\n\nasync function hmacSha256Base64Url(message: string, secretBase64: string): Promise<string> {\n  const enc = new TextEncoder();\n  const keyData = base64ToBytes(secretBase64);\n  const cryptoKey = await crypto.subtle.importKey(\n    'raw',\n    keyData as unknown as ArrayBuffer,\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign', 'verify'],\n  );\n  const sig = await crypto.subtle.sign('HMAC', cryptoKey, enc.encode(message));\n  return bytesToBase64Url(new Uint8Array(sig));\n}\n\nexport async function signSession(payload: object, secret: string, ttlSeconds: number): Promise<string> {\n  const data = { ...payload, exp: Math.floor(Date.now() / 1000) + ttlSeconds };\n  const json = JSON.stringify(data);\n  const b64 = stringToBase64Url(json);\n  const sig = await hmacSha256Base64Url(b64, secret);\n  return `${b64}.${sig}`;\n}\n\nexport async function verifySession(token: string, secret: string): Promise<null | any> {\n  const [b64, sig] = token.split('.');\n  if (!b64 || !sig) return null;\n  const expected = await hmacSha256Base64Url(b64, secret);\n  if (sig !== expected) return null;\n  const padded = b64.replace(/-/g, '+').replace(/_/g, '/');\n  const bin = atob(padded);\n  let json = '';\n  for (let i = 0; i < bin.length; i++) json += String.fromCharCode(bin.charCodeAt(i));\n  const data = JSON.parse(json);\n  if (typeof data.exp !== 'number' || data.exp < Math.floor(Date.now() / 1000)) return null;\n  return data;\n}\n\nexport function generatePassword(length = 20): string {\n  const alphabet = 'ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789';\n  const buf = new Uint8Array(length);\n  crypto.getRandomValues(buf);\n  let out = '';\n  for (let i = 0; i < length; i++) {\n    const val = buf[i] ?? 0;\n    const idx = val % alphabet.length;\n    out += alphabet.charAt(idx);\n  }\n  return out;\n}\n\n\n", "// Minimal AWS SigV4 presign for R2 S3 API\n// URL format: https://<accountid>.r2.cloudflarestorage.com/<bucket>/<key>\n\nfunction toISO8601Basic(date: Date): string {\n  const y = date.getUTCFullYear();\n  const m = String(date.getUTCMonth() + 1).padStart(2, '0');\n  const d = String(date.getUTCDate()).padStart(2, '0');\n  const hh = String(date.getUTCHours()).padStart(2, '0');\n  const mm = String(date.getUTCMinutes()).padStart(2, '0');\n  const ss = String(date.getUTCSeconds()).padStart(2, '0');\n  return `${y}${m}${d}T${hh}${mm}${ss}Z`;\n}\n\nfunction hmac(key: ArrayBuffer, data: string): Promise<ArrayBuffer> {\n  const enc = new TextEncoder();\n  return crypto.subtle.importKey('raw', key, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign']).then((k) =>\n    crypto.subtle.sign('HMAC', k, enc.encode(data)),\n  );\n}\n\nasync function hmacChain(key: Uint8Array, parts: string[]): Promise<Uint8Array> {\n  let k: ArrayBuffer = key.buffer.slice(0) as ArrayBuffer;\n  for (const p of parts) {\n    k = await hmac(k, p);\n  }\n  return new Uint8Array(k);\n}\n\nasync function sha256Hex(data: string): Promise<string> {\n  const enc = new TextEncoder();\n  const hash = await crypto.subtle.digest('SHA-256', enc.encode(data));\n  return Array.from(new Uint8Array(hash)).map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n\nexport async function presignR2PutURL(params: {\n  accountId: string;\n  bucket: string;\n  key: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  contentType?: string;\n  expiresSeconds?: number; // <= 600\n}): Promise<string> {\n  const { accountId, bucket, key, accessKeyId, secretAccessKey, contentType, expiresSeconds = 600 } = params;\n  const host = `${accountId}.r2.cloudflarestorage.com`;\n  const method = 'PUT';\n  const now = new Date();\n  const amzDate = toISO8601Basic(now);\n  const datestamp = amzDate.slice(0, 8);\n  const region = 'auto';\n  const service = 's3';\n  const algorithm = 'AWS4-HMAC-SHA256';\n  const credentialScope = `${datestamp}/${region}/${service}/aws4_request`;\n  const canonicalUri = `/${bucket}/${encodeURIComponent(key)}`;\n  \n  // Build signed headers and canonical headers\n  const headers: Record<string, string> = {\n    host: host,\n  };\n  \n  if (contentType && contentType.trim() !== '') {\n    headers['content-type'] = contentType;\n  }\n  \n  const signedHeaders = Object.keys(headers).sort().join(';');\n  const canonicalHeaders = Object.keys(headers)\n    .sort()\n    .map(k => `${k}:${headers[k]!}`)\n    .join('\\n') + '\\n';\n  \n  const query: Record<string, string> = {\n    'X-Amz-Algorithm': algorithm,\n    'X-Amz-Credential': `${accessKeyId}/${credentialScope}`,\n    'X-Amz-Date': amzDate,\n    'X-Amz-Expires': String(expiresSeconds),\n    'X-Amz-SignedHeaders': signedHeaders,\n  };\n  \n  const canonicalQuery = Object.keys(query)\n    .sort()\n    .map((k) => `${k}=${encodeURIComponent(query[k]!)}`)\n    .join('&');\n  \n  const payloadHash = await sha256Hex('');\n  const canonicalRequest = `${method}\\n${canonicalUri}\\n${canonicalQuery}\\n${canonicalHeaders}\\n${signedHeaders}\\n${payloadHash}`;\n  const stringToSign = `${algorithm}\\n${amzDate}\\n${credentialScope}\\n${await sha256Hex(canonicalRequest)}`;\n  const signingKey = await hmacChain(new TextEncoder().encode('AWS4' + secretAccessKey), [datestamp, region, service, 'aws4_request']);\n  const sigBuf = await hmac(signingKey.buffer.slice(0) as ArrayBuffer, stringToSign);\n  const signature = Array.from(new Uint8Array(sigBuf)).map((b) => b.toString(16).padStart(2, '0')).join('');\n  return `https://${host}${canonicalUri}?${canonicalQuery}&X-Amz-Signature=${signature}`;\n}\n\n\n", "// Auto-generated by release workflow - DO NOT EDIT MANUALLY\n// This file is automatically updated when the extension version changes\n\nexport function getExtensionVersion() {\n  return {\n    version: '0.0.26', // Synced from extension/package.json\n    buildDate: new Date().toISOString(),\n    filename: 'quickstage.vsix'\n  };\n}\n", "import { base64 } from '../../deps.js';\n/**\n * Decode from a Base64URL-encoded string to an ArrayBuffer. Best used when converting a\n * credential ID from a JSON string to an ArrayBuffer, like in allowCredentials or\n * excludeCredentials.\n *\n * @param buffer Value to decode from base64\n * @param to (optional) The decoding to use, in case it's desirable to decode from base64 instead\n */\nexport function toBuffer(base64urlString, from = 'base64url') {\n    const _buffer = base64.toArrayBuffer(base64urlString, from === 'base64url');\n    return new Uint8Array(_buffer);\n}\n/**\n * Encode the given array buffer into a Base64URL-encoded string. Ideal for converting various\n * credential response ArrayBuffers to string for sending back to the server as JSON.\n *\n * @param buffer Value to encode to base64\n * @param to (optional) The encoding to use, in case it's desirable to encode to base64 instead\n */\nexport function fromBuffer(buffer, to = 'base64url') {\n    return base64.fromArrayBuffer(buffer, to === 'base64url');\n}\n/**\n * Convert a base64url string into base64\n */\nexport function toBase64(base64urlString) {\n    const fromBase64Url = base64.toArrayBuffer(base64urlString, true);\n    const toBase64 = base64.fromArrayBuffer(fromBase64Url);\n    return toBase64;\n}\n/**\n * Encode a UTF-8 string to base64url\n */\nexport function fromUTF8String(utf8String) {\n    return base64.fromString(utf8String, true);\n}\n/**\n * Decode a base64url string into its original UTF-8 string\n */\nexport function toUTF8String(base64urlString) {\n    return base64.toString(base64urlString, true);\n}\n/**\n * Confirm that the string is encoded into base64\n */\nexport function isBase64(input) {\n    return base64.validate(input, false);\n}\n/**\n * Confirm that the string is encoded into base64url, with support for optional padding\n */\nexport function isBase64URL(input) {\n    // Trim padding characters from the string if present\n    input = trimPadding(input);\n    return base64.validate(input, true);\n}\n/**\n * Remove optional padding from a base64url-encoded string\n */\nexport function trimPadding(input) {\n    return input.replace(/=/g, '');\n}\n", "export { CBORTag, decodeCBOR, decodePartialCBOR, encodeCBOR, } from \"./cbor/cbor.js\";\n", "export function decodeLength(data, argument, index) {\n    if (argument < 24) {\n        return [argument, 1];\n    }\n    const remainingDataLength = data.byteLength - index - 1;\n    const view = new DataView(data.buffer, index + 1);\n    let output;\n    let bytes = 0;\n    switch (argument) {\n        case 24: {\n            if (remainingDataLength > 0) {\n                output = view.getUint8(0);\n                bytes = 2;\n            }\n            break;\n        }\n        case 25: {\n            if (remainingDataLength > 1) {\n                output = view.getUint16(0, false);\n                bytes = 3;\n            }\n            break;\n        }\n        case 26: {\n            if (remainingDataLength > 3) {\n                output = view.getUint32(0, false);\n                bytes = 5;\n            }\n            break;\n        }\n        case 27: {\n            if (remainingDataLength > 7) {\n                const bigOutput = view.getBigUint64(0, false);\n                // Bound it to [24, MAX_SAFE_INTEGER], where it is safe\n                // to encode as a javascript number\n                if (bigOutput >= 24n && bigOutput <= Number.MAX_SAFE_INTEGER) {\n                    return [Number(bigOutput), 9];\n                }\n            }\n            break;\n        }\n    }\n    if (output && output >= 24) {\n        return [output, bytes];\n    }\n    throw new Error(\"Length not supported or not well formed\");\n}\nexport const MAJOR_TYPE_UNSIGNED_INTEGER = 0;\nexport const MAJOR_TYPE_NEGATIVE_INTEGER = 1;\nexport const MAJOR_TYPE_BYTE_STRING = 2;\nexport const MAJOR_TYPE_TEXT_STRING = 3;\nexport const MAJOR_TYPE_ARRAY = 4;\nexport const MAJOR_TYPE_MAP = 5;\nexport const MAJOR_TYPE_TAG = 6;\nexport const MAJOR_TYPE_SIMPLE_OR_FLOAT = 7;\nexport function encodeLength(major, argument) {\n    const majorEncoded = major << 5;\n    if (argument < 0) {\n        throw new Error(\"CBOR Data Item argument must not be negative\");\n    }\n    // Convert to bigint first.\n    // Encode integers around and above 32 bits in big endian / network byte order\n    // is unreliable in javascript.\n    // https://tc39.es/ecma262/#sec-bitwise-shift-operators\n    // Bit shifting operations result in 32 bit signed numbers\n    let bigintArgument;\n    if (typeof argument == \"number\") {\n        if (!Number.isInteger(argument)) {\n            throw new Error(\"CBOR Data Item argument must be an integer\");\n        }\n        bigintArgument = BigInt(argument);\n    }\n    else {\n        bigintArgument = argument;\n    }\n    // Negative 0 is not a thing\n    if (major == MAJOR_TYPE_NEGATIVE_INTEGER) {\n        if (bigintArgument == 0n) {\n            throw new Error(\"CBOR Data Item argument cannot be zero when negative\");\n        }\n        bigintArgument = bigintArgument - 1n;\n    }\n    if (bigintArgument > 18446744073709551615n) {\n        throw new Error(\"CBOR number out of range\");\n    }\n    // Encode into 64 bits and extract the tail\n    const buffer = new Uint8Array(8);\n    const view = new DataView(buffer.buffer);\n    view.setBigUint64(0, bigintArgument, false);\n    if (bigintArgument <= 23) {\n        return [majorEncoded | buffer[7]];\n    }\n    else if (bigintArgument <= 255) {\n        return [majorEncoded | 24, buffer[7]];\n    }\n    else if (bigintArgument <= 65535) {\n        return [majorEncoded | 25, ...buffer.slice(6)];\n    }\n    else if (bigintArgument <= 4294967295) {\n        return [\n            majorEncoded | 26,\n            ...buffer.slice(4),\n        ];\n    }\n    else {\n        return [\n            majorEncoded | 27,\n            ...buffer,\n        ];\n    }\n}\n", "import { decodeLength, encodeLength, MAJOR_TYPE_ARRAY, MAJOR_TYPE_BYTE_STRING, MAJOR_TYPE_MAP, MAJOR_TYPE_NEGATIVE_INTEGER, MAJOR_TYPE_SIMPLE_OR_FLOAT, MAJOR_TYPE_TAG, MAJOR_TYPE_TEXT_STRING, MAJOR_TYPE_UNSIGNED_INTEGER, } from \"./cbor_internal.js\";\n/**\n * A value which is wrapped with a CBOR Tag.\n * Several tags are registered with defined meanings like 0 for a date string.\n * These meanings are **not interpreted** when decoded or encoded.\n *\n * This class is an immutable record.\n * If the tag number or value needs to change, then construct a new tag\n */\nexport class CBORTag {\n    /**\n     * Wrap a value with a tag number.\n     * When encoded, this tag will be attached to the value.\n     *\n     * @param tag Tag number\n     * @param value Wrapped value\n     */\n    constructor(tag, value) {\n        Object.defineProperty(this, \"tagId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tagValue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tagId = tag;\n        this.tagValue = value;\n    }\n    /**\n     * Read the tag number\n     */\n    get tag() {\n        return this.tagId;\n    }\n    /**\n     * Read the value\n     */\n    get value() {\n        return this.tagValue;\n    }\n}\nfunction decodeUnsignedInteger(data, argument, index) {\n    return decodeLength(data, argument, index);\n}\nfunction decodeNegativeInteger(data, argument, index) {\n    const [value, length] = decodeUnsignedInteger(data, argument, index);\n    return [-value - 1, length];\n}\nfunction decodeByteString(data, argument, index) {\n    const [lengthValue, lengthConsumed] = decodeLength(data, argument, index);\n    const dataStartIndex = index + lengthConsumed;\n    return [\n        new Uint8Array(data.buffer.slice(dataStartIndex, dataStartIndex + lengthValue)),\n        lengthConsumed + lengthValue,\n    ];\n}\nconst TEXT_DECODER = new TextDecoder();\nfunction decodeString(data, argument, index) {\n    const [value, length] = decodeByteString(data, argument, index);\n    return [TEXT_DECODER.decode(value), length];\n}\nfunction decodeArray(data, argument, index) {\n    if (argument === 0) {\n        return [[], 1];\n    }\n    const [length, lengthConsumed] = decodeLength(data, argument, index);\n    let consumedLength = lengthConsumed;\n    const value = [];\n    for (let i = 0; i < length; i++) {\n        const remainingDataLength = data.byteLength - index - consumedLength;\n        if (remainingDataLength <= 0) {\n            throw new Error(\"array is not supported or well formed\");\n        }\n        const [decodedValue, consumed] = decodeNext(data, index + consumedLength);\n        value.push(decodedValue);\n        consumedLength += consumed;\n    }\n    return [value, consumedLength];\n}\nconst MAP_ERROR = \"Map is not supported or well formed\";\nfunction decodeMap(data, argument, index) {\n    if (argument === 0) {\n        return [new Map(), 1];\n    }\n    const [length, lengthConsumed] = decodeLength(data, argument, index);\n    let consumedLength = lengthConsumed;\n    const result = new Map();\n    for (let i = 0; i < length; i++) {\n        let remainingDataLength = data.byteLength - index - consumedLength;\n        if (remainingDataLength <= 0) {\n            throw new Error(MAP_ERROR);\n        }\n        // Load key\n        const [key, keyConsumed] = decodeNext(data, index + consumedLength);\n        consumedLength += keyConsumed;\n        remainingDataLength -= keyConsumed;\n        // Check that there's enough to have a value\n        if (remainingDataLength <= 0) {\n            throw new Error(MAP_ERROR);\n        }\n        // Technically CBOR maps can have any type as the key, and so can JS Maps\n        // However, JS Maps can only reference such keys as references which would\n        // require key iteration and pattern matching.\n        // For simplicity, since such keys are not in use with WebAuthn, this\n        // capability is not implemented and the types are restricted to strings\n        // and numbers.\n        if (typeof key !== \"string\" && typeof key !== \"number\") {\n            throw new Error(MAP_ERROR);\n        }\n        // CBOR Maps are not well formed if there are duplicate keys\n        if (result.has(key)) {\n            throw new Error(MAP_ERROR);\n        }\n        // Load value\n        const [value, valueConsumed] = decodeNext(data, index + consumedLength);\n        consumedLength += valueConsumed;\n        result.set(key, value);\n    }\n    return [result, consumedLength];\n}\nfunction decodeFloat16(data, index) {\n    if (index + 3 > data.byteLength) {\n        throw new Error(\"CBOR stream ended before end of Float 16\");\n    }\n    // Skip the first byte\n    const result = data.getUint16(index + 1, false);\n    // A minimal selection of supported values\n    if (result == 0x7c00) {\n        return [Infinity, 3];\n    }\n    else if (result == 0x7e00) {\n        return [NaN, 3];\n    }\n    else if (result == 0xfc00) {\n        return [-Infinity, 3];\n    }\n    throw new Error(\"Float16 data is unsupported\");\n}\nfunction decodeFloat32(data, index) {\n    if (index + 5 > data.byteLength) {\n        throw new Error(\"CBOR stream ended before end of Float 32\");\n    }\n    // Skip the first byte\n    const result = data.getFloat32(index + 1, false);\n    // First byte + 4 byte float\n    return [result, 5];\n}\nfunction decodeFloat64(data, index) {\n    if (index + 9 > data.byteLength) {\n        throw new Error(\"CBOR stream ended before end of Float 64\");\n    }\n    // Skip the first byte\n    const result = data.getFloat64(index + 1, false);\n    // First byte + 8 byte float\n    return [result, 9];\n}\nfunction decodeTag(data, argument, index) {\n    const [tag, tagBytes] = decodeLength(data, argument, index);\n    const [value, valueBytes] = decodeNext(data, index + tagBytes);\n    return [new CBORTag(tag, value), tagBytes + valueBytes];\n}\nfunction decodeNext(data, index) {\n    if (index >= data.byteLength) {\n        throw new Error(\"CBOR stream ended before tag value\");\n    }\n    const byte = data.getUint8(index);\n    const majorType = byte >> 5;\n    const argument = byte & 0x1f;\n    switch (majorType) {\n        case MAJOR_TYPE_UNSIGNED_INTEGER: {\n            return decodeUnsignedInteger(data, argument, index);\n        }\n        case MAJOR_TYPE_NEGATIVE_INTEGER: {\n            return decodeNegativeInteger(data, argument, index);\n        }\n        case MAJOR_TYPE_BYTE_STRING: {\n            return decodeByteString(data, argument, index);\n        }\n        case MAJOR_TYPE_TEXT_STRING: {\n            return decodeString(data, argument, index);\n        }\n        case MAJOR_TYPE_ARRAY: {\n            return decodeArray(data, argument, index);\n        }\n        case MAJOR_TYPE_MAP: {\n            return decodeMap(data, argument, index);\n        }\n        case MAJOR_TYPE_TAG: {\n            return decodeTag(data, argument, index);\n        }\n        case MAJOR_TYPE_SIMPLE_OR_FLOAT: {\n            switch (argument) {\n                case 20:\n                    return [false, 1];\n                case 21:\n                    return [true, 1];\n                case 22:\n                    return [null, 1];\n                case 23:\n                    return [undefined, 1];\n                // 24: Simple value (value 32..255 in following byte)\n                case 25: // IEEE 754 Half-Precision Float (16 bits follow)\n                    return decodeFloat16(data, index);\n                case 26: // IEEE 754 Single-Precision Float (32 bits follow)\n                    return decodeFloat32(data, index);\n                case 27: // IEEE 754 Double-Precision Float (64 bits follow)\n                    return decodeFloat64(data, index);\n                // 28-30: Reserved, not well-formed in the present document\n                // 31: \"break\" stop code for indefinite-length items\n            }\n        }\n    }\n    throw new Error(`Unsupported or not well formed at ${index}`);\n}\nfunction encodeSimple(data) {\n    if (data === true) {\n        return 0xf5;\n    }\n    else if (data === false) {\n        return 0xf4;\n    }\n    else if (data === null) {\n        return 0xf6;\n    }\n    // Else undefined\n    return 0xf7;\n}\nfunction encodeFloat(data) {\n    if (Math.fround(data) == data || !Number.isFinite(data) || Number.isNaN(data)) {\n        // Float32\n        const output = new Uint8Array(5);\n        output[0] = 0xfa;\n        const view = new DataView(output.buffer);\n        view.setFloat32(1, data, false);\n        return output;\n    }\n    else {\n        // Float64\n        const output = new Uint8Array(9);\n        output[0] = 0xfb;\n        const view = new DataView(output.buffer);\n        view.setFloat64(1, data, false);\n        return output;\n    }\n}\nfunction encodeNumber(data) {\n    if (typeof data == \"number\") {\n        if (Number.isSafeInteger(data)) {\n            // Encode integer\n            if (data < 0) {\n                return encodeLength(MAJOR_TYPE_NEGATIVE_INTEGER, Math.abs(data));\n            }\n            else {\n                return encodeLength(MAJOR_TYPE_UNSIGNED_INTEGER, data);\n            }\n        }\n        return [encodeFloat(data)];\n    }\n    else {\n        if (data < 0n) {\n            return encodeLength(MAJOR_TYPE_NEGATIVE_INTEGER, data * -1n);\n        }\n        else {\n            return encodeLength(MAJOR_TYPE_UNSIGNED_INTEGER, data);\n        }\n    }\n}\nconst ENCODER = new TextEncoder();\nfunction encodeString(data, output) {\n    output.push(...encodeLength(MAJOR_TYPE_TEXT_STRING, data.length));\n    output.push(ENCODER.encode(data));\n}\nfunction encodeBytes(data, output) {\n    output.push(...encodeLength(MAJOR_TYPE_BYTE_STRING, data.length));\n    output.push(data);\n}\nfunction encodeArray(data, output) {\n    output.push(...encodeLength(MAJOR_TYPE_ARRAY, data.length));\n    for (const element of data) {\n        encodePartialCBOR(element, output);\n    }\n}\nfunction encodeMap(data, output) {\n    output.push(new Uint8Array(encodeLength(MAJOR_TYPE_MAP, data.size)));\n    for (const [key, value] of data.entries()) {\n        encodePartialCBOR(key, output);\n        encodePartialCBOR(value, output);\n    }\n}\nfunction encodeTag(tag, output) {\n    output.push(...encodeLength(MAJOR_TYPE_TAG, tag.tag));\n    encodePartialCBOR(tag.value, output);\n}\nfunction encodePartialCBOR(data, output) {\n    if (typeof data == \"boolean\" || data === null || data == undefined) {\n        output.push(encodeSimple(data));\n        return;\n    }\n    if (typeof data == \"number\" || typeof data == \"bigint\") {\n        output.push(...encodeNumber(data));\n        return;\n    }\n    if (typeof data == \"string\") {\n        encodeString(data, output);\n        return;\n    }\n    if (data instanceof Uint8Array) {\n        encodeBytes(data, output);\n        return;\n    }\n    if (Array.isArray(data)) {\n        encodeArray(data, output);\n        return;\n    }\n    if (data instanceof Map) {\n        encodeMap(data, output);\n        return;\n    }\n    if (data instanceof CBORTag) {\n        encodeTag(data, output);\n        return;\n    }\n    throw new Error(\"Not implemented\");\n}\n/**\n * Like {decodeCBOR}, but the length of the data is unknown and there is likely\n * more -- possibly unrelated non-CBOR -- data afterwards.\n *\n * Examples:\n *\n * ```ts\n * import {decodePartialCBOR} from './cbor.ts'\n * decodePartialCBOR(new Uint8Array([1, 2, 245, 3, 4]), 2)\n * // returns [true, 1]\n * // It did not decode the leading [1, 2] or trailing [3, 4]\n * ```\n *\n * @param data a data stream to read data from\n * @param index where to start reading in the data stream\n * @returns a tuple of the value followed by bytes read.\n * @throws {Error}\n *   When the data stream ends early or the CBOR data is not well formed\n */\nexport function decodePartialCBOR(data, index) {\n    if (data.byteLength === 0 || data.byteLength <= index || index < 0) {\n        throw new Error(\"No data\");\n    }\n    if (data instanceof Uint8Array) {\n        return decodeNext(new DataView(data.buffer), index);\n    }\n    else if (data instanceof ArrayBuffer) {\n        return decodeNext(new DataView(data), index);\n    }\n    // otherwise, it is a data view\n    return decodeNext(data, index);\n}\n/**\n * Decode CBOR data from a binary stream\n *\n * The entire data stream from [0, length) will be consumed.\n * If you require a partial decoding, see {decodePartialCBOR}.\n *\n * Examples:\n *\n * ```ts\n * import {decodeCBOR, CBORTag, CBORType} from './cbor.ts'\n * decodeCBOR(new Uint8Array([162, 99, 107, 101, 121, 101, 118, 97, 108, 117, 101, 1, 109, 97, 110, 111, 116, 104, 101, 114, 32, 118, 97, 108, 117, 101]));\n * // returns new Map<string | number, CBORType>([\n * //   [\"key\", \"value\"],\n * //   [1, \"another value\"]\n * // ]);\n *\n * const taggedItem = new Uint8Array([217, 4, 210, 101, 104, 101, 108, 108, 111]);\n * decodeCBOR(new DataView(taggedItem.buffer))\n * // returns new CBORTag(1234, \"hello\")\n * ```\n *\n * @param data a data stream, multiple types are supported\n * @returns\n */\nexport function decodeCBOR(data) {\n    const [value, length] = decodePartialCBOR(data, 0);\n    if (length !== data.byteLength) {\n        throw new Error(`Data was decoded, but the whole stream was not processed ${length} != ${data.byteLength}`);\n    }\n    return value;\n}\n/**\n * Encode a supported structure to a CBOR byte string.\n *\n * Example:\n *\n * ```ts\n * import {encodeCBOR, CBORType, CBORTag} from './cbor.ts'\n * encodeCBOR(new Map<string | number, CBORType>([\n *   [\"key\", \"value\"],\n *   [1, \"another value\"]\n * ]));\n * // returns new Uint8Array([162, 99, 107, 101, 121, 101, 118, 97, 108, 117, 101, 1, 109, 97, 110, 111, 116, 104, 101, 114, 32 118, 97, 108, 117, 101])\n *\n * encodeCBOR(new CBORTag(1234, \"hello\"))\n * // returns new UInt8Array([217, 4, 210, 101, 104, 101, 108, 108, 111])\n * ```\n *\n * @param data Data to encode\n * @returns A byte string as a Uint8Array\n * @throws Error\n *   if unsupported data is found during encoding\n */\nexport function encodeCBOR(data) {\n    const results = [];\n    encodePartialCBOR(data, results);\n    let length = 0;\n    for (const result of results) {\n        if (typeof result == \"number\") {\n            length += 1;\n        }\n        else {\n            length += result.length;\n        }\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const result of results) {\n        if (typeof result == \"number\") {\n            output[index] = result;\n            index += 1;\n        }\n        else {\n            output.set(result, index);\n            index += result.length;\n        }\n    }\n    return output;\n}\n", "/* ------------------------------------------------------------------------------------\n\n  base64 - MIT License - Hexagon <hexagon@56k.guru>\n\n  ------------------------------------------------------------------------------------\n\n  License:\n\n\tCopyright (c) 2021 Hexagon <hexagon@56k.guru>\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE.\n\n  ------------------------------------------------------------------------------------  */\n\nconst \n\t// Regular base64 characters\n\tchars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n\n\t// Base64url characters\n\tcharsUrl = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n\n\tgenLookup = (target) => {\n\t\tconst lookupTemp = typeof Uint8Array === \"undefined\" ? [] : new Uint8Array(256);\n\t\tconst len = chars.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tlookupTemp[target.charCodeAt(i)] = i;\n\t\t}\n\t\treturn lookupTemp;\n\t},\n  \n\t// Use a lookup table to find the index.\n\tlookup = genLookup(chars),\n\tlookupUrl = genLookup(charsUrl); \n\n/**\n * Pre-calculated regexes for validating base64 and base64url\n */\nconst base64UrlPattern = /^[-A-Za-z0-9\\-_]*$/;\nconst base64Pattern = /^[-A-Za-z0-9+/]*={0,3}$/;\n\n/**\n * @namespace base64\n */\nconst base64 = {};\n\n/**\n * Convenience function for converting a base64 encoded string to an ArrayBuffer instance\n * @public\n * \n * @param {string} data - Base64 representation of data\n * @param {boolean} [urlMode] - If set to true, URL mode string will be expected\n * @returns {ArrayBuffer} - Decoded data\n */\nbase64.toArrayBuffer = (data, urlMode) => {\n\tconst \n\t\tlen = data.length;\n\tlet bufferLength = data.length * 0.75,\n\t\ti,\n\t\tp = 0,\n\t\tencoded1,\n\t\tencoded2,\n\t\tencoded3,\n\t\tencoded4;\n\n\tif (data[data.length - 1] === \"=\") {\n\t\tbufferLength--;\n\t\tif (data[data.length - 2] === \"=\") {\n\t\t\tbufferLength--;\n\t\t}\n\t}\n\n\tconst \n\t\tarraybuffer = new ArrayBuffer(bufferLength),\n\t\tbytes = new Uint8Array(arraybuffer),\n\t\ttarget = urlMode ? lookupUrl : lookup;\n\n\tfor (i = 0; i < len; i += 4) {\n\t\tencoded1 = target[data.charCodeAt(i)];\n\t\tencoded2 = target[data.charCodeAt(i + 1)];\n\t\tencoded3 = target[data.charCodeAt(i + 2)];\n\t\tencoded4 = target[data.charCodeAt(i + 3)];\n\n\t\tbytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t\tbytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t\tbytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t}\n\n\treturn arraybuffer;\n\n};\n\n/**\n * Convenience function for creating a base64 encoded string from an ArrayBuffer instance\n * @public\n * \n * @param {ArrayBuffer} arrBuf - ArrayBuffer to be encoded\n * @param {boolean} [urlMode] - If set to true, URL mode string will be returned\n * @returns {string} - Base64 representation of data\n */\nbase64.fromArrayBuffer = (arrBuf, urlMode) => {\n\tconst bytes = new Uint8Array(arrBuf);\n\tlet\n\t\ti,\n\t\tresult = \"\";\n\n\tconst\n\t\tlen = bytes.length,\n\t\ttarget = urlMode ? charsUrl : chars;\n\n\tfor (i = 0; i < len; i += 3) {\n\t\tresult += target[bytes[i] >> 2];\n\t\tresult += target[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t\tresult += target[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t\tresult += target[bytes[i + 2] & 63];\n\t}\n\n\tconst remainder = len % 3;\n\tif (remainder === 2) {\n\t\tresult = result.substring(0, result.length - 1) + (urlMode ? \"\" : \"=\");\n\t} else if (remainder === 1) {\n\t\tresult = result.substring(0, result.length - 2) + (urlMode ? \"\" : \"==\");\n\t}\n\n\treturn result;\n\n};\n\n/**\n * Convenience function for converting base64 to string\n * @public\n * \n * @param {string} str - Base64 encoded string to be decoded\n * @param {boolean} [urlMode] - If set to true, URL mode string will be expected\n * @returns {string} - Decoded string\n */\nbase64.toString = (str, urlMode) => {\n\treturn new TextDecoder().decode(base64.toArrayBuffer(str, urlMode));\n};\n\n/**\n * Convenience function for converting a javascript string to base64\n * @public\n * \n * @param {string} str - String to be converted to base64\n * @param {boolean} [urlMode] - If set to true, URL mode string will be returned\n * @returns {string} - Base64 encoded string\n */\nbase64.fromString = (str, urlMode) => {\n\treturn base64.fromArrayBuffer(new TextEncoder().encode(str), urlMode);\n};\n\n/**\n * Function to validate base64\n * @public\n * @param {string} encoded - Base64 or Base64url encoded data\n * @param {boolean} [urlMode] - If set to true, base64url will be expected\n * @returns {boolean} - Valid base64/base64url?\n */\nbase64.validate = (encoded, urlMode) => {\n\n\t// Bail out if not string\n\tif (!(typeof encoded === \"string\" || encoded instanceof String)) {\n\t\treturn false;\n\t}\n\n\t// Go on validate\n\ttry {\n\t\treturn urlMode ? base64UrlPattern.test(encoded) : base64Pattern.test(encoded);\n\t} catch (_e) {\n\t\treturn false;\n\t}\n};\n\nbase64.base64 = base64;\nexport default base64;\nexport { base64 };", "// tiny_cbor (a.k.a. tiny-cbor in Node land)\nexport * as tinyCbor from '@levischuck/tiny-cbor';\n// b64 (a.k.a. @hexagon/base64 in Node land)\nexport { default as base64 } from '@hexagon/base64';\n// cross-fetch\nexport { fetch as crossFetch } from 'cross-fetch';\n// @peculiar libraries\nexport { AsnParser, AsnSerializer, OctetString } from '@peculiar/asn1-schema';\nexport { AuthorityKeyIdentifier, BasicConstraints, Certificate, CertificateList, CRLDistributionPoints, ExtendedKeyUsage, Extensions, id_ce_authorityKeyIdentifier, id_ce_basicConstraints, id_ce_cRLDistributionPoints, id_ce_extKeyUsage, id_ce_subjectAltName, id_ce_subjectKeyIdentifier, Name, SubjectAlternativeName, SubjectKeyIdentifier, } from '@peculiar/asn1-x509';\nexport { ECDSASigValue, ECParameters, id_ecPublicKey, id_secp256r1, id_secp384r1, } from '@peculiar/asn1-ecc';\nexport { RSAPublicKey } from '@peculiar/asn1-rsa';\nexport { id_ce_keyDescription, KeyDescription } from '@peculiar/asn1-android';\n", "/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\n    if (typeof BigInt === \"undefined\") {\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\n    }\n}\nfunction concat(buffers) {\n    let outputLength = 0;\n    let prevLength = 0;\n    for (let i = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        outputLength += buffer.byteLength;\n    }\n    const retView = new Uint8Array(outputLength);\n    for (let i = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        retView.set(new Uint8Array(buffer), prevLength);\n        prevLength += buffer.byteLength;\n    }\n    return retView.buffer;\n}\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\n    if (!(inputBuffer instanceof Uint8Array)) {\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\n        return false;\n    }\n    if (!inputBuffer.byteLength) {\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\n        return false;\n    }\n    if (inputOffset < 0) {\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\n        return false;\n    }\n    if (inputLength < 0) {\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\n        return false;\n    }\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n        return false;\n    }\n    return true;\n}\n\nclass ViewWriter {\n    constructor() {\n        this.items = [];\n    }\n    write(buf) {\n        this.items.push(buf);\n    }\n    final() {\n        return concat(this.items);\n    }\n}\n\nconst powers2 = [new Uint8Array([1])];\nconst digitsString = \"0123456789\";\nconst NAME = \"name\";\nconst VALUE_HEX_VIEW = \"valueHexView\";\nconst IS_HEX_ONLY = \"isHexOnly\";\nconst ID_BLOCK = \"idBlock\";\nconst TAG_CLASS = \"tagClass\";\nconst TAG_NUMBER = \"tagNumber\";\nconst IS_CONSTRUCTED = \"isConstructed\";\nconst FROM_BER = \"fromBER\";\nconst TO_BER = \"toBER\";\nconst LOCAL = \"local\";\nconst EMPTY_STRING = \"\";\nconst EMPTY_BUFFER = new ArrayBuffer(0);\nconst EMPTY_VIEW = new Uint8Array(0);\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\nconst OCTET_STRING_NAME = \"OCTET STRING\";\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\n    var _a;\n    return _a = class Some extends BaseClass {\n            get valueHex() {\n                return this.valueHexView.slice().buffer;\n            }\n            set valueHex(value) {\n                this.valueHexView = new Uint8Array(value);\n            }\n            constructor(...args) {\n                var _b;\n                super(...args);\n                const params = args[0] || {};\n                this.isHexOnly = (_b = params.isHexOnly) !== null && _b !== void 0 ? _b : false;\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\n            }\n            fromBER(inputBuffer, inputOffset, inputLength) {\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n                    return -1;\n                }\n                const endLength = inputOffset + inputLength;\n                this.valueHexView = view.subarray(inputOffset, endLength);\n                if (!this.valueHexView.length) {\n                    this.warnings.push(\"Zero buffer length\");\n                    return inputOffset;\n                }\n                this.blockLength = inputLength;\n                return endLength;\n            }\n            toBER(sizeOnly = false) {\n                if (!this.isHexOnly) {\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\n                    return EMPTY_BUFFER;\n                }\n                if (sizeOnly) {\n                    return new ArrayBuffer(this.valueHexView.byteLength);\n                }\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\n                    ? this.valueHexView.buffer\n                    : this.valueHexView.slice().buffer;\n            }\n            toJSON() {\n                return {\n                    ...super.toJSON(),\n                    isHexOnly: this.isHexOnly,\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\n                };\n            }\n        },\n        _a.NAME = \"hexBlock\",\n        _a;\n}\n\nclass LocalBaseBlock {\n    static blockName() {\n        return this.NAME;\n    }\n    get valueBeforeDecode() {\n        return this.valueBeforeDecodeView.slice().buffer;\n    }\n    set valueBeforeDecode(value) {\n        this.valueBeforeDecodeView = new Uint8Array(value);\n    }\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\n        this.blockLength = blockLength;\n        this.error = error;\n        this.warnings = warnings;\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\n    }\n    toJSON() {\n        return {\n            blockName: this.constructor.NAME,\n            blockLength: this.blockLength,\n            error: this.error,\n            warnings: this.warnings,\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\n        };\n    }\n}\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\n    fromBER(_inputBuffer, _inputOffset, _inputLength) {\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\n    }\n    toBER(_sizeOnly, _writer) {\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\n    }\n}\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\n    constructor({ idBlock = {} } = {}) {\n        var _a, _b, _c, _d;\n        super();\n        if (idBlock) {\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\n            this.valueHexView = idBlock.valueHex\n                ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex)\n                : EMPTY_VIEW;\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\n        }\n        else {\n            this.tagClass = -1;\n            this.tagNumber = -1;\n            this.isConstructed = false;\n        }\n    }\n    toBER(sizeOnly = false) {\n        let firstOctet = 0;\n        switch (this.tagClass) {\n            case 1:\n                firstOctet |= 0x00;\n                break;\n            case 2:\n                firstOctet |= 0x40;\n                break;\n            case 3:\n                firstOctet |= 0x80;\n                break;\n            case 4:\n                firstOctet |= 0xC0;\n                break;\n            default:\n                this.error = \"Unknown tag class\";\n                return EMPTY_BUFFER;\n        }\n        if (this.isConstructed)\n            firstOctet |= 0x20;\n        if (this.tagNumber < 31 && !this.isHexOnly) {\n            const retView = new Uint8Array(1);\n            if (!sizeOnly) {\n                let number = this.tagNumber;\n                number &= 0x1F;\n                firstOctet |= number;\n                retView[0] = firstOctet;\n            }\n            return retView.buffer;\n        }\n        if (!this.isHexOnly) {\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\n            const encodedView = new Uint8Array(encodedBuf);\n            const size = encodedBuf.byteLength;\n            const retView = new Uint8Array(size + 1);\n            retView[0] = (firstOctet | 0x1F);\n            if (!sizeOnly) {\n                for (let i = 0; i < (size - 1); i++)\n                    retView[i + 1] = encodedView[i] | 0x80;\n                retView[size] = encodedView[size - 1];\n            }\n            return retView.buffer;\n        }\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\n        retView[0] = (firstOctet | 0x1F);\n        if (!sizeOnly) {\n            const curView = this.valueHexView;\n            for (let i = 0; i < (curView.length - 1); i++)\n                retView[i + 1] = curView[i] | 0x80;\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\n        }\n        return retView.buffer;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        if (intBuffer.length === 0) {\n            this.error = \"Zero buffer length\";\n            return -1;\n        }\n        const tagClassMask = intBuffer[0] & 0xC0;\n        switch (tagClassMask) {\n            case 0x00:\n                this.tagClass = (1);\n                break;\n            case 0x40:\n                this.tagClass = (2);\n                break;\n            case 0x80:\n                this.tagClass = (3);\n                break;\n            case 0xC0:\n                this.tagClass = (4);\n                break;\n            default:\n                this.error = \"Unknown tag class\";\n                return -1;\n        }\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\n        this.isHexOnly = false;\n        const tagNumberMask = intBuffer[0] & 0x1F;\n        if (tagNumberMask !== 0x1F) {\n            this.tagNumber = (tagNumberMask);\n            this.blockLength = 1;\n        }\n        else {\n            let count = 1;\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\n            let tagNumberBufferMaxLength = 255;\n            while (intBuffer[count] & 0x80) {\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n                count++;\n                if (count >= intBuffer.length) {\n                    this.error = \"End of input reached before message was fully decoded\";\n                    return -1;\n                }\n                if (count === tagNumberBufferMaxLength) {\n                    tagNumberBufferMaxLength += 255;\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\n                        tempBufferView[i] = intTagNumberBuffer[i];\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\n                }\n            }\n            this.blockLength = (count + 1);\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n            const tempBufferView = new Uint8Array(count);\n            for (let i = 0; i < count; i++)\n                tempBufferView[i] = intTagNumberBuffer[i];\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\n            intTagNumberBuffer.set(tempBufferView);\n            if (this.blockLength <= 9)\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\n            else {\n                this.isHexOnly = true;\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\n            }\n        }\n        if (((this.tagClass === 1))\n            && (this.isConstructed)) {\n            switch (this.tagNumber) {\n                case 1:\n                case 2:\n                case 5:\n                case 6:\n                case 9:\n                case 13:\n                case 14:\n                case 23:\n                case 24:\n                case 31:\n                case 32:\n                case 33:\n                case 34:\n                    this.error = \"Constructed encoding used for primitive type\";\n                    return -1;\n            }\n        }\n        return (inputOffset + this.blockLength);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            tagClass: this.tagClass,\n            tagNumber: this.tagNumber,\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\n    constructor({ lenBlock = {} } = {}) {\n        var _a, _b, _c;\n        super();\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\n        if (intBuffer.length === 0) {\n            this.error = \"Zero buffer length\";\n            return -1;\n        }\n        if (intBuffer[0] === 0xFF) {\n            this.error = \"Length block 0xFF is reserved by standard\";\n            return -1;\n        }\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\n        if (this.isIndefiniteForm) {\n            this.blockLength = 1;\n            return (inputOffset + this.blockLength);\n        }\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\n        if (this.longFormUsed === false) {\n            this.length = (intBuffer[0]);\n            this.blockLength = 1;\n            return (inputOffset + this.blockLength);\n        }\n        const count = intBuffer[0] & 0x7F;\n        if (count > 8) {\n            this.error = \"Too big integer\";\n            return -1;\n        }\n        if ((count + 1) > intBuffer.length) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        const lenOffset = inputOffset + 1;\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\n        if (lengthBufferView[count - 1] === 0x00)\n            this.warnings.push(\"Needlessly long encoded length\");\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\n        if (this.longFormUsed && (this.length <= 127))\n            this.warnings.push(\"Unnecessary usage of long length form\");\n        this.blockLength = count + 1;\n        return (inputOffset + this.blockLength);\n    }\n    toBER(sizeOnly = false) {\n        let retBuf;\n        let retView;\n        if (this.length > 127)\n            this.longFormUsed = true;\n        if (this.isIndefiniteForm) {\n            retBuf = new ArrayBuffer(1);\n            if (sizeOnly === false) {\n                retView = new Uint8Array(retBuf);\n                retView[0] = 0x80;\n            }\n            return retBuf;\n        }\n        if (this.longFormUsed) {\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\n            if (encodedBuf.byteLength > 127) {\n                this.error = \"Too big length\";\n                return (EMPTY_BUFFER);\n            }\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\n            if (sizeOnly)\n                return retBuf;\n            const encodedView = new Uint8Array(encodedBuf);\n            retView = new Uint8Array(retBuf);\n            retView[0] = encodedBuf.byteLength | 0x80;\n            for (let i = 0; i < encodedBuf.byteLength; i++)\n                retView[i + 1] = encodedView[i];\n            return retBuf;\n        }\n        retBuf = new ArrayBuffer(1);\n        if (sizeOnly === false) {\n            retView = new Uint8Array(retBuf);\n            retView[0] = this.length;\n        }\n        return retBuf;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            isIndefiniteForm: this.isIndefiniteForm,\n            longFormUsed: this.longFormUsed,\n            length: this.length,\n        };\n    }\n}\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\n        super(parameters);\n        this.name = name;\n        this.optional = optional;\n        if (primitiveSchema) {\n            this.primitiveSchema = primitiveSchema;\n        }\n        this.idBlock = new LocalIdentificationBlock(parameters);\n        this.lenBlock = new LocalLengthBlock(parameters);\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm)\n            ? inputLength\n            : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    toBER(sizeOnly, writer) {\n        const _writer = writer || new ViewWriter();\n        if (!writer) {\n            prepareIndefiniteForm(this);\n        }\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\n        _writer.write(idBlockBuf);\n        if (this.lenBlock.isIndefiniteForm) {\n            _writer.write(new Uint8Array([0x80]).buffer);\n            this.valueBlock.toBER(sizeOnly, _writer);\n            _writer.write(new ArrayBuffer(2));\n        }\n        else {\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\n            this.lenBlock.length = valueBlockBuf.byteLength;\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\n            _writer.write(lenBlockBuf);\n            _writer.write(valueBlockBuf);\n        }\n        if (!writer) {\n            return _writer.final();\n        }\n        return EMPTY_BUFFER;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            idBlock: this.idBlock.toJSON(),\n            lenBlock: this.lenBlock.toJSON(),\n            valueBlock: this.valueBlock.toJSON(),\n            name: this.name,\n            optional: this.optional,\n        };\n        if (this.primitiveSchema)\n            object.primitiveSchema = this.primitiveSchema.toJSON();\n        return object;\n    }\n    toString(encoding = \"ascii\") {\n        if (encoding === \"ascii\") {\n            return this.onAsciiEncoding();\n        }\n        return pvtsutils.Convert.ToHex(this.toBER());\n    }\n    onAsciiEncoding() {\n        const name = this.constructor.NAME;\n        const value = pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView);\n        return `${name} : ${value}`;\n    }\n    isEqual(other) {\n        if (this === other) {\n            return true;\n        }\n        if (!(other instanceof this.constructor)) {\n            return false;\n        }\n        const thisRaw = this.toBER();\n        const otherRaw = other.toBER();\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\n    }\n}\nBaseBlock.NAME = \"BaseBlock\";\nfunction prepareIndefiniteForm(baseBlock) {\n    var _a;\n    if (baseBlock instanceof typeStore.Constructed) {\n        for (const value of baseBlock.valueBlock.value) {\n            if (prepareIndefiniteForm(value)) {\n                baseBlock.lenBlock.isIndefiniteForm = true;\n            }\n        }\n    }\n    return !!((_a = baseBlock.lenBlock) === null || _a === void 0 ? void 0 : _a.isIndefiniteForm);\n}\n\nclass BaseStringBlock extends BaseBlock {\n    getValue() {\n        return this.valueBlock.value;\n    }\n    setValue(value) {\n        this.valueBlock.value = value;\n    }\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\n        super(parameters, stringValueBlockType);\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm)\n            ? inputLength\n            : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        this.fromBuffer(this.valueBlock.valueHexView);\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\n    }\n}\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\n    constructor({ isHexOnly = true, ...parameters } = {}) {\n        super(parameters);\n        this.isHexOnly = isHexOnly;\n    }\n}\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\nclass Primitive extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalPrimitiveValueBlock);\n        this.idBlock.isConstructed = false;\n    }\n}\n_a$w = Primitive;\n(() => {\n    typeStore.Primitive = _a$w;\n})();\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\n    if (inputObject instanceof newType) {\n        return inputObject;\n    }\n    const newObject = new newType();\n    newObject.idBlock = inputObject.idBlock;\n    newObject.lenBlock = inputObject.lenBlock;\n    newObject.warnings = inputObject.warnings;\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\n    return newObject;\n}\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\n    const incomingOffset = inputOffset;\n    let returnObject = new BaseBlock({}, ValueBlock);\n    const baseBlock = new LocalBaseBlock();\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\n        returnObject.error = baseBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\n    if (!intBuffer.length) {\n        returnObject.error = \"Zero buffer length\";\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\n    if (returnObject.idBlock.warnings.length) {\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\n    }\n    if (resultOffset === -1) {\n        returnObject.error = returnObject.idBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    inputOffset = resultOffset;\n    inputLength -= returnObject.idBlock.blockLength;\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\n    if (returnObject.lenBlock.warnings.length) {\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\n    }\n    if (resultOffset === -1) {\n        returnObject.error = returnObject.lenBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    inputOffset = resultOffset;\n    inputLength -= returnObject.lenBlock.blockLength;\n    if (!returnObject.idBlock.isConstructed\n        && returnObject.lenBlock.isIndefiniteForm) {\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    let newASN1Type = BaseBlock;\n    switch (returnObject.idBlock.tagClass) {\n        case 1:\n            if ((returnObject.idBlock.tagNumber >= 37)\n                && (returnObject.idBlock.isHexOnly === false)) {\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\n                return {\n                    offset: -1,\n                    result: returnObject,\n                };\n            }\n            switch (returnObject.idBlock.tagNumber) {\n                case 0:\n                    if ((returnObject.idBlock.isConstructed)\n                        && (returnObject.lenBlock.length > 0)) {\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\n                        return {\n                            offset: -1,\n                            result: returnObject,\n                        };\n                    }\n                    newASN1Type = typeStore.EndOfContent;\n                    break;\n                case 1:\n                    newASN1Type = typeStore.Boolean;\n                    break;\n                case 2:\n                    newASN1Type = typeStore.Integer;\n                    break;\n                case 3:\n                    newASN1Type = typeStore.BitString;\n                    break;\n                case 4:\n                    newASN1Type = typeStore.OctetString;\n                    break;\n                case 5:\n                    newASN1Type = typeStore.Null;\n                    break;\n                case 6:\n                    newASN1Type = typeStore.ObjectIdentifier;\n                    break;\n                case 10:\n                    newASN1Type = typeStore.Enumerated;\n                    break;\n                case 12:\n                    newASN1Type = typeStore.Utf8String;\n                    break;\n                case 13:\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\n                    break;\n                case 14:\n                    newASN1Type = typeStore.TIME;\n                    break;\n                case 15:\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\n                    return {\n                        offset: -1,\n                        result: returnObject,\n                    };\n                case 16:\n                    newASN1Type = typeStore.Sequence;\n                    break;\n                case 17:\n                    newASN1Type = typeStore.Set;\n                    break;\n                case 18:\n                    newASN1Type = typeStore.NumericString;\n                    break;\n                case 19:\n                    newASN1Type = typeStore.PrintableString;\n                    break;\n                case 20:\n                    newASN1Type = typeStore.TeletexString;\n                    break;\n                case 21:\n                    newASN1Type = typeStore.VideotexString;\n                    break;\n                case 22:\n                    newASN1Type = typeStore.IA5String;\n                    break;\n                case 23:\n                    newASN1Type = typeStore.UTCTime;\n                    break;\n                case 24:\n                    newASN1Type = typeStore.GeneralizedTime;\n                    break;\n                case 25:\n                    newASN1Type = typeStore.GraphicString;\n                    break;\n                case 26:\n                    newASN1Type = typeStore.VisibleString;\n                    break;\n                case 27:\n                    newASN1Type = typeStore.GeneralString;\n                    break;\n                case 28:\n                    newASN1Type = typeStore.UniversalString;\n                    break;\n                case 29:\n                    newASN1Type = typeStore.CharacterString;\n                    break;\n                case 30:\n                    newASN1Type = typeStore.BmpString;\n                    break;\n                case 31:\n                    newASN1Type = typeStore.DATE;\n                    break;\n                case 32:\n                    newASN1Type = typeStore.TimeOfDay;\n                    break;\n                case 33:\n                    newASN1Type = typeStore.DateTime;\n                    break;\n                case 34:\n                    newASN1Type = typeStore.Duration;\n                    break;\n                default: {\n                    const newObject = returnObject.idBlock.isConstructed\n                        ? new typeStore.Constructed()\n                        : new typeStore.Primitive();\n                    newObject.idBlock = returnObject.idBlock;\n                    newObject.lenBlock = returnObject.lenBlock;\n                    newObject.warnings = returnObject.warnings;\n                    returnObject = newObject;\n                }\n            }\n            break;\n        case 2:\n        case 3:\n        case 4:\n        default: {\n            newASN1Type = returnObject.idBlock.isConstructed\n                ? typeStore.Constructed\n                : typeStore.Primitive;\n        }\n    }\n    returnObject = localChangeType(returnObject, newASN1Type);\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\n    return {\n        offset: resultOffset,\n        result: returnObject,\n    };\n}\nfunction fromBER(inputBuffer) {\n    if (!inputBuffer.byteLength) {\n        const result = new BaseBlock({}, ValueBlock);\n        result.error = \"Input buffer has zero length\";\n        return {\n            offset: -1,\n            result,\n        };\n    }\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\n}\n\nfunction checkLen(indefiniteLength, length) {\n    if (indefiniteLength) {\n        return 1;\n    }\n    return length;\n}\nclass LocalConstructedValueBlock extends ValueBlock {\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n        this.isIndefiniteForm = isIndefiniteForm;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n            return -1;\n        }\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\n        if (this.valueBeforeDecodeView.length === 0) {\n            this.warnings.push(\"Zero buffer length\");\n            return inputOffset;\n        }\n        let currentOffset = inputOffset;\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\n            const returnObject = localFromBER(view, currentOffset, inputLength);\n            if (returnObject.offset === -1) {\n                this.error = returnObject.result.error;\n                this.warnings.concat(returnObject.result.warnings);\n                return -1;\n            }\n            currentOffset = returnObject.offset;\n            this.blockLength += returnObject.result.blockLength;\n            inputLength -= returnObject.result.blockLength;\n            this.value.push(returnObject.result);\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\n                break;\n            }\n        }\n        if (this.isIndefiniteForm) {\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\n                this.value.pop();\n            }\n            else {\n                this.warnings.push(\"No EndOfContent block encoded\");\n            }\n        }\n        return currentOffset;\n    }\n    toBER(sizeOnly, writer) {\n        const _writer = writer || new ViewWriter();\n        for (let i = 0; i < this.value.length; i++) {\n            this.value[i].toBER(sizeOnly, _writer);\n        }\n        if (!writer) {\n            return _writer.final();\n        }\n        return EMPTY_BUFFER;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            isIndefiniteForm: this.isIndefiniteForm,\n            value: [],\n        };\n        for (const value of this.value) {\n            object.value.push(value.toJSON());\n        }\n        return object;\n    }\n}\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\nclass Constructed extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalConstructedValueBlock);\n        this.idBlock.isConstructed = true;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    onAsciiEncoding() {\n        const values = [];\n        for (const value of this.valueBlock.value) {\n            values.push(value.toString(\"ascii\").split(\"\\n\").map((o) => `  ${o}`).join(\"\\n\"));\n        }\n        const blockName = this.idBlock.tagClass === 3\n            ? `[${this.idBlock.tagNumber}]`\n            : this.constructor.NAME;\n        return values.length\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\n            : `${blockName} :`;\n    }\n}\n_a$v = Constructed;\n(() => {\n    typeStore.Constructed = _a$v;\n})();\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\n    fromBER(inputBuffer, inputOffset, _inputLength) {\n        return inputOffset;\n    }\n    toBER(_sizeOnly) {\n        return EMPTY_BUFFER;\n    }\n}\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\nclass EndOfContent extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalEndOfContentValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 0;\n    }\n}\n_a$u = EndOfContent;\n(() => {\n    typeStore.EndOfContent = _a$u;\n})();\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\nclass Null extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, ValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 5;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (this.lenBlock.length > 0)\n            this.warnings.push(\"Non-zero length of value block for Null type\");\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        this.blockLength += inputLength;\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n            return -1;\n        }\n        return (inputOffset + inputLength);\n    }\n    toBER(sizeOnly, writer) {\n        const retBuf = new ArrayBuffer(2);\n        if (!sizeOnly) {\n            const retView = new Uint8Array(retBuf);\n            retView[0] = 0x05;\n            retView[1] = 0x00;\n        }\n        if (writer) {\n            writer.write(retBuf);\n        }\n        return retBuf;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME}`;\n    }\n}\n_a$t = Null;\n(() => {\n    typeStore.Null = _a$t;\n})();\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\n    get value() {\n        for (const octet of this.valueHexView) {\n            if (octet > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    set value(value) {\n        this.valueHexView[0] = value ? 0xFF : 0x00;\n    }\n    constructor({ value, ...parameters } = {}) {\n        super(parameters);\n        if (parameters.valueHex) {\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\n        }\n        else {\n            this.valueHexView = new Uint8Array(1);\n        }\n        if (value) {\n            this.value = value;\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\n        if (inputLength > 1)\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\n        this.isHexOnly = true;\n        pvutils.utilDecodeTC.call(this);\n        this.blockLength = inputLength;\n        return (inputOffset + inputLength);\n    }\n    toBER() {\n        return this.valueHexView.slice();\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.value,\n        };\n    }\n}\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\nclass Boolean extends BaseBlock {\n    getValue() {\n        return this.valueBlock.value;\n    }\n    setValue(value) {\n        this.valueBlock.value = value;\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalBooleanValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 1;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.getValue}`;\n    }\n}\n_a$s = Boolean;\n(() => {\n    typeStore.Boolean = _a$s;\n})();\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\n    constructor({ isConstructed = false, ...parameters } = {}) {\n        super(parameters);\n        this.isConstructed = isConstructed;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = 0;\n        if (this.isConstructed) {\n            this.isHexOnly = false;\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n            if (resultOffset === -1)\n                return resultOffset;\n            for (let i = 0; i < this.value.length; i++) {\n                const currentBlockName = this.value[i].constructor.NAME;\n                if (currentBlockName === END_OF_CONTENT_NAME) {\n                    if (this.isIndefiniteForm)\n                        break;\n                    else {\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\n                        return -1;\n                    }\n                }\n                if (currentBlockName !== OCTET_STRING_NAME) {\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\n                    return -1;\n                }\n            }\n        }\n        else {\n            this.isHexOnly = true;\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n            this.blockLength = inputLength;\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly, writer) {\n        if (this.isConstructed)\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n        return sizeOnly\n            ? new ArrayBuffer(this.valueHexView.byteLength)\n            : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\nclass OctetString extends BaseBlock {\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n        var _b, _c;\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\n        super({\n            idBlock: {\n                isConstructed: parameters.isConstructed,\n                ...idBlock,\n            },\n            lenBlock: {\n                ...lenBlock,\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\n            },\n            ...parameters,\n        }, LocalOctetStringValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 4;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        if (inputLength === 0) {\n            if (this.idBlock.error.length === 0)\n                this.blockLength += this.idBlock.blockLength;\n            if (this.lenBlock.error.length === 0)\n                this.blockLength += this.lenBlock.blockLength;\n            return inputOffset;\n        }\n        if (!this.valueBlock.isConstructed) {\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\n            try {\n                if (buf.byteLength) {\n                    const asn = localFromBER(buf, 0, buf.byteLength);\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\n                        this.valueBlock.value = [asn.result];\n                    }\n                }\n            }\n            catch {\n            }\n        }\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\n    }\n    onAsciiEncoding() {\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n            return Constructed.prototype.onAsciiEncoding.call(this);\n        }\n        const name = this.constructor.NAME;\n        const value = pvtsutils.Convert.ToHex(this.valueBlock.valueHexView);\n        return `${name} : ${value}`;\n    }\n    getValue() {\n        if (!this.idBlock.isConstructed) {\n            return this.valueBlock.valueHexView.slice().buffer;\n        }\n        const array = [];\n        for (const content of this.valueBlock.value) {\n            if (content instanceof _a$r) {\n                array.push(content.valueBlock.valueHexView);\n            }\n        }\n        return pvtsutils.BufferSourceConverter.concat(array);\n    }\n}\n_a$r = OctetString;\n(() => {\n    typeStore.OctetString = _a$r;\n})();\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\n        super(parameters);\n        this.unusedBits = unusedBits;\n        this.isConstructed = isConstructed;\n        this.blockLength = this.valueHexView.byteLength;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (!inputLength) {\n            return inputOffset;\n        }\n        let resultOffset = -1;\n        if (this.isConstructed) {\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n            if (resultOffset === -1)\n                return resultOffset;\n            for (const value of this.value) {\n                const currentBlockName = value.constructor.NAME;\n                if (currentBlockName === END_OF_CONTENT_NAME) {\n                    if (this.isIndefiniteForm)\n                        break;\n                    else {\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\n                        return -1;\n                    }\n                }\n                if (currentBlockName !== BIT_STRING_NAME) {\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\n                    return -1;\n                }\n                const valueBlock = value.valueBlock;\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\n                    return -1;\n                }\n                this.unusedBits = valueBlock.unusedBits;\n            }\n            return resultOffset;\n        }\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.unusedBits = intBuffer[0];\n        if (this.unusedBits > 7) {\n            this.error = \"Unused bits for BitString must be in range 0-7\";\n            return -1;\n        }\n        if (!this.unusedBits) {\n            const buf = intBuffer.subarray(1);\n            try {\n                if (buf.byteLength) {\n                    const asn = localFromBER(buf, 0, buf.byteLength);\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\n                        this.value = [asn.result];\n                    }\n                }\n            }\n            catch {\n            }\n        }\n        this.valueHexView = intBuffer.subarray(1);\n        this.blockLength = intBuffer.length;\n        return (inputOffset + inputLength);\n    }\n    toBER(sizeOnly, writer) {\n        if (this.isConstructed) {\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n        }\n        if (sizeOnly) {\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\n        }\n        if (!this.valueHexView.byteLength) {\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(this.valueHexView.length + 1);\n        retView[0] = this.unusedBits;\n        retView.set(this.valueHexView, 1);\n        return retView.buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            unusedBits: this.unusedBits,\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\nclass BitString extends BaseBlock {\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n        var _b, _c;\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\n        super({\n            idBlock: {\n                isConstructed: parameters.isConstructed,\n                ...idBlock,\n            },\n            lenBlock: {\n                ...lenBlock,\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\n            },\n            ...parameters,\n        }, LocalBitStringValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 3;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\n    }\n    onAsciiEncoding() {\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n            return Constructed.prototype.onAsciiEncoding.call(this);\n        }\n        else {\n            const bits = [];\n            const valueHex = this.valueBlock.valueHexView;\n            for (const byte of valueHex) {\n                bits.push(byte.toString(2).padStart(8, \"0\"));\n            }\n            const bitsStr = bits.join(\"\");\n            const name = this.constructor.NAME;\n            const value = bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits);\n            return `${name} : ${value}`;\n        }\n    }\n}\n_a$q = BitString;\n(() => {\n    typeStore.BitString = _a$q;\n})();\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\nfunction viewAdd(first, second) {\n    const c = new Uint8Array([0]);\n    const firstView = new Uint8Array(first);\n    const secondView = new Uint8Array(second);\n    let firstViewCopy = firstView.slice(0);\n    const firstViewCopyLength = firstViewCopy.length - 1;\n    const secondViewCopy = secondView.slice(0);\n    const secondViewCopyLength = secondViewCopy.length - 1;\n    let value = 0;\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\n    let counter = 0;\n    for (let i = max; i >= 0; i--, counter++) {\n        switch (true) {\n            case (counter < secondViewCopy.length):\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\n                break;\n            default:\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\n        }\n        c[0] = value / 10;\n        switch (true) {\n            case (counter >= firstViewCopy.length):\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\n                break;\n            default:\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\n        }\n    }\n    if (c[0] > 0)\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\n    return firstViewCopy;\n}\nfunction power2(n) {\n    if (n >= powers2.length) {\n        for (let p = powers2.length; p <= n; p++) {\n            const c = new Uint8Array([0]);\n            let digits = (powers2[p - 1]).slice(0);\n            for (let i = (digits.length - 1); i >= 0; i--) {\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\n                c[0] = newValue[0] / 10;\n                digits[i] = newValue[0] % 10;\n            }\n            if (c[0] > 0)\n                digits = pvutils.utilConcatView(c, digits);\n            powers2.push(digits);\n        }\n    }\n    return powers2[n];\n}\nfunction viewSub(first, second) {\n    let b = 0;\n    const firstView = new Uint8Array(first);\n    const secondView = new Uint8Array(second);\n    const firstViewCopy = firstView.slice(0);\n    const firstViewCopyLength = firstViewCopy.length - 1;\n    const secondViewCopy = secondView.slice(0);\n    const secondViewCopyLength = secondViewCopy.length - 1;\n    let value;\n    let counter = 0;\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\n        switch (true) {\n            case (value < 0):\n                b = 1;\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\n                break;\n            default:\n                b = 0;\n                firstViewCopy[firstViewCopyLength - counter] = value;\n        }\n    }\n    if (b > 0) {\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\n            if (value < 0) {\n                b = 1;\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\n            }\n            else {\n                b = 0;\n                firstViewCopy[firstViewCopyLength - counter] = value;\n                break;\n            }\n        }\n    }\n    return firstViewCopy.slice();\n}\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\n    setValueHex() {\n        if (this.valueHexView.length >= 4) {\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\n            this.isHexOnly = true;\n            this._valueDec = 0;\n        }\n        else {\n            this.isHexOnly = false;\n            if (this.valueHexView.length > 0) {\n                this._valueDec = pvutils.utilDecodeTC.call(this);\n            }\n        }\n    }\n    constructor({ value, ...parameters } = {}) {\n        super(parameters);\n        this._valueDec = 0;\n        if (parameters.valueHex) {\n            this.setValueHex();\n        }\n        if (value !== undefined) {\n            this.valueDec = value;\n        }\n    }\n    set valueDec(v) {\n        this._valueDec = v;\n        this.isHexOnly = false;\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\n    }\n    get valueDec() {\n        return this._valueDec;\n    }\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\n        if (offset === -1)\n            return offset;\n        const view = this.valueHexView;\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\n            this.valueHexView = view.subarray(1);\n        }\n        else {\n            if (expectedLength !== 0) {\n                if (view.length < expectedLength) {\n                    if ((expectedLength - view.length) > 1)\n                        expectedLength = view.length + 1;\n                    this.valueHexView = view.subarray(expectedLength - view.length);\n                }\n            }\n        }\n        return offset;\n    }\n    toDER(sizeOnly = false) {\n        const view = this.valueHexView;\n        switch (true) {\n            case ((view[0] & 0x80) !== 0):\n                {\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\n                    updatedView[0] = 0x00;\n                    updatedView.set(view, 1);\n                    this.valueHexView = updatedView;\n                }\n                break;\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\n                {\n                    this.valueHexView = this.valueHexView.subarray(1);\n                }\n                break;\n        }\n        return this.toBER(sizeOnly);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n        if (resultOffset === -1) {\n            return resultOffset;\n        }\n        this.setValueHex();\n        return resultOffset;\n    }\n    toBER(sizeOnly) {\n        return sizeOnly\n            ? new ArrayBuffer(this.valueHexView.length)\n            : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n        };\n    }\n    toString() {\n        const firstBit = (this.valueHexView.length * 8) - 1;\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\n        let bitNumber = 0;\n        let currentByte;\n        const asn1View = this.valueHexView;\n        let result = \"\";\n        let flag = false;\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\n            currentByte = asn1View[byteNumber];\n            for (let i = 0; i < 8; i++) {\n                if ((currentByte & 1) === 1) {\n                    switch (bitNumber) {\n                        case firstBit:\n                            digits = viewSub(power2(bitNumber), digits);\n                            result = \"-\";\n                            break;\n                        default:\n                            digits = viewAdd(digits, power2(bitNumber));\n                    }\n                }\n                bitNumber++;\n                currentByte >>= 1;\n            }\n        }\n        for (let i = 0; i < digits.length; i++) {\n            if (digits[i])\n                flag = true;\n            if (flag)\n                result += digitsString.charAt(digits[i]);\n        }\n        if (flag === false)\n            result += digitsString.charAt(0);\n        return result;\n    }\n}\n_a$p = LocalIntegerValueBlock;\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\n(() => {\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\n        set: function (v) {\n            this.valueHexView = new Uint8Array(v);\n            this.setValueHex();\n        },\n        get: function () {\n            return this.valueHexView.slice().buffer;\n        },\n    });\n})();\n\nvar _a$o;\nclass Integer extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalIntegerValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 2;\n    }\n    toBigInt() {\n        assertBigInt();\n        return BigInt(this.valueBlock.toString());\n    }\n    static fromBigInt(value) {\n        assertBigInt();\n        const bigIntValue = BigInt(value);\n        const writer = new ViewWriter();\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\n        if (bigIntValue < 0) {\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\n            first[0] |= 0x80;\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\n            const secondInt = firstInt + bigIntValue;\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\n            second[0] |= 0x80;\n            writer.write(second);\n        }\n        else {\n            if (view[0] & 0x80) {\n                writer.write(new Uint8Array([0]));\n            }\n            writer.write(view);\n        }\n        const res = new _a$o({ valueHex: writer.final() });\n        return res;\n    }\n    convertToDER() {\n        const integer = new _a$o({ valueHex: this.valueBlock.valueHexView });\n        integer.valueBlock.toDER();\n        return integer;\n    }\n    convertFromDER() {\n        return new _a$o({\n            valueHex: this.valueBlock.valueHexView[0] === 0\n                ? this.valueBlock.valueHexView.subarray(1)\n                : this.valueBlock.valueHexView,\n        });\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\n    }\n}\n_a$o = Integer;\n(() => {\n    typeStore.Integer = _a$o;\n})();\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\nclass Enumerated extends Integer {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 10;\n    }\n}\n_a$n = Enumerated;\n(() => {\n    typeStore.Enumerated = _a$n;\n})();\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\n        super(parameters);\n        this.valueDec = valueDec;\n        this.isFirstSid = isFirstSid;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (!inputLength) {\n            return inputOffset;\n        }\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.valueHexView = new Uint8Array(inputLength);\n        for (let i = 0; i < inputLength; i++) {\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\n            this.blockLength++;\n            if ((intBuffer[i] & 0x80) === 0x00)\n                break;\n        }\n        const tempView = new Uint8Array(this.blockLength);\n        for (let i = 0; i < this.blockLength; i++) {\n            tempView[i] = this.valueHexView[i];\n        }\n        this.valueHexView = tempView;\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        if (this.valueHexView[0] === 0x00)\n            this.warnings.push(\"Needlessly long format of SID encoding\");\n        if (this.blockLength <= 8)\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\n        else {\n            this.isHexOnly = true;\n            this.warnings.push(\"Too big SID for decoding, hex only\");\n        }\n        return (inputOffset + this.blockLength);\n    }\n    set valueBigInt(value) {\n        assertBigInt();\n        let bits = BigInt(value).toString(2);\n        while (bits.length % 7) {\n            bits = \"0\" + bits;\n        }\n        const bytes = new Uint8Array(bits.length / 7);\n        for (let i = 0; i < bytes.length; i++) {\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\n        }\n        this.fromBER(bytes.buffer, 0, bytes.length);\n    }\n    toBER(sizeOnly) {\n        if (this.isHexOnly) {\n            if (sizeOnly)\n                return (new ArrayBuffer(this.valueHexView.byteLength));\n            const curView = this.valueHexView;\n            const retView = new Uint8Array(this.blockLength);\n            for (let i = 0; i < (this.blockLength - 1); i++)\n                retView[i] = curView[i] | 0x80;\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\n            return retView.buffer;\n        }\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\n        if (encodedBuf.byteLength === 0) {\n            this.error = \"Error during encoding SID value\";\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(encodedBuf.byteLength);\n        if (!sizeOnly) {\n            const encodedView = new Uint8Array(encodedBuf);\n            const len = encodedBuf.byteLength - 1;\n            for (let i = 0; i < len; i++)\n                retView[i] = encodedView[i] | 0x80;\n            retView[len] = encodedView[len];\n        }\n        return retView;\n    }\n    toString() {\n        let result = \"\";\n        if (this.isHexOnly)\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\n        else {\n            if (this.isFirstSid) {\n                let sidValue = this.valueDec;\n                if (this.valueDec <= 39)\n                    result = \"0.\";\n                else {\n                    if (this.valueDec <= 79) {\n                        result = \"1.\";\n                        sidValue -= 40;\n                    }\n                    else {\n                        result = \"2.\";\n                        sidValue -= 80;\n                    }\n                }\n                result += sidValue.toString();\n            }\n            else\n                result = this.valueDec.toString();\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n            isFirstSid: this.isFirstSid,\n        };\n    }\n}\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n        super(parameters);\n        this.value = [];\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = inputOffset;\n        while (inputLength > 0) {\n            const sidBlock = new LocalSidValueBlock();\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n            if (resultOffset === -1) {\n                this.blockLength = 0;\n                this.error = sidBlock.error;\n                return resultOffset;\n            }\n            if (this.value.length === 0)\n                sidBlock.isFirstSid = true;\n            this.blockLength += sidBlock.blockLength;\n            inputLength -= sidBlock.blockLength;\n            this.value.push(sidBlock);\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly) {\n        const retBuffers = [];\n        for (let i = 0; i < this.value.length; i++) {\n            const valueBuf = this.value[i].toBER(sizeOnly);\n            if (valueBuf.byteLength === 0) {\n                this.error = this.value[i].error;\n                return EMPTY_BUFFER;\n            }\n            retBuffers.push(valueBuf);\n        }\n        return concat(retBuffers);\n    }\n    fromString(string) {\n        this.value = [];\n        let pos1 = 0;\n        let pos2 = 0;\n        let sid = \"\";\n        let flag = false;\n        do {\n            pos2 = string.indexOf(\".\", pos1);\n            if (pos2 === -1)\n                sid = string.substring(pos1);\n            else\n                sid = string.substring(pos1, pos2);\n            pos1 = pos2 + 1;\n            if (flag) {\n                const sidBlock = this.value[0];\n                let plus = 0;\n                switch (sidBlock.valueDec) {\n                    case 0:\n                        break;\n                    case 1:\n                        plus = 40;\n                        break;\n                    case 2:\n                        plus = 80;\n                        break;\n                    default:\n                        this.value = [];\n                        return;\n                }\n                const parsedSID = parseInt(sid, 10);\n                if (isNaN(parsedSID))\n                    return;\n                sidBlock.valueDec = parsedSID + plus;\n                flag = false;\n            }\n            else {\n                const sidBlock = new LocalSidValueBlock();\n                if (sid > Number.MAX_SAFE_INTEGER) {\n                    assertBigInt();\n                    const sidValue = BigInt(sid);\n                    sidBlock.valueBigInt = sidValue;\n                }\n                else {\n                    sidBlock.valueDec = parseInt(sid, 10);\n                    if (isNaN(sidBlock.valueDec))\n                        return;\n                }\n                if (!this.value.length) {\n                    sidBlock.isFirstSid = true;\n                    flag = true;\n                }\n                this.value.push(sidBlock);\n            }\n        } while (pos2 !== -1);\n    }\n    toString() {\n        let result = \"\";\n        let isHexOnly = false;\n        for (let i = 0; i < this.value.length; i++) {\n            isHexOnly = this.value[i].isHexOnly;\n            let sidStr = this.value[i].toString();\n            if (i !== 0)\n                result = `${result}.`;\n            if (isHexOnly) {\n                sidStr = `{${sidStr}}`;\n                if (this.value[i].isFirstSid)\n                    result = `2.{${sidStr} - 80}`;\n                else\n                    result += sidStr;\n            }\n            else\n                result += sidStr;\n        }\n        return result;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            value: this.toString(),\n            sidArray: [],\n        };\n        for (let i = 0; i < this.value.length; i++) {\n            object.sidArray.push(this.value[i].toJSON());\n        }\n        return object;\n    }\n}\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\nclass ObjectIdentifier extends BaseBlock {\n    getValue() {\n        return this.valueBlock.toString();\n    }\n    setValue(value) {\n        this.valueBlock.fromString(value);\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalObjectIdentifierValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 6;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.getValue(),\n        };\n    }\n}\n_a$m = ObjectIdentifier;\n(() => {\n    typeStore.ObjectIdentifier = _a$m;\n})();\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\n    constructor({ valueDec = 0, ...parameters } = {}) {\n        super(parameters);\n        this.valueDec = valueDec;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (inputLength === 0)\n            return inputOffset;\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\n            return -1;\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.valueHexView = new Uint8Array(inputLength);\n        for (let i = 0; i < inputLength; i++) {\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\n            this.blockLength++;\n            if ((intBuffer[i] & 0x80) === 0x00)\n                break;\n        }\n        const tempView = new Uint8Array(this.blockLength);\n        for (let i = 0; i < this.blockLength; i++)\n            tempView[i] = this.valueHexView[i];\n        this.valueHexView = tempView;\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        if (this.valueHexView[0] === 0x00)\n            this.warnings.push(\"Needlessly long format of SID encoding\");\n        if (this.blockLength <= 8)\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\n        else {\n            this.isHexOnly = true;\n            this.warnings.push(\"Too big SID for decoding, hex only\");\n        }\n        return (inputOffset + this.blockLength);\n    }\n    toBER(sizeOnly) {\n        if (this.isHexOnly) {\n            if (sizeOnly)\n                return (new ArrayBuffer(this.valueHexView.byteLength));\n            const curView = this.valueHexView;\n            const retView = new Uint8Array(this.blockLength);\n            for (let i = 0; i < (this.blockLength - 1); i++)\n                retView[i] = curView[i] | 0x80;\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\n            return retView.buffer;\n        }\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\n        if (encodedBuf.byteLength === 0) {\n            this.error = \"Error during encoding SID value\";\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(encodedBuf.byteLength);\n        if (!sizeOnly) {\n            const encodedView = new Uint8Array(encodedBuf);\n            const len = encodedBuf.byteLength - 1;\n            for (let i = 0; i < len; i++)\n                retView[i] = encodedView[i] | 0x80;\n            retView[len] = encodedView[len];\n        }\n        return retView.buffer;\n    }\n    toString() {\n        let result = \"\";\n        if (this.isHexOnly)\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\n        else {\n            result = this.valueDec.toString();\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n        };\n    }\n}\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n        super(parameters);\n        this.value = [];\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = inputOffset;\n        while (inputLength > 0) {\n            const sidBlock = new LocalRelativeSidValueBlock();\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n            if (resultOffset === -1) {\n                this.blockLength = 0;\n                this.error = sidBlock.error;\n                return resultOffset;\n            }\n            this.blockLength += sidBlock.blockLength;\n            inputLength -= sidBlock.blockLength;\n            this.value.push(sidBlock);\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly, _writer) {\n        const retBuffers = [];\n        for (let i = 0; i < this.value.length; i++) {\n            const valueBuf = this.value[i].toBER(sizeOnly);\n            if (valueBuf.byteLength === 0) {\n                this.error = this.value[i].error;\n                return EMPTY_BUFFER;\n            }\n            retBuffers.push(valueBuf);\n        }\n        return concat(retBuffers);\n    }\n    fromString(string) {\n        this.value = [];\n        let pos1 = 0;\n        let pos2 = 0;\n        let sid = \"\";\n        do {\n            pos2 = string.indexOf(\".\", pos1);\n            if (pos2 === -1)\n                sid = string.substring(pos1);\n            else\n                sid = string.substring(pos1, pos2);\n            pos1 = pos2 + 1;\n            const sidBlock = new LocalRelativeSidValueBlock();\n            sidBlock.valueDec = parseInt(sid, 10);\n            if (isNaN(sidBlock.valueDec))\n                return true;\n            this.value.push(sidBlock);\n        } while (pos2 !== -1);\n        return true;\n    }\n    toString() {\n        let result = \"\";\n        let isHexOnly = false;\n        for (let i = 0; i < this.value.length; i++) {\n            isHexOnly = this.value[i].isHexOnly;\n            let sidStr = this.value[i].toString();\n            if (i !== 0)\n                result = `${result}.`;\n            if (isHexOnly) {\n                sidStr = `{${sidStr}}`;\n                result += sidStr;\n            }\n            else\n                result += sidStr;\n        }\n        return result;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            value: this.toString(),\n            sidArray: [],\n        };\n        for (let i = 0; i < this.value.length; i++)\n            object.sidArray.push(this.value[i].toJSON());\n        return object;\n    }\n}\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\nclass RelativeObjectIdentifier extends BaseBlock {\n    getValue() {\n        return this.valueBlock.toString();\n    }\n    setValue(value) {\n        this.valueBlock.fromString(value);\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 13;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.getValue(),\n        };\n    }\n}\n_a$l = RelativeObjectIdentifier;\n(() => {\n    typeStore.RelativeObjectIdentifier = _a$l;\n})();\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\nclass Sequence extends Constructed {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 16;\n    }\n}\n_a$k = Sequence;\n(() => {\n    typeStore.Sequence = _a$k;\n})();\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\nclass Set extends Constructed {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 17;\n    }\n}\n_a$j = Set;\n(() => {\n    typeStore.Set = _a$j;\n})();\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.isHexOnly = true;\n        this.value = EMPTY_STRING;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.value,\n        };\n    }\n}\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\n}\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters, LocalSimpleStringValueBlock);\n    }\n    fromBuffer(inputBuffer) {\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\n    }\n    fromString(inputString) {\n        const strLen = inputString.length;\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\n        for (let i = 0; i < strLen; i++)\n            view[i] = inputString.charCodeAt(i);\n        this.valueBlock.value = inputString;\n    }\n}\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        try {\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\n        }\n        catch (ex) {\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\n        }\n    }\n    fromString(inputString) {\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\n        this.valueBlock.value = inputString;\n    }\n}\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\nclass Utf8String extends LocalUtf8StringValueBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 12;\n    }\n}\n_a$i = Utf8String;\n(() => {\n    typeStore.Utf8String = _a$i;\n})();\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n    }\n    fromString(inputString) {\n        this.valueBlock.value = inputString;\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\n    }\n}\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\nclass BmpString extends LocalBmpStringValueBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 30;\n    }\n}\n_a$h = BmpString;\n(() => {\n    typeStore.BmpString = _a$h;\n})();\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\n        const valueView = new Uint8Array(copyBuffer);\n        for (let i = 0; i < valueView.length; i += 4) {\n            valueView[i] = valueView[i + 3];\n            valueView[i + 1] = valueView[i + 2];\n            valueView[i + 2] = 0x00;\n            valueView[i + 3] = 0x00;\n        }\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\n    }\n    fromString(inputString) {\n        const strLength = inputString.length;\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\n        for (let i = 0; i < strLength; i++) {\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\n            const codeView = new Uint8Array(codeBuf);\n            if (codeView.length > 4)\n                continue;\n            const dif = 4 - codeView.length;\n            for (let j = (codeView.length - 1); j >= 0; j--)\n                valueHexView[i * 4 + j + dif] = codeView[j];\n        }\n        this.valueBlock.value = inputString;\n    }\n}\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\nclass UniversalString extends LocalUniversalStringValueBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 28;\n    }\n}\n_a$g = UniversalString;\n(() => {\n    typeStore.UniversalString = _a$g;\n})();\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\nclass NumericString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 18;\n    }\n}\n_a$f = NumericString;\n(() => {\n    typeStore.NumericString = _a$f;\n})();\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\nclass PrintableString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 19;\n    }\n}\n_a$e = PrintableString;\n(() => {\n    typeStore.PrintableString = _a$e;\n})();\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\nclass TeletexString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 20;\n    }\n}\n_a$d = TeletexString;\n(() => {\n    typeStore.TeletexString = _a$d;\n})();\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\nclass VideotexString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 21;\n    }\n}\n_a$c = VideotexString;\n(() => {\n    typeStore.VideotexString = _a$c;\n})();\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\nclass IA5String extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 22;\n    }\n}\n_a$b = IA5String;\n(() => {\n    typeStore.IA5String = _a$b;\n})();\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\nclass GraphicString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 25;\n    }\n}\n_a$a = GraphicString;\n(() => {\n    typeStore.GraphicString = _a$a;\n})();\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\nclass VisibleString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 26;\n    }\n}\n_a$9 = VisibleString;\n(() => {\n    typeStore.VisibleString = _a$9;\n})();\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\nclass GeneralString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 27;\n    }\n}\n_a$8 = GeneralString;\n(() => {\n    typeStore.GeneralString = _a$8;\n})();\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\nclass CharacterString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 29;\n    }\n}\n_a$7 = CharacterString;\n(() => {\n    typeStore.CharacterString = _a$7;\n})();\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\nclass UTCTime extends VisibleString {\n    constructor({ value, valueDate, ...parameters } = {}) {\n        super(parameters);\n        this.year = 0;\n        this.month = 0;\n        this.day = 0;\n        this.hour = 0;\n        this.minute = 0;\n        this.second = 0;\n        if (value) {\n            this.fromString(value);\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\n            for (let i = 0; i < value.length; i++)\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\n        }\n        if (valueDate) {\n            this.fromDate(valueDate);\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\n        }\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 23;\n    }\n    fromBuffer(inputBuffer) {\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\n    }\n    toBuffer() {\n        const str = this.toString();\n        const buffer = new ArrayBuffer(str.length);\n        const view = new Uint8Array(buffer);\n        for (let i = 0; i < str.length; i++)\n            view[i] = str.charCodeAt(i);\n        return buffer;\n    }\n    fromDate(inputDate) {\n        this.year = inputDate.getUTCFullYear();\n        this.month = inputDate.getUTCMonth() + 1;\n        this.day = inputDate.getUTCDate();\n        this.hour = inputDate.getUTCHours();\n        this.minute = inputDate.getUTCMinutes();\n        this.second = inputDate.getUTCSeconds();\n    }\n    toDate() {\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\n    }\n    fromString(inputString) {\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\n        const parserArray = parser.exec(inputString);\n        if (parserArray === null) {\n            this.error = \"Wrong input string for conversion\";\n            return;\n        }\n        const year = parseInt(parserArray[1], 10);\n        if (year >= 50)\n            this.year = 1900 + year;\n        else\n            this.year = 2000 + year;\n        this.month = parseInt(parserArray[2], 10);\n        this.day = parseInt(parserArray[3], 10);\n        this.hour = parseInt(parserArray[4], 10);\n        this.minute = parseInt(parserArray[5], 10);\n        this.second = parseInt(parserArray[6], 10);\n    }\n    toString(encoding = \"iso\") {\n        if (encoding === \"iso\") {\n            const outputArray = new Array(7);\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\n            outputArray[1] = pvutils.padNumber(this.month, 2);\n            outputArray[2] = pvutils.padNumber(this.day, 2);\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\n            outputArray[5] = pvutils.padNumber(this.second, 2);\n            outputArray[6] = \"Z\";\n            return outputArray.join(\"\");\n        }\n        return super.toString(encoding);\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            year: this.year,\n            month: this.month,\n            day: this.day,\n            hour: this.hour,\n            minute: this.minute,\n            second: this.second,\n        };\n    }\n}\n_a$6 = UTCTime;\n(() => {\n    typeStore.UTCTime = _a$6;\n})();\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\nclass GeneralizedTime extends UTCTime {\n    constructor(parameters = {}) {\n        var _b;\n        super(parameters);\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 24;\n    }\n    fromDate(inputDate) {\n        super.fromDate(inputDate);\n        this.millisecond = inputDate.getUTCMilliseconds();\n    }\n    toDate() {\n        const utcDate = Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond);\n        return (new Date(utcDate));\n    }\n    fromString(inputString) {\n        let isUTC = false;\n        let timeString = \"\";\n        let dateTimeString = \"\";\n        let fractionPart = 0;\n        let parser;\n        let hourDifference = 0;\n        let minuteDifference = 0;\n        if (inputString[inputString.length - 1] === \"Z\") {\n            timeString = inputString.substring(0, inputString.length - 1);\n            isUTC = true;\n        }\n        else {\n            const number = new Number(inputString[inputString.length - 1]);\n            if (isNaN(number.valueOf()))\n                throw new Error(\"Wrong input string for conversion\");\n            timeString = inputString;\n        }\n        if (isUTC) {\n            if (timeString.indexOf(\"+\") !== -1)\n                throw new Error(\"Wrong input string for conversion\");\n            if (timeString.indexOf(\"-\") !== -1)\n                throw new Error(\"Wrong input string for conversion\");\n        }\n        else {\n            let multiplier = 1;\n            let differencePosition = timeString.indexOf(\"+\");\n            let differenceString = \"\";\n            if (differencePosition === -1) {\n                differencePosition = timeString.indexOf(\"-\");\n                multiplier = -1;\n            }\n            if (differencePosition !== -1) {\n                differenceString = timeString.substring(differencePosition + 1);\n                timeString = timeString.substring(0, differencePosition);\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\n                    throw new Error(\"Wrong input string for conversion\");\n                let number = parseInt(differenceString.substring(0, 2), 10);\n                if (isNaN(number.valueOf()))\n                    throw new Error(\"Wrong input string for conversion\");\n                hourDifference = multiplier * number;\n                if (differenceString.length === 4) {\n                    number = parseInt(differenceString.substring(2, 4), 10);\n                    if (isNaN(number.valueOf()))\n                        throw new Error(\"Wrong input string for conversion\");\n                    minuteDifference = multiplier * number;\n                }\n            }\n        }\n        let fractionPointPosition = timeString.indexOf(\".\");\n        if (fractionPointPosition === -1)\n            fractionPointPosition = timeString.indexOf(\",\");\n        if (fractionPointPosition !== -1) {\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\n            if (isNaN(fractionPartCheck.valueOf()))\n                throw new Error(\"Wrong input string for conversion\");\n            fractionPart = fractionPartCheck.valueOf();\n            dateTimeString = timeString.substring(0, fractionPointPosition);\n        }\n        else\n            dateTimeString = timeString;\n        switch (true) {\n            case (dateTimeString.length === 8):\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1)\n                    throw new Error(\"Wrong input string for conversion\");\n                break;\n            case (dateTimeString.length === 10):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    let fractionResult = 60 * fractionPart;\n                    this.minute = Math.floor(fractionResult);\n                    fractionResult = 60 * (fractionResult - this.minute);\n                    this.second = Math.floor(fractionResult);\n                    fractionResult = 1000 * (fractionResult - this.second);\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            case (dateTimeString.length === 12):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    let fractionResult = 60 * fractionPart;\n                    this.second = Math.floor(fractionResult);\n                    fractionResult = 1000 * (fractionResult - this.second);\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            case (dateTimeString.length === 14):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    const fractionResult = 1000 * fractionPart;\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            default:\n                throw new Error(\"Wrong input string for conversion\");\n        }\n        const parserArray = parser.exec(dateTimeString);\n        if (parserArray === null)\n            throw new Error(\"Wrong input string for conversion\");\n        for (let j = 1; j < parserArray.length; j++) {\n            switch (j) {\n                case 1:\n                    this.year = parseInt(parserArray[j], 10);\n                    break;\n                case 2:\n                    this.month = parseInt(parserArray[j], 10);\n                    break;\n                case 3:\n                    this.day = parseInt(parserArray[j], 10);\n                    break;\n                case 4:\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\n                    break;\n                case 5:\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\n                    break;\n                case 6:\n                    this.second = parseInt(parserArray[j], 10);\n                    break;\n                default:\n                    throw new Error(\"Wrong input string for conversion\");\n            }\n        }\n        if (isUTC === false) {\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n            this.year = tempDate.getUTCFullYear();\n            this.month = tempDate.getUTCMonth();\n            this.day = tempDate.getUTCDay();\n            this.hour = tempDate.getUTCHours();\n            this.minute = tempDate.getUTCMinutes();\n            this.second = tempDate.getUTCSeconds();\n            this.millisecond = tempDate.getUTCMilliseconds();\n        }\n    }\n    toString(encoding = \"iso\") {\n        if (encoding === \"iso\") {\n            const outputArray = [];\n            outputArray.push(pvutils.padNumber(this.year, 4));\n            outputArray.push(pvutils.padNumber(this.month, 2));\n            outputArray.push(pvutils.padNumber(this.day, 2));\n            outputArray.push(pvutils.padNumber(this.hour, 2));\n            outputArray.push(pvutils.padNumber(this.minute, 2));\n            outputArray.push(pvutils.padNumber(this.second, 2));\n            if (this.millisecond !== 0) {\n                outputArray.push(\".\");\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\n            }\n            outputArray.push(\"Z\");\n            return outputArray.join(\"\");\n        }\n        return super.toString(encoding);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            millisecond: this.millisecond,\n        };\n    }\n}\n_a$5 = GeneralizedTime;\n(() => {\n    typeStore.GeneralizedTime = _a$5;\n})();\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\nclass DATE extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 31;\n    }\n}\n_a$4 = DATE;\n(() => {\n    typeStore.DATE = _a$4;\n})();\nDATE.NAME = \"DATE\";\n\nvar _a$3;\nclass TimeOfDay extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 32;\n    }\n}\n_a$3 = TimeOfDay;\n(() => {\n    typeStore.TimeOfDay = _a$3;\n})();\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\nclass DateTime extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 33;\n    }\n}\n_a$2 = DateTime;\n(() => {\n    typeStore.DateTime = _a$2;\n})();\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\nclass Duration extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 34;\n    }\n}\n_a$1 = Duration;\n(() => {\n    typeStore.Duration = _a$1;\n})();\nDuration.NAME = \"Duration\";\n\nvar _a;\nclass TIME extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 14;\n    }\n}\n_a = TIME;\n(() => {\n    typeStore.TIME = _a;\n})();\nTIME.NAME = \"TIME\";\n\nclass Any {\n    constructor({ name = EMPTY_STRING, optional = false } = {}) {\n        this.name = name;\n        this.optional = optional;\n    }\n}\n\nclass Choice extends Any {\n    constructor({ value = [], ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n    }\n}\n\nclass Repeated extends Any {\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n        this.local = local;\n    }\n}\n\nclass RawData {\n    get data() {\n        return this.dataView.slice().buffer;\n    }\n    set data(value) {\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\n    }\n    constructor({ data = EMPTY_VIEW } = {}) {\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const endLength = inputOffset + inputLength;\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\n        return endLength;\n    }\n    toBER(_sizeOnly) {\n        return this.dataView.slice().buffer;\n    }\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\n    if (inputSchema instanceof Choice) {\n        for (const element of inputSchema.value) {\n            const result = compareSchema(root, inputData, element);\n            if (result.verified) {\n                return {\n                    verified: true,\n                    result: root,\n                };\n            }\n        }\n        {\n            const _result = {\n                verified: false,\n                result: { error: \"Wrong values for Choice type\" },\n            };\n            if (inputSchema.hasOwnProperty(NAME))\n                _result.name = inputSchema.name;\n            return _result;\n        }\n    }\n    if (inputSchema instanceof Any) {\n        if (inputSchema.hasOwnProperty(NAME))\n            root[inputSchema.name] = inputData;\n        return {\n            verified: true,\n            result: root,\n        };\n    }\n    if ((root instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong root object\" },\n        };\n    }\n    if ((inputData instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 data\" },\n        };\n    }\n    if ((inputSchema instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((ID_BLOCK in inputSchema) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((FROM_BER in inputSchema.idBlock) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((TO_BER in inputSchema.idBlock) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    const encodedId = inputSchema.idBlock.toBER(false);\n    if (encodedId.byteLength === 0) {\n        return {\n            verified: false,\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" },\n        };\n    }\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\n    if (decodedOffset === -1) {\n        return {\n            verified: false,\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.isHexOnly) {\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\n            return {\n                verified: false,\n                result: { error: \"Wrong ASN.1 schema\" },\n            };\n        }\n        const schemaView = inputSchema.idBlock.valueHexView;\n        const asn1View = inputData.idBlock.valueHexView;\n        if (schemaView.length !== asn1View.length) {\n            return {\n                verified: false,\n                result: root,\n            };\n        }\n        for (let i = 0; i < schemaView.length; i++) {\n            if (schemaView[i] !== asn1View[1]) {\n                return {\n                    verified: false,\n                    result: root,\n                };\n            }\n        }\n    }\n    if (inputSchema.name) {\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n        if (inputSchema.name)\n            root[inputSchema.name] = inputData;\n    }\n    if (inputSchema instanceof typeStore.Constructed) {\n        let admission = 0;\n        let result = {\n            verified: false,\n            result: { error: \"Unknown error\" },\n        };\n        let maxLength = inputSchema.valueBlock.value.length;\n        if (maxLength > 0) {\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n                maxLength = inputData.valueBlock.value.length;\n            }\n        }\n        if (maxLength === 0) {\n            return {\n                verified: true,\n                result: root,\n            };\n        }\n        if ((inputData.valueBlock.value.length === 0)\n            && (inputSchema.valueBlock.value.length !== 0)) {\n            let _optional = true;\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\n            if (_optional) {\n                return {\n                    verified: true,\n                    result: root,\n                };\n            }\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name)\n                    delete root[inputSchema.name];\n            }\n            root.error = \"Inconsistent object length\";\n            return {\n                verified: false,\n                result: root,\n            };\n        }\n        for (let i = 0; i < maxLength; i++) {\n            if ((i - admission) >= inputData.valueBlock.value.length) {\n                if (inputSchema.valueBlock.value[i].optional === false) {\n                    const _result = {\n                        verified: false,\n                        result: root,\n                    };\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\n                    if (inputSchema.name) {\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                        if (inputSchema.name) {\n                            delete root[inputSchema.name];\n                            _result.name = inputSchema.name;\n                        }\n                    }\n                    return _result;\n                }\n            }\n            else {\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\n                    if (result.verified === false) {\n                        if (inputSchema.valueBlock.value[0].optional)\n                            admission++;\n                        else {\n                            if (inputSchema.name) {\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                                if (inputSchema.name)\n                                    delete root[inputSchema.name];\n                            }\n                            return result;\n                        }\n                    }\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\n                        let arrayRoot = {};\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\n                            arrayRoot = inputData;\n                        else\n                            arrayRoot = root;\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\n                    }\n                }\n                else {\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\n                    if (result.verified === false) {\n                        if (inputSchema.valueBlock.value[i].optional)\n                            admission++;\n                        else {\n                            if (inputSchema.name) {\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                                if (inputSchema.name)\n                                    delete root[inputSchema.name];\n                            }\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        if (result.verified === false) {\n            const _result = {\n                verified: false,\n                result: root,\n            };\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name) {\n                    delete root[inputSchema.name];\n                    _result.name = inputSchema.name;\n                }\n            }\n            return _result;\n        }\n        return {\n            verified: true,\n            result: root,\n        };\n    }\n    if (inputSchema.primitiveSchema\n        && (VALUE_HEX_VIEW in inputData.valueBlock)) {\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\n        if (asn1.offset === -1) {\n            const _result = {\n                verified: false,\n                result: asn1.result,\n            };\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name) {\n                    delete root[inputSchema.name];\n                    _result.name = inputSchema.name;\n                }\n            }\n            return _result;\n        }\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\n    }\n    return {\n        verified: true,\n        result: root,\n    };\n}\nfunction verifySchema(inputBuffer, inputSchema) {\n    if ((inputSchema instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema type\" },\n        };\n    }\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\n    if (asn1.offset === -1) {\n        return {\n            verified: false,\n            result: asn1.result,\n        };\n    }\n    return compareSchema(asn1.result, asn1.result, inputSchema);\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n", "/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n", "export var AsnTypeTypes;\n(function (AsnTypeTypes) {\n    AsnTypeTypes[AsnTypeTypes[\"Sequence\"] = 0] = \"Sequence\";\n    AsnTypeTypes[AsnTypeTypes[\"Set\"] = 1] = \"Set\";\n    AsnTypeTypes[AsnTypeTypes[\"Choice\"] = 2] = \"Choice\";\n})(AsnTypeTypes || (AsnTypeTypes = {}));\nexport var AsnPropTypes;\n(function (AsnPropTypes) {\n    AsnPropTypes[AsnPropTypes[\"Any\"] = 1] = \"Any\";\n    AsnPropTypes[AsnPropTypes[\"Boolean\"] = 2] = \"Boolean\";\n    AsnPropTypes[AsnPropTypes[\"OctetString\"] = 3] = \"OctetString\";\n    AsnPropTypes[AsnPropTypes[\"BitString\"] = 4] = \"BitString\";\n    AsnPropTypes[AsnPropTypes[\"Integer\"] = 5] = \"Integer\";\n    AsnPropTypes[AsnPropTypes[\"Enumerated\"] = 6] = \"Enumerated\";\n    AsnPropTypes[AsnPropTypes[\"ObjectIdentifier\"] = 7] = \"ObjectIdentifier\";\n    AsnPropTypes[AsnPropTypes[\"Utf8String\"] = 8] = \"Utf8String\";\n    AsnPropTypes[AsnPropTypes[\"BmpString\"] = 9] = \"BmpString\";\n    AsnPropTypes[AsnPropTypes[\"UniversalString\"] = 10] = \"UniversalString\";\n    AsnPropTypes[AsnPropTypes[\"NumericString\"] = 11] = \"NumericString\";\n    AsnPropTypes[AsnPropTypes[\"PrintableString\"] = 12] = \"PrintableString\";\n    AsnPropTypes[AsnPropTypes[\"TeletexString\"] = 13] = \"TeletexString\";\n    AsnPropTypes[AsnPropTypes[\"VideotexString\"] = 14] = \"VideotexString\";\n    AsnPropTypes[AsnPropTypes[\"IA5String\"] = 15] = \"IA5String\";\n    AsnPropTypes[AsnPropTypes[\"GraphicString\"] = 16] = \"GraphicString\";\n    AsnPropTypes[AsnPropTypes[\"VisibleString\"] = 17] = \"VisibleString\";\n    AsnPropTypes[AsnPropTypes[\"GeneralString\"] = 18] = \"GeneralString\";\n    AsnPropTypes[AsnPropTypes[\"CharacterString\"] = 19] = \"CharacterString\";\n    AsnPropTypes[AsnPropTypes[\"UTCTime\"] = 20] = \"UTCTime\";\n    AsnPropTypes[AsnPropTypes[\"GeneralizedTime\"] = 21] = \"GeneralizedTime\";\n    AsnPropTypes[AsnPropTypes[\"DATE\"] = 22] = \"DATE\";\n    AsnPropTypes[AsnPropTypes[\"TimeOfDay\"] = 23] = \"TimeOfDay\";\n    AsnPropTypes[AsnPropTypes[\"DateTime\"] = 24] = \"DateTime\";\n    AsnPropTypes[AsnPropTypes[\"Duration\"] = 25] = \"Duration\";\n    AsnPropTypes[AsnPropTypes[\"TIME\"] = 26] = \"TIME\";\n    AsnPropTypes[AsnPropTypes[\"Null\"] = 27] = \"Null\";\n})(AsnPropTypes || (AsnPropTypes = {}));\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class BitString {\n    constructor(params, unusedBits = 0) {\n        this.unusedBits = 0;\n        this.value = new ArrayBuffer(0);\n        if (params) {\n            if (typeof params === \"number\") {\n                this.fromNumber(params);\n            }\n            else if (BufferSourceConverter.isBufferSource(params)) {\n                this.unusedBits = unusedBits;\n                this.value = BufferSourceConverter.toArrayBuffer(params);\n            }\n            else {\n                throw TypeError(\"Unsupported type of 'params' argument for BitString\");\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.BitString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 BitString\");\n        }\n        this.unusedBits = asn.valueBlock.unusedBits;\n        this.value = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.BitString({ unusedBits: this.unusedBits, valueHex: this.value });\n    }\n    toSchema(name) {\n        return new asn1js.BitString({ name });\n    }\n    toNumber() {\n        let res = \"\";\n        const uintArray = new Uint8Array(this.value);\n        for (const octet of uintArray) {\n            res += octet.toString(2).padStart(8, \"0\");\n        }\n        res = res.split(\"\").reverse().join(\"\");\n        if (this.unusedBits) {\n            res = res.slice(this.unusedBits).padStart(this.unusedBits, \"0\");\n        }\n        return parseInt(res, 2);\n    }\n    fromNumber(value) {\n        let bits = value.toString(2);\n        const octetSize = (bits.length + 7) >> 3;\n        this.unusedBits = (octetSize << 3) - bits.length;\n        const octets = new Uint8Array(octetSize);\n        bits = bits\n            .padStart(octetSize << 3, \"0\")\n            .split(\"\")\n            .reverse()\n            .join(\"\");\n        let index = 0;\n        while (index < octetSize) {\n            octets[index] = parseInt(bits.slice(index << 3, (index << 3) + 8), 2);\n            index++;\n        }\n        this.value = octets.buffer;\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class OctetString {\n    get byteLength() {\n        return this.buffer.byteLength;\n    }\n    get byteOffset() {\n        return 0;\n    }\n    constructor(param) {\n        if (typeof param === \"number\") {\n            this.buffer = new ArrayBuffer(param);\n        }\n        else {\n            if (BufferSourceConverter.isBufferSource(param)) {\n                this.buffer = BufferSourceConverter.toArrayBuffer(param);\n            }\n            else if (Array.isArray(param)) {\n                this.buffer = new Uint8Array(param);\n            }\n            else {\n                this.buffer = new ArrayBuffer(0);\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.OctetString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 OctetString\");\n        }\n        this.buffer = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.OctetString({ valueHex: this.buffer });\n    }\n    toSchema(name) {\n        return new asn1js.OctetString({ name });\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nimport { OctetString } from \"./types/index\";\nexport const AsnAnyConverter = {\n    fromASN: (value) => value instanceof asn1js.Null ? null : value.valueBeforeDecodeView,\n    toASN: (value) => {\n        if (value === null) {\n            return new asn1js.Null();\n        }\n        const schema = asn1js.fromBER(value);\n        if (schema.result.error) {\n            throw new Error(schema.result.error);\n        }\n        return schema.result;\n    },\n};\nexport const AsnIntegerConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView.byteLength >= 4\n        ? value.valueBlock.toString()\n        : value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Integer({ value: +value }),\n};\nexport const AsnEnumeratedConverter = {\n    fromASN: (value) => value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Enumerated({ value }),\n};\nexport const AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.Integer({ valueHex: value }),\n};\nexport const AsnIntegerBigIntConverter = {\n    fromASN: (value) => value.toBigInt(),\n    toASN: (value) => asn1js.Integer.fromBigInt(value),\n};\nexport const AsnBitStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.BitString({ valueHex: value }),\n};\nexport const AsnObjectIdentifierConverter = {\n    fromASN: (value) => value.valueBlock.toString(),\n    toASN: (value) => new asn1js.ObjectIdentifier({ value }),\n};\nexport const AsnBooleanConverter = {\n    fromASN: (value) => value.valueBlock.value,\n    toASN: (value) => new asn1js.Boolean({ value }),\n};\nexport const AsnOctetStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.OctetString({ valueHex: value }),\n};\nexport const AsnConstructedOctetStringConverter = {\n    fromASN: (value) => new OctetString(value.getValue()),\n    toASN: (value) => value.toASN(),\n};\nfunction createStringConverter(Asn1Type) {\n    return {\n        fromASN: (value) => value.valueBlock.value,\n        toASN: (value) => new Asn1Type({ value }),\n    };\n}\nexport const AsnUtf8StringConverter = createStringConverter(asn1js.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1js.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1js.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1js.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1js.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1js.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1js.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1js.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1js.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1js.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1js.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1js.CharacterString);\nexport const AsnUTCTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.UTCTime({ valueDate: value }),\n};\nexport const AsnGeneralizedTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.GeneralizedTime({ valueDate: value }),\n};\nexport const AsnNullConverter = {\n    fromASN: () => null,\n    toASN: () => {\n        return new asn1js.Null();\n    },\n};\nexport function defaultConverter(type) {\n    switch (type) {\n        case AsnPropTypes.Any:\n            return AsnAnyConverter;\n        case AsnPropTypes.BitString:\n            return AsnBitStringConverter;\n        case AsnPropTypes.BmpString:\n            return AsnBmpStringConverter;\n        case AsnPropTypes.Boolean:\n            return AsnBooleanConverter;\n        case AsnPropTypes.CharacterString:\n            return AsnCharacterStringConverter;\n        case AsnPropTypes.Enumerated:\n            return AsnEnumeratedConverter;\n        case AsnPropTypes.GeneralString:\n            return AsnGeneralStringConverter;\n        case AsnPropTypes.GeneralizedTime:\n            return AsnGeneralizedTimeConverter;\n        case AsnPropTypes.GraphicString:\n            return AsnGraphicStringConverter;\n        case AsnPropTypes.IA5String:\n            return AsnIA5StringConverter;\n        case AsnPropTypes.Integer:\n            return AsnIntegerConverter;\n        case AsnPropTypes.Null:\n            return AsnNullConverter;\n        case AsnPropTypes.NumericString:\n            return AsnNumericStringConverter;\n        case AsnPropTypes.ObjectIdentifier:\n            return AsnObjectIdentifierConverter;\n        case AsnPropTypes.OctetString:\n            return AsnOctetStringConverter;\n        case AsnPropTypes.PrintableString:\n            return AsnPrintableStringConverter;\n        case AsnPropTypes.TeletexString:\n            return AsnTeletexStringConverter;\n        case AsnPropTypes.UTCTime:\n            return AsnUTCTimeConverter;\n        case AsnPropTypes.UniversalString:\n            return AsnUniversalStringConverter;\n        case AsnPropTypes.Utf8String:\n            return AsnUtf8StringConverter;\n        case AsnPropTypes.VideotexString:\n            return AsnVideotexStringConverter;\n        case AsnPropTypes.VisibleString:\n            return AsnVisibleStringConverter;\n        default:\n            return null;\n    }\n}\n", "export function isConvertible(target) {\n    if (typeof target === \"function\" && target.prototype) {\n        if (target.prototype.toASN && target.prototype.fromASN) {\n            return true;\n        }\n        else {\n            return isConvertible(target.prototype);\n        }\n    }\n    else {\n        return !!(target && typeof target === \"object\" && \"toASN\" in target && \"fromASN\" in target);\n    }\n}\nexport function isTypeOfArray(target) {\n    var _a;\n    if (target) {\n        const proto = Object.getPrototypeOf(target);\n        if (((_a = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === Array) {\n            return true;\n        }\n        return isTypeOfArray(proto);\n    }\n    return false;\n}\nexport function isArrayEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible } from \"./helper\";\nexport class AsnSchemaStorage {\n    constructor() {\n        this.items = new WeakMap();\n    }\n    has(target) {\n        return this.items.has(target);\n    }\n    get(target, checkSchema = false) {\n        const schema = this.items.get(target);\n        if (!schema) {\n            throw new Error(`Cannot get schema for '${target.prototype.constructor.name}' target`);\n        }\n        if (checkSchema && !schema.schema) {\n            throw new Error(`Schema '${target.prototype.constructor.name}' doesn't contain ASN.1 schema. Call 'AsnSchemaStorage.cache'.`);\n        }\n        return schema;\n    }\n    cache(target) {\n        const schema = this.get(target);\n        if (!schema.schema) {\n            schema.schema = this.create(target, true);\n        }\n    }\n    createDefault(target) {\n        const schema = { type: AsnTypeTypes.Sequence, items: {} };\n        const parentSchema = this.findParentSchema(target);\n        if (parentSchema) {\n            Object.assign(schema, parentSchema);\n            schema.items = Object.assign({}, schema.items, parentSchema.items);\n        }\n        return schema;\n    }\n    create(target, useNames) {\n        const schema = this.items.get(target) || this.createDefault(target);\n        const asn1Value = [];\n        for (const key in schema.items) {\n            const item = schema.items[key];\n            const name = useNames ? key : \"\";\n            let asn1Item;\n            if (typeof item.type === \"number\") {\n                const Asn1TypeName = AsnPropTypes[item.type];\n                const Asn1Type = asn1js[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get ASN1 class by name '${Asn1TypeName}'`);\n                }\n                asn1Item = new Asn1Type({ name });\n            }\n            else if (isConvertible(item.type)) {\n                const instance = new item.type();\n                asn1Item = instance.toSchema(name);\n            }\n            else if (item.optional) {\n                const itemSchema = this.get(item.type);\n                if (itemSchema.type === AsnTypeTypes.Choice) {\n                    asn1Item = new asn1js.Any({ name });\n                }\n                else {\n                    asn1Item = this.create(item.type, false);\n                    asn1Item.name = name;\n                }\n            }\n            else {\n                asn1Item = new asn1js.Any({ name });\n            }\n            const optional = !!item.optional || item.defaultValue !== undefined;\n            if (item.repeated) {\n                asn1Item.name = \"\";\n                const Container = item.repeated === \"set\" ? asn1js.Set : asn1js.Sequence;\n                asn1Item = new Container({\n                    name: \"\",\n                    value: [new asn1js.Repeated({ name, value: asn1Item })],\n                });\n            }\n            if (item.context !== null && item.context !== undefined) {\n                if (item.implicit) {\n                    if (typeof item.type === \"number\" || isConvertible(item.type)) {\n                        const Container = item.repeated ? asn1js.Constructed : asn1js.Primitive;\n                        asn1Value.push(new Container({ name, optional, idBlock: { tagClass: 3, tagNumber: item.context } }));\n                    }\n                    else {\n                        this.cache(item.type);\n                        const isRepeated = !!item.repeated;\n                        let value = !isRepeated ? this.get(item.type, true).schema : asn1Item;\n                        value =\n                            \"valueBlock\" in value\n                                ? value.valueBlock.value\n                                :\n                                    value.value;\n                        asn1Value.push(new asn1js.Constructed({\n                            name: !isRepeated ? name : \"\",\n                            optional,\n                            idBlock: { tagClass: 3, tagNumber: item.context },\n                            value: value,\n                        }));\n                    }\n                }\n                else {\n                    asn1Value.push(new asn1js.Constructed({\n                        optional,\n                        idBlock: { tagClass: 3, tagNumber: item.context },\n                        value: [asn1Item],\n                    }));\n                }\n            }\n            else {\n                asn1Item.optional = optional;\n                asn1Value.push(asn1Item);\n            }\n        }\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                return new asn1js.Sequence({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Set:\n                return new asn1js.Set({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Choice:\n                return new asn1js.Choice({ value: asn1Value, name: \"\" });\n            default:\n                throw new Error(`Unsupported ASN1 type in use`);\n        }\n    }\n    set(target, schema) {\n        this.items.set(target, schema);\n        return this;\n    }\n    findParentSchema(target) {\n        const parent = Object.getPrototypeOf(target);\n        if (parent) {\n            const schema = this.items.get(parent);\n            return schema || this.findParentSchema(parent);\n        }\n        return null;\n    }\n}\n", "import { AsnSchemaStorage } from \"./schema\";\nexport const schemaStorage = new AsnSchemaStorage();\n", "import * as converters from \"./converters\";\nimport { AsnTypeTypes } from \"./enums\";\nimport { schemaStorage } from \"./storage\";\nexport const AsnType = (options) => (target) => {\n    let schema;\n    if (!schemaStorage.has(target)) {\n        schema = schemaStorage.createDefault(target);\n        schemaStorage.set(target, schema);\n    }\n    else {\n        schema = schemaStorage.get(target);\n    }\n    Object.assign(schema, options);\n};\nexport const AsnChoiceType = () => AsnType({ type: AsnTypeTypes.Choice });\nexport const AsnSetType = (options) => AsnType({ type: AsnTypeTypes.Set, ...options });\nexport const AsnSequenceType = (options) => AsnType({ type: AsnTypeTypes.Sequence, ...options });\nexport const AsnProp = (options) => (target, propertyKey) => {\n    let schema;\n    if (!schemaStorage.has(target.constructor)) {\n        schema = schemaStorage.createDefault(target.constructor);\n        schemaStorage.set(target.constructor, schema);\n    }\n    else {\n        schema = schemaStorage.get(target.constructor);\n    }\n    const copyOptions = Object.assign({}, options);\n    if (typeof copyOptions.type === \"number\" && !copyOptions.converter) {\n        const defaultConverter = converters.defaultConverter(options.type);\n        if (!defaultConverter) {\n            throw new Error(`Cannot get default converter for property '${propertyKey}' of ${target.constructor.name}`);\n        }\n        copyOptions.converter = defaultConverter;\n    }\n    schema.items[propertyKey] = copyOptions;\n};\n", "export class AsnSchemaValidationError extends Error {\n    constructor() {\n        super(...arguments);\n        this.schemas = [];\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport * as converters from \"./converters\";\nimport { AsnSchemaValidationError } from \"./errors\";\nimport { isConvertible, isTypeOfArray } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnParser {\n    static parse(data, target) {\n        const asn1Parsed = asn1js.fromBER(data);\n        if (asn1Parsed.result.error) {\n            throw new Error(asn1Parsed.result.error);\n        }\n        const res = this.fromASN(asn1Parsed.result, target);\n        return res;\n    }\n    static fromASN(asn1Schema, target) {\n        try {\n            if (isConvertible(target)) {\n                const value = new target();\n                return value.fromASN(asn1Schema);\n            }\n            const schema = schemaStorage.get(target);\n            schemaStorage.cache(target);\n            let targetSchema = schema.schema;\n            const choiceResult = this.handleChoiceTypes(asn1Schema, schema, target, targetSchema);\n            if (choiceResult === null || choiceResult === void 0 ? void 0 : choiceResult.result) {\n                return choiceResult.result;\n            }\n            if (choiceResult === null || choiceResult === void 0 ? void 0 : choiceResult.targetSchema) {\n                targetSchema = choiceResult.targetSchema;\n            }\n            const sequenceResult = this.handleSequenceTypes(asn1Schema, schema, target, targetSchema);\n            if (sequenceResult && \"isManualMapping\" in sequenceResult) {\n                return sequenceResult.result;\n            }\n            const asn1ComparedSchema = sequenceResult;\n            const res = new target();\n            if (isTypeOfArray(target)) {\n                return this.handleArrayTypes(asn1Schema, schema, target);\n            }\n            this.processSchemaItems(schema, asn1ComparedSchema, res);\n            return res;\n        }\n        catch (error) {\n            if (error instanceof AsnSchemaValidationError) {\n                error.schemas.push(target.name);\n            }\n            throw error;\n        }\n    }\n    static handleChoiceTypes(asn1Schema, schema, target, targetSchema) {\n        if (asn1Schema.constructor === asn1js.Constructed &&\n            schema.type === AsnTypeTypes.Choice &&\n            asn1Schema.idBlock.tagClass === 3) {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                if (schemaItem.context === asn1Schema.idBlock.tagNumber && schemaItem.implicit) {\n                    if (typeof schemaItem.type === \"function\" &&\n                        schemaStorage.has(schemaItem.type)) {\n                        const fieldSchema = schemaStorage.get(schemaItem.type);\n                        if (fieldSchema && fieldSchema.type === AsnTypeTypes.Sequence) {\n                            const newSeq = new asn1js.Sequence();\n                            if (\"value\" in asn1Schema.valueBlock &&\n                                Array.isArray(asn1Schema.valueBlock.value) &&\n                                \"value\" in newSeq.valueBlock) {\n                                newSeq.valueBlock.value = asn1Schema.valueBlock.value;\n                                const fieldValue = this.fromASN(newSeq, schemaItem.type);\n                                const res = new target();\n                                res[key] = fieldValue;\n                                return { result: res };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (asn1Schema.constructor === asn1js.Constructed &&\n            schema.type !== AsnTypeTypes.Choice) {\n            const newTargetSchema = new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: asn1Schema.idBlock.tagNumber,\n                },\n                value: schema.schema.valueBlock.value,\n            });\n            for (const key in schema.items) {\n                delete asn1Schema[key];\n            }\n            return { targetSchema: newTargetSchema };\n        }\n        return null;\n    }\n    static handleSequenceTypes(asn1Schema, schema, target, targetSchema) {\n        if (schema.type === AsnTypeTypes.Sequence) {\n            const optionalChoiceFields = Object.keys(schema.items).filter((key) => {\n                const item = schema.items[key];\n                return (item.optional &&\n                    typeof item.type === \"function\" &&\n                    schemaStorage.has(item.type) &&\n                    schemaStorage.get(item.type).type === AsnTypeTypes.Choice);\n            });\n            if (optionalChoiceFields.length > 0 &&\n                \"value\" in asn1Schema.valueBlock &&\n                Array.isArray(asn1Schema.valueBlock.value) &&\n                target.name === \"CertReqMsg\") {\n                return this.handleManualMapping(asn1Schema, schema, target);\n            }\n            const asn1ComparedSchema = asn1js.compareSchema({}, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);\n            }\n            return asn1ComparedSchema;\n        }\n        else {\n            const asn1ComparedSchema = asn1js.compareSchema({}, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);\n            }\n            return asn1ComparedSchema;\n        }\n    }\n    static handleManualMapping(asn1Schema, schema, target) {\n        const res = new target();\n        const asn1Elements = asn1Schema.valueBlock.value;\n        const schemaKeys = Object.keys(schema.items);\n        let asn1Index = 0;\n        for (let i = 0; i < schemaKeys.length; i++) {\n            const key = schemaKeys[i];\n            const schemaItem = schema.items[key];\n            if (asn1Index >= asn1Elements.length)\n                break;\n            if (schemaItem.repeated) {\n                res[key] = this.processRepeatedField(asn1Elements, asn1Index, schemaItem);\n                break;\n            }\n            else if (typeof schemaItem.type === \"number\") {\n                res[key] = this.processPrimitiveField(asn1Elements[asn1Index], schemaItem);\n                asn1Index++;\n            }\n            else if (this.isOptionalChoiceField(schemaItem)) {\n                const result = this.processOptionalChoiceField(asn1Elements[asn1Index], schemaItem);\n                if (result.processed) {\n                    res[key] = result.value;\n                    asn1Index++;\n                }\n            }\n            else {\n                res[key] = this.fromASN(asn1Elements[asn1Index], schemaItem.type);\n                asn1Index++;\n            }\n        }\n        return { result: res, verified: true, isManualMapping: true };\n    }\n    static processRepeatedField(asn1Elements, asn1Index, schemaItem) {\n        let elementsToProcess = asn1Elements.slice(asn1Index);\n        if (elementsToProcess.length === 1 && elementsToProcess[0].constructor.name === \"Sequence\") {\n            const seq = elementsToProcess[0];\n            if (seq.valueBlock && seq.valueBlock.value && Array.isArray(seq.valueBlock.value)) {\n                elementsToProcess = seq.valueBlock.value;\n            }\n        }\n        if (typeof schemaItem.type === \"number\") {\n            const converter = converters.defaultConverter(schemaItem.type);\n            if (!converter)\n                throw new Error(`No converter for ASN.1 type ${schemaItem.type}`);\n            return elementsToProcess\n                .filter((el) => el && el.valueBlock)\n                .map((el) => {\n                try {\n                    return converter.fromASN(el);\n                }\n                catch {\n                    return undefined;\n                }\n            })\n                .filter((v) => v !== undefined);\n        }\n        else {\n            return elementsToProcess\n                .filter((el) => el && el.valueBlock)\n                .map((el) => {\n                try {\n                    return this.fromASN(el, schemaItem.type);\n                }\n                catch {\n                    return undefined;\n                }\n            })\n                .filter((v) => v !== undefined);\n        }\n    }\n    static processPrimitiveField(asn1Element, schemaItem) {\n        const converter = converters.defaultConverter(schemaItem.type);\n        if (!converter)\n            throw new Error(`No converter for ASN.1 type ${schemaItem.type}`);\n        return converter.fromASN(asn1Element);\n    }\n    static isOptionalChoiceField(schemaItem) {\n        return (schemaItem.optional &&\n            typeof schemaItem.type === \"function\" &&\n            schemaStorage.has(schemaItem.type) &&\n            schemaStorage.get(schemaItem.type).type === AsnTypeTypes.Choice);\n    }\n    static processOptionalChoiceField(asn1Element, schemaItem) {\n        try {\n            const value = this.fromASN(asn1Element, schemaItem.type);\n            return { processed: true, value };\n        }\n        catch (err) {\n            if (err instanceof AsnSchemaValidationError &&\n                /Wrong values for Choice type/.test(err.message)) {\n                return { processed: false };\n            }\n            throw err;\n        }\n    }\n    static handleArrayTypes(asn1Schema, schema, target) {\n        if (!(\"value\" in asn1Schema.valueBlock && Array.isArray(asn1Schema.valueBlock.value))) {\n            throw new Error(`Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.`);\n        }\n        const itemType = schema.itemType;\n        if (typeof itemType === \"number\") {\n            const converter = converters.defaultConverter(itemType);\n            if (!converter) {\n                throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n            }\n            return target.from(asn1Schema.valueBlock.value, (element) => converter.fromASN(element));\n        }\n        else {\n            return target.from(asn1Schema.valueBlock.value, (element) => this.fromASN(element, itemType));\n        }\n    }\n    static processSchemaItems(schema, asn1ComparedSchema, res) {\n        for (const key in schema.items) {\n            const asn1SchemaValue = asn1ComparedSchema.result[key];\n            if (!asn1SchemaValue) {\n                continue;\n            }\n            const schemaItem = schema.items[key];\n            const schemaItemType = schemaItem.type;\n            if (typeof schemaItemType === \"number\" || isConvertible(schemaItemType)) {\n                res[key] = this.processPrimitiveSchemaItem(asn1SchemaValue, schemaItem, schemaItemType);\n            }\n            else {\n                res[key] = this.processComplexSchemaItem(asn1SchemaValue, schemaItem, schemaItemType);\n            }\n        }\n    }\n    static processPrimitiveSchemaItem(asn1SchemaValue, schemaItem, schemaItemType) {\n        var _a;\n        const converter = (_a = schemaItem.converter) !== null && _a !== void 0 ? _a : (isConvertible(schemaItemType)\n            ? new schemaItemType()\n            : null);\n        if (!converter) {\n            throw new Error(\"Converter is empty\");\n        }\n        if (schemaItem.repeated) {\n            return this.processRepeatedPrimitiveItem(asn1SchemaValue, schemaItem, converter);\n        }\n        else {\n            return this.processSinglePrimitiveItem(asn1SchemaValue, schemaItem, schemaItemType, converter);\n        }\n    }\n    static processRepeatedPrimitiveItem(asn1SchemaValue, schemaItem, converter) {\n        if (schemaItem.implicit) {\n            const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n            const newItem = new Container();\n            newItem.valueBlock = asn1SchemaValue.valueBlock;\n            const newItemAsn = asn1js.fromBER(newItem.toBER(false));\n            if (newItemAsn.offset === -1) {\n                throw new Error(`Cannot parse the child item. ${newItemAsn.result.error}`);\n            }\n            if (!(\"value\" in newItemAsn.result.valueBlock &&\n                Array.isArray(newItemAsn.result.valueBlock.value))) {\n                throw new Error(\"Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.\");\n            }\n            const value = newItemAsn.result.valueBlock.value;\n            return Array.from(value, (element) => converter.fromASN(element));\n        }\n        else {\n            return Array.from(asn1SchemaValue, (element) => converter.fromASN(element));\n        }\n    }\n    static processSinglePrimitiveItem(asn1SchemaValue, schemaItem, schemaItemType, converter) {\n        let value = asn1SchemaValue;\n        if (schemaItem.implicit) {\n            let newItem;\n            if (isConvertible(schemaItemType)) {\n                newItem = new schemaItemType().toSchema(\"\");\n            }\n            else {\n                const Asn1TypeName = AsnPropTypes[schemaItemType];\n                const Asn1Type = asn1js[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get '${Asn1TypeName}' class from asn1js module`);\n                }\n                newItem = new Asn1Type();\n            }\n            newItem.valueBlock = value.valueBlock;\n            value = asn1js.fromBER(newItem.toBER(false)).result;\n        }\n        return converter.fromASN(value);\n    }\n    static processComplexSchemaItem(asn1SchemaValue, schemaItem, schemaItemType) {\n        if (schemaItem.repeated) {\n            if (!Array.isArray(asn1SchemaValue)) {\n                throw new Error(\"Cannot get list of items from the ASN.1 parsed value. ASN.1 value should be iterable.\");\n            }\n            return Array.from(asn1SchemaValue, (element) => this.fromASN(element, schemaItemType));\n        }\n        else {\n            const valueToProcess = this.handleImplicitTagging(asn1SchemaValue, schemaItem, schemaItemType);\n            if (this.isOptionalChoiceField(schemaItem)) {\n                try {\n                    return this.fromASN(valueToProcess, schemaItemType);\n                }\n                catch (err) {\n                    if (err instanceof AsnSchemaValidationError &&\n                        /Wrong values for Choice type/.test(err.message)) {\n                        return undefined;\n                    }\n                    throw err;\n                }\n            }\n            else {\n                return this.fromASN(valueToProcess, schemaItemType);\n            }\n        }\n    }\n    static handleImplicitTagging(asn1SchemaValue, schemaItem, schemaItemType) {\n        if (schemaItem.implicit && typeof schemaItem.context === \"number\") {\n            const schema = schemaStorage.get(schemaItemType);\n            if (schema.type === AsnTypeTypes.Sequence) {\n                const newSeq = new asn1js.Sequence();\n                if (\"value\" in asn1SchemaValue.valueBlock &&\n                    Array.isArray(asn1SchemaValue.valueBlock.value) &&\n                    \"value\" in newSeq.valueBlock) {\n                    newSeq.valueBlock.value = asn1SchemaValue.valueBlock.value;\n                    return newSeq;\n                }\n            }\n            else if (schema.type === AsnTypeTypes.Set) {\n                const newSet = new asn1js.Set();\n                if (\"value\" in asn1SchemaValue.valueBlock &&\n                    Array.isArray(asn1SchemaValue.valueBlock.value) &&\n                    \"value\" in newSet.valueBlock) {\n                    newSet.valueBlock.value = asn1SchemaValue.valueBlock.value;\n                    return newSet;\n                }\n            }\n        }\n        return asn1SchemaValue;\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport * as converters from \"./converters\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible, isArrayEqual } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnSerializer {\n    static serialize(obj) {\n        if (obj instanceof asn1js.BaseBlock) {\n            return obj.toBER(false);\n        }\n        return this.toASN(obj).toBER(false);\n    }\n    static toASN(obj) {\n        if (obj && typeof obj === \"object\" && isConvertible(obj)) {\n            return obj.toASN();\n        }\n        if (!(obj && typeof obj === \"object\")) {\n            throw new TypeError(\"Parameter 1 should be type of Object.\");\n        }\n        const target = obj.constructor;\n        const schema = schemaStorage.get(target);\n        schemaStorage.cache(target);\n        let asn1Value = [];\n        if (schema.itemType) {\n            if (!Array.isArray(obj)) {\n                throw new TypeError(\"Parameter 1 should be type of Array.\");\n            }\n            if (typeof schema.itemType === \"number\") {\n                const converter = converters.defaultConverter(schema.itemType);\n                if (!converter) {\n                    throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                }\n                asn1Value = obj.map((o) => converter.toASN(o));\n            }\n            else {\n                asn1Value = obj.map((o) => this.toAsnItem({ type: schema.itemType }, \"[]\", target, o));\n            }\n        }\n        else {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                const objProp = obj[key];\n                if (objProp === undefined ||\n                    schemaItem.defaultValue === objProp ||\n                    (typeof schemaItem.defaultValue === \"object\" &&\n                        typeof objProp === \"object\" &&\n                        isArrayEqual(this.serialize(schemaItem.defaultValue), this.serialize(objProp)))) {\n                    continue;\n                }\n                const asn1Item = AsnSerializer.toAsnItem(schemaItem, key, target, objProp);\n                if (typeof schemaItem.context === \"number\") {\n                    if (schemaItem.implicit) {\n                        if (!schemaItem.repeated &&\n                            (typeof schemaItem.type === \"number\" || isConvertible(schemaItem.type))) {\n                            const value = {};\n                            value.valueHex =\n                                asn1Item instanceof asn1js.Null\n                                    ? asn1Item.valueBeforeDecodeView\n                                    : asn1Item.valueBlock.toBER();\n                            asn1Value.push(new asn1js.Primitive({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                ...value,\n                            }));\n                        }\n                        else {\n                            asn1Value.push(new asn1js.Constructed({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                value: asn1Item.valueBlock.value,\n                            }));\n                        }\n                    }\n                    else {\n                        asn1Value.push(new asn1js.Constructed({\n                            optional: schemaItem.optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: schemaItem.context,\n                            },\n                            value: [asn1Item],\n                        }));\n                    }\n                }\n                else if (schemaItem.repeated) {\n                    asn1Value = asn1Value.concat(asn1Item);\n                }\n                else {\n                    asn1Value.push(asn1Item);\n                }\n            }\n        }\n        let asnSchema;\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                asnSchema = new asn1js.Sequence({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Set:\n                asnSchema = new asn1js.Set({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Choice:\n                if (!asn1Value[0]) {\n                    throw new Error(`Schema '${target.name}' has wrong data. Choice cannot be empty.`);\n                }\n                asnSchema = asn1Value[0];\n                break;\n        }\n        return asnSchema;\n    }\n    static toAsnItem(schemaItem, key, target, objProp) {\n        let asn1Item;\n        if (typeof schemaItem.type === \"number\") {\n            const converter = schemaItem.converter;\n            if (!converter) {\n                throw new Error(`Property '${key}' doesn't have converter for type ${AsnPropTypes[schemaItem.type]} in schema '${target.name}'`);\n            }\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => converter.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = converter.toASN(objProp);\n            }\n        }\n        else {\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => this.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = this.toASN(objProp);\n            }\n        }\n        return asn1Item;\n    }\n}\n", "export class AsnArray extends Array {\n    constructor(items = []) {\n        if (typeof items === \"number\") {\n            super(items);\n        }\n        else {\n            super();\n            for (const item of items) {\n                this.push(item);\n            }\n        }\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nimport { AsnParser } from \"./parser\";\nimport { AsnSerializer } from \"./serializer\";\nexport class AsnConvert {\n    static serialize(obj) {\n        return AsnSerializer.serialize(obj);\n    }\n    static parse(data, target) {\n        return AsnParser.parse(data, target);\n    }\n    static toString(data) {\n        const buf = BufferSourceConverter.isBufferSource(data)\n            ? BufferSourceConverter.toArrayBuffer(data)\n            : AsnConvert.serialize(data);\n        const asn = asn1js.fromBER(buf);\n        if (asn.offset === -1) {\n            throw new Error(`Cannot decode ASN.1 data. ${asn.result.error}`);\n        }\n        return asn.result.toString();\n    }\n}\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { Convert } from \"pvtsutils\";\nexport class IpConverter {\n    static isIPv4(ip) {\n        return /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(ip);\n    }\n    static parseIPv4(ip) {\n        const parts = ip.split(\".\");\n        if (parts.length !== 4) {\n            throw new Error(\"Invalid IPv4 address\");\n        }\n        return parts.map((part) => {\n            const num = parseInt(part, 10);\n            if (isNaN(num) || num < 0 || num > 255) {\n                throw new Error(\"Invalid IPv4 address part\");\n            }\n            return num;\n        });\n    }\n    static parseIPv6(ip) {\n        const expandedIP = this.expandIPv6(ip);\n        const parts = expandedIP.split(\":\");\n        if (parts.length !== 8) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        return parts.reduce((bytes, part) => {\n            const num = parseInt(part, 16);\n            if (isNaN(num) || num < 0 || num > 0xffff) {\n                throw new Error(\"Invalid IPv6 address part\");\n            }\n            bytes.push((num >> 8) & 0xff);\n            bytes.push(num & 0xff);\n            return bytes;\n        }, []);\n    }\n    static expandIPv6(ip) {\n        if (!ip.includes(\"::\")) {\n            return ip;\n        }\n        const parts = ip.split(\"::\");\n        if (parts.length > 2) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        const left = parts[0] ? parts[0].split(\":\") : [];\n        const right = parts[1] ? parts[1].split(\":\") : [];\n        const missing = 8 - (left.length + right.length);\n        if (missing < 0) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        return [...left, ...Array(missing).fill(\"0\"), ...right].join(\":\");\n    }\n    static formatIPv6(bytes) {\n        const parts = [];\n        for (let i = 0; i < 16; i += 2) {\n            parts.push(((bytes[i] << 8) | bytes[i + 1]).toString(16));\n        }\n        return this.compressIPv6(parts.join(\":\"));\n    }\n    static compressIPv6(ip) {\n        const parts = ip.split(\":\");\n        let longestZeroStart = -1;\n        let longestZeroLength = 0;\n        let currentZeroStart = -1;\n        let currentZeroLength = 0;\n        for (let i = 0; i < parts.length; i++) {\n            if (parts[i] === \"0\") {\n                if (currentZeroStart === -1) {\n                    currentZeroStart = i;\n                }\n                currentZeroLength++;\n            }\n            else {\n                if (currentZeroLength > longestZeroLength) {\n                    longestZeroStart = currentZeroStart;\n                    longestZeroLength = currentZeroLength;\n                }\n                currentZeroStart = -1;\n                currentZeroLength = 0;\n            }\n        }\n        if (currentZeroLength > longestZeroLength) {\n            longestZeroStart = currentZeroStart;\n            longestZeroLength = currentZeroLength;\n        }\n        if (longestZeroLength > 1) {\n            const before = parts.slice(0, longestZeroStart).join(\":\");\n            const after = parts.slice(longestZeroStart + longestZeroLength).join(\":\");\n            return `${before}::${after}`;\n        }\n        return ip;\n    }\n    static parseCIDR(text) {\n        const [addr, prefixStr] = text.split(\"/\");\n        const prefix = parseInt(prefixStr, 10);\n        if (this.isIPv4(addr)) {\n            if (prefix < 0 || prefix > 32) {\n                throw new Error(\"Invalid IPv4 prefix length\");\n            }\n            return [this.parseIPv4(addr), prefix];\n        }\n        else {\n            if (prefix < 0 || prefix > 128) {\n                throw new Error(\"Invalid IPv6 prefix length\");\n            }\n            return [this.parseIPv6(addr), prefix];\n        }\n    }\n    static decodeIP(value) {\n        if (value.length === 64 && parseInt(value, 16) === 0) {\n            return \"::/0\";\n        }\n        if (value.length !== 16) {\n            return value;\n        }\n        const mask = parseInt(value.slice(8), 16)\n            .toString(2)\n            .split(\"\")\n            .reduce((a, k) => a + +k, 0);\n        let ip = value.slice(0, 8).replace(/(.{2})/g, (match) => `${parseInt(match, 16)}.`);\n        ip = ip.slice(0, -1);\n        return `${ip}/${mask}`;\n    }\n    static toString(buf) {\n        const uint8 = new Uint8Array(buf);\n        if (uint8.length === 4) {\n            return Array.from(uint8).join(\".\");\n        }\n        if (uint8.length === 16) {\n            return this.formatIPv6(uint8);\n        }\n        if (uint8.length === 8 || uint8.length === 32) {\n            const half = uint8.length / 2;\n            const addrBytes = uint8.slice(0, half);\n            const maskBytes = uint8.slice(half);\n            const isAllZeros = uint8.every((byte) => byte === 0);\n            if (isAllZeros) {\n                return uint8.length === 8 ? \"0.0.0.0/0\" : \"::/0\";\n            }\n            const prefixLen = maskBytes.reduce((a, b) => a + (b.toString(2).match(/1/g) || []).length, 0);\n            if (uint8.length === 8) {\n                const addrStr = Array.from(addrBytes).join(\".\");\n                return `${addrStr}/${prefixLen}`;\n            }\n            else {\n                const addrStr = this.formatIPv6(addrBytes);\n                return `${addrStr}/${prefixLen}`;\n            }\n        }\n        return this.decodeIP(Convert.ToHex(buf));\n    }\n    static fromString(text) {\n        if (text.includes(\"/\")) {\n            const [addr, prefix] = this.parseCIDR(text);\n            const maskBytes = new Uint8Array(addr.length);\n            let bitsLeft = prefix;\n            for (let i = 0; i < maskBytes.length; i++) {\n                if (bitsLeft >= 8) {\n                    maskBytes[i] = 0xff;\n                    bitsLeft -= 8;\n                }\n                else if (bitsLeft > 0) {\n                    maskBytes[i] = 0xff << (8 - bitsLeft);\n                    bitsLeft = 0;\n                }\n            }\n            const out = new Uint8Array(addr.length * 2);\n            out.set(addr, 0);\n            out.set(maskBytes, addr.length);\n            return out.buffer;\n        }\n        const bytes = this.isIPv4(text) ? this.parseIPv4(text) : this.parseIPv6(text);\n        return new Uint8Array(bytes).buffer;\n    }\n}\n", "var RelativeDistinguishedName_1, RDNSequence_1, Name_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Convert } from \"pvtsutils\";\nlet DirectoryString = class DirectoryString {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return (this.bmpString ||\n            this.printableString ||\n            this.teletexString ||\n            this.universalString ||\n            this.utf8String ||\n            \"\");\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.TeletexString })\n], DirectoryString.prototype, \"teletexString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], DirectoryString.prototype, \"printableString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.UniversalString })\n], DirectoryString.prototype, \"universalString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DirectoryString.prototype, \"utf8String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DirectoryString.prototype, \"bmpString\", void 0);\nDirectoryString = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DirectoryString);\nexport { DirectoryString };\nlet AttributeValue = class AttributeValue extends DirectoryString {\n    constructor(params = {}) {\n        super(params);\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || (this.anyValue ? Convert.ToHex(this.anyValue) : super.toString());\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], AttributeValue.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], AttributeValue.prototype, \"anyValue\", void 0);\nAttributeValue = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], AttributeValue);\nexport { AttributeValue };\nexport class AttributeTypeAndValue {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.value = new AttributeValue();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AttributeTypeAndValue.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AttributeValue })\n], AttributeTypeAndValue.prototype, \"value\", void 0);\nlet RelativeDistinguishedName = RelativeDistinguishedName_1 = class RelativeDistinguishedName extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RelativeDistinguishedName_1.prototype);\n    }\n};\nRelativeDistinguishedName = RelativeDistinguishedName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: AttributeTypeAndValue })\n], RelativeDistinguishedName);\nexport { RelativeDistinguishedName };\nlet RDNSequence = RDNSequence_1 = class RDNSequence extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RDNSequence_1.prototype);\n    }\n};\nRDNSequence = RDNSequence_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: RelativeDistinguishedName })\n], RDNSequence);\nexport { RDNSequence };\nlet Name = Name_1 = class Name extends RDNSequence {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Name_1.prototype);\n    }\n};\nName = Name_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Name);\nexport { Name };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnOctetStringConverter, } from \"@peculiar/asn1-schema\";\nimport { IpConverter } from \"./ip_converter\";\nimport { DirectoryString, Name } from \"./name\";\nexport const AsnIpConverter = {\n    fromASN: (value) => IpConverter.toString(AsnOctetStringConverter.fromASN(value)),\n    toASN: (value) => AsnOctetStringConverter.toASN(IpConverter.fromString(value)),\n};\nexport class OtherName {\n    constructor(params = {}) {\n        this.typeId = \"\";\n        this.value = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherName.prototype, \"typeId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], OtherName.prototype, \"value\", void 0);\nexport class EDIPartyName {\n    constructor(params = {}) {\n        this.partyName = new DirectoryString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DirectoryString, optional: true, context: 0, implicit: true })\n], EDIPartyName.prototype, \"nameAssigner\", void 0);\n__decorate([\n    AsnProp({ type: DirectoryString, context: 1, implicit: true })\n], EDIPartyName.prototype, \"partyName\", void 0);\nlet GeneralName = class GeneralName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OtherName, context: 0, implicit: true })\n], GeneralName.prototype, \"otherName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 1, implicit: true })\n], GeneralName.prototype, \"rfc822Name\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 2, implicit: true })\n], GeneralName.prototype, \"dNSName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 3, implicit: true })\n], GeneralName.prototype, \"x400Address\", void 0);\n__decorate([\n    AsnProp({ type: Name, context: 4, implicit: false })\n], GeneralName.prototype, \"directoryName\", void 0);\n__decorate([\n    AsnProp({ type: EDIPartyName, context: 5 })\n], GeneralName.prototype, \"ediPartyName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 6, implicit: true })\n], GeneralName.prototype, \"uniformResourceIdentifier\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.OctetString,\n        context: 7,\n        implicit: true,\n        converter: AsnIpConverter,\n    })\n], GeneralName.prototype, \"iPAddress\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, context: 8, implicit: true })\n], GeneralName.prototype, \"registeredID\", void 0);\nGeneralName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], GeneralName);\nexport { GeneralName };\n", "export const id_pkix = \"1.3.6.1.5.5.7\";\nexport const id_pe = `${id_pkix}.1`;\nexport const id_qt = `${id_pkix}.2`;\nexport const id_kp = `${id_pkix}.3`;\nexport const id_ad = `${id_pkix}.48`;\nexport const id_qt_csp = `${id_qt}.1`;\nexport const id_qt_unotice = `${id_qt}.2`;\nexport const id_ad_ocsp = `${id_ad}.1`;\nexport const id_ad_caIssuers = `${id_ad}.2`;\nexport const id_ad_timeStamping = `${id_ad}.3`;\nexport const id_ad_caRepository = `${id_ad}.5`;\nexport const id_ce = \"2.5.29\";\n", "var AuthorityInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_pe } from \"../object_identifiers\";\nexport const id_pe_authorityInfoAccess = `${id_pe}.1`;\nexport class AccessDescription {\n    constructor(params = {}) {\n        this.accessMethod = \"\";\n        this.accessLocation = new GeneralName();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AccessDescription.prototype, \"accessMethod\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName })\n], AccessDescription.prototype, \"accessLocation\", void 0);\nlet AuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = class AuthorityInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AuthorityInfoAccessSyntax_1.prototype);\n    }\n};\nAuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], AuthorityInfoAccessSyntax);\nexport { AuthorityInfoAccessSyntax };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, OctetString, } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_authorityKeyIdentifier = `${id_ce}.35`;\nexport class KeyIdentifier extends OctetString {\n}\nexport class AuthorityKeyIdentifier {\n    constructor(params = {}) {\n        if (params) {\n            Object.assign(this, params);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: KeyIdentifier, context: 0, optional: true, implicit: true })\n], AuthorityKeyIdentifier.prototype, \"keyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 1, optional: true, implicit: true, repeated: \"sequence\" })\n], AuthorityKeyIdentifier.prototype, \"authorityCertIssuer\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 2,\n        optional: true,\n        implicit: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], AuthorityKeyIdentifier.prototype, \"authorityCertSerialNumber\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_basicConstraints = `${id_ce}.19`;\nexport class BasicConstraints {\n    constructor(params = {}) {\n        this.cA = false;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, defaultValue: false })\n], BasicConstraints.prototype, \"cA\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], BasicConstraints.prototype, \"pathLenConstraint\", void 0);\n", "var GeneralNames_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"./general_name\";\nimport { AsnArray } from \"@peculiar/asn1-schema\";\nlet GeneralNames = GeneralNames_1 = class GeneralNames extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralNames_1.prototype);\n    }\n};\nGeneralNames = GeneralNames_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralName })\n], GeneralNames);\nexport { GeneralNames };\n", "var CertificateIssuer_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificateIssuer = `${id_ce}.29`;\nlet CertificateIssuer = CertificateIssuer_1 = class CertificateIssuer extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificateIssuer_1.prototype);\n    }\n};\nCertificateIssuer = CertificateIssuer_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CertificateIssuer);\nexport { CertificateIssuer };\n", "var CertificatePolicies_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificatePolicies = `${id_ce}.32`;\nexport const id_ce_certificatePolicies_anyPolicy = `${id_ce_certificatePolicies}.0`;\nlet DisplayText = class DisplayText {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || this.visibleString || this.bmpString || this.utf8String || \"\";\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], DisplayText.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.VisibleString })\n], DisplayText.prototype, \"visibleString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DisplayText.prototype, \"bmpString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DisplayText.prototype, \"utf8String\", void 0);\nDisplayText = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DisplayText);\nexport { DisplayText };\nexport class NoticeReference {\n    constructor(params = {}) {\n        this.organization = new DisplayText();\n        this.noticeNumbers = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DisplayText })\n], NoticeReference.prototype, \"organization\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, repeated: \"sequence\" })\n], NoticeReference.prototype, \"noticeNumbers\", void 0);\nexport class UserNotice {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: NoticeReference, optional: true })\n], UserNotice.prototype, \"noticeRef\", void 0);\n__decorate([\n    AsnProp({ type: DisplayText, optional: true })\n], UserNotice.prototype, \"explicitText\", void 0);\nlet Qualifier = class Qualifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], Qualifier.prototype, \"cPSuri\", void 0);\n__decorate([\n    AsnProp({ type: UserNotice })\n], Qualifier.prototype, \"userNotice\", void 0);\nQualifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Qualifier);\nexport { Qualifier };\nexport class PolicyQualifierInfo {\n    constructor(params = {}) {\n        this.policyQualifierId = \"\";\n        this.qualifier = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyQualifierInfo.prototype, \"policyQualifierId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], PolicyQualifierInfo.prototype, \"qualifier\", void 0);\nexport class PolicyInformation {\n    constructor(params = {}) {\n        this.policyIdentifier = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyInformation.prototype, \"policyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: PolicyQualifierInfo, repeated: \"sequence\", optional: true })\n], PolicyInformation.prototype, \"policyQualifiers\", void 0);\nlet CertificatePolicies = CertificatePolicies_1 = class CertificatePolicies extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificatePolicies_1.prototype);\n    }\n};\nCertificatePolicies = CertificatePolicies_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyInformation })\n], CertificatePolicies);\nexport { CertificatePolicies };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLNumber = `${id_ce}.20`;\nlet CRLNumber = class CRLNumber {\n    constructor(value = 0) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], CRLNumber.prototype, \"value\", void 0);\nCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLNumber);\nexport { CRLNumber };\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLNumber } from \"./crl_number\";\nexport const id_ce_deltaCRLIndicator = `${id_ce}.27`;\nlet BaseCRLNumber = class BaseCRLNumber extends CRLNumber {\n};\nBaseCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], BaseCRLNumber);\nexport { BaseCRLNumber };\n", "var CRLDistributionPoints_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes, AsnArray, BitString } from \"@peculiar/asn1-schema\";\nimport { RelativeDistinguishedName } from \"../name\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLDistributionPoints = `${id_ce}.31`;\nexport var ReasonFlags;\n(function (ReasonFlags) {\n    ReasonFlags[ReasonFlags[\"unused\"] = 1] = \"unused\";\n    ReasonFlags[ReasonFlags[\"keyCompromise\"] = 2] = \"keyCompromise\";\n    ReasonFlags[ReasonFlags[\"cACompromise\"] = 4] = \"cACompromise\";\n    ReasonFlags[ReasonFlags[\"affiliationChanged\"] = 8] = \"affiliationChanged\";\n    ReasonFlags[ReasonFlags[\"superseded\"] = 16] = \"superseded\";\n    ReasonFlags[ReasonFlags[\"cessationOfOperation\"] = 32] = \"cessationOfOperation\";\n    ReasonFlags[ReasonFlags[\"certificateHold\"] = 64] = \"certificateHold\";\n    ReasonFlags[ReasonFlags[\"privilegeWithdrawn\"] = 128] = \"privilegeWithdrawn\";\n    ReasonFlags[ReasonFlags[\"aACompromise\"] = 256] = \"aACompromise\";\n})(ReasonFlags || (ReasonFlags = {}));\nexport class Reason extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & ReasonFlags.aACompromise) {\n            res.push(\"aACompromise\");\n        }\n        if (flags & ReasonFlags.affiliationChanged) {\n            res.push(\"affiliationChanged\");\n        }\n        if (flags & ReasonFlags.cACompromise) {\n            res.push(\"cACompromise\");\n        }\n        if (flags & ReasonFlags.certificateHold) {\n            res.push(\"certificateHold\");\n        }\n        if (flags & ReasonFlags.cessationOfOperation) {\n            res.push(\"cessationOfOperation\");\n        }\n        if (flags & ReasonFlags.keyCompromise) {\n            res.push(\"keyCompromise\");\n        }\n        if (flags & ReasonFlags.privilegeWithdrawn) {\n            res.push(\"privilegeWithdrawn\");\n        }\n        if (flags & ReasonFlags.superseded) {\n            res.push(\"superseded\");\n        }\n        if (flags & ReasonFlags.unused) {\n            res.push(\"unused\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nlet DistributionPointName = class DistributionPointName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, context: 0, repeated: \"sequence\", implicit: true })\n], DistributionPointName.prototype, \"fullName\", void 0);\n__decorate([\n    AsnProp({ type: RelativeDistinguishedName, context: 1, implicit: true })\n], DistributionPointName.prototype, \"nameRelativeToCRLIssuer\", void 0);\nDistributionPointName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DistributionPointName);\nexport { DistributionPointName };\nexport class DistributionPoint {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], DistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 1, optional: true, implicit: true })\n], DistributionPoint.prototype, \"reasons\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 2, optional: true, repeated: \"sequence\", implicit: true })\n], DistributionPoint.prototype, \"cRLIssuer\", void 0);\nlet CRLDistributionPoints = CRLDistributionPoints_1 = class CRLDistributionPoints extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CRLDistributionPoints_1.prototype);\n    }\n};\nCRLDistributionPoints = CRLDistributionPoints_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], CRLDistributionPoints);\nexport { CRLDistributionPoints };\n", "var FreshestCRL_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLDistributionPoints, DistributionPoint } from \"./crl_distribution_points\";\nexport const id_ce_freshestCRL = `${id_ce}.46`;\nlet FreshestCRL = FreshestCRL_1 = class FreshestCRL extends CRLDistributionPoints {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, FreshestCRL_1.prototype);\n    }\n};\nFreshestCRL = FreshestCRL_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], FreshestCRL);\nexport { FreshestCRL };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { DistributionPointName, Reason } from \"./crl_distribution_points\";\nimport { id_ce } from \"../object_identifiers\";\nimport { AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport const id_ce_issuingDistributionPoint = `${id_ce}.28`;\nexport class IssuingDistributionPoint {\n    constructor(params = {}) {\n        this.onlyContainsUserCerts = IssuingDistributionPoint.ONLY;\n        this.onlyContainsCACerts = IssuingDistributionPoint.ONLY;\n        this.indirectCRL = IssuingDistributionPoint.ONLY;\n        this.onlyContainsAttributeCerts = IssuingDistributionPoint.ONLY;\n        Object.assign(this, params);\n    }\n}\nIssuingDistributionPoint.ONLY = false;\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], IssuingDistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 1,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsUserCerts\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 2,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsCACerts\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 3, optional: true, implicit: true })\n], IssuingDistributionPoint.prototype, \"onlySomeReasons\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 4,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"indirectCRL\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 5,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsAttributeCerts\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLReasons = `${id_ce}.21`;\nexport var CRLReasons;\n(function (CRLReasons) {\n    CRLReasons[CRLReasons[\"unspecified\"] = 0] = \"unspecified\";\n    CRLReasons[CRLReasons[\"keyCompromise\"] = 1] = \"keyCompromise\";\n    CRLReasons[CRLReasons[\"cACompromise\"] = 2] = \"cACompromise\";\n    CRLReasons[CRLReasons[\"affiliationChanged\"] = 3] = \"affiliationChanged\";\n    CRLReasons[CRLReasons[\"superseded\"] = 4] = \"superseded\";\n    CRLReasons[CRLReasons[\"cessationOfOperation\"] = 5] = \"cessationOfOperation\";\n    CRLReasons[CRLReasons[\"certificateHold\"] = 6] = \"certificateHold\";\n    CRLReasons[CRLReasons[\"removeFromCRL\"] = 8] = \"removeFromCRL\";\n    CRLReasons[CRLReasons[\"privilegeWithdrawn\"] = 9] = \"privilegeWithdrawn\";\n    CRLReasons[CRLReasons[\"aACompromise\"] = 10] = \"aACompromise\";\n})(CRLReasons || (CRLReasons = {}));\nlet CRLReason = class CRLReason {\n    constructor(reason = CRLReasons.unspecified) {\n        this.reason = CRLReasons.unspecified;\n        this.reason = reason;\n    }\n    toJSON() {\n        return CRLReasons[this.reason];\n    }\n    toString() {\n        return this.toJSON();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], CRLReason.prototype, \"reason\", void 0);\nCRLReason = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLReason);\nexport { CRLReason };\n", "var ExtendedKeyUsage_1;\nimport { __decorate } from \"tslib\";\nimport { AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce, id_kp } from \"../object_identifiers\";\nexport const id_ce_extKeyUsage = `${id_ce}.37`;\nlet ExtendedKeyUsage = ExtendedKeyUsage_1 = class ExtendedKeyUsage extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtendedKeyUsage_1.prototype);\n    }\n};\nExtendedKeyUsage = ExtendedKeyUsage_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AsnPropTypes.ObjectIdentifier })\n], ExtendedKeyUsage);\nexport { ExtendedKeyUsage };\nexport const anyExtendedKeyUsage = `${id_ce_extKeyUsage}.0`;\nexport const id_kp_serverAuth = `${id_kp}.1`;\nexport const id_kp_clientAuth = `${id_kp}.2`;\nexport const id_kp_codeSigning = `${id_kp}.3`;\nexport const id_kp_emailProtection = `${id_kp}.4`;\nexport const id_kp_timeStamping = `${id_kp}.8`;\nexport const id_kp_OCSPSigning = `${id_kp}.9`;\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnIntegerArrayBufferConverter, } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_inhibitAnyPolicy = `${id_ce}.54`;\nlet InhibitAnyPolicy = class InhibitAnyPolicy {\n    constructor(value = new ArrayBuffer(0)) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], InhibitAnyPolicy.prototype, \"value\", void 0);\nInhibitAnyPolicy = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InhibitAnyPolicy);\nexport { InhibitAnyPolicy };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_invalidityDate = `${id_ce}.24`;\nlet InvalidityDate = class InvalidityDate {\n    constructor(value) {\n        this.value = new Date();\n        if (value) {\n            this.value = value;\n        }\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], InvalidityDate.prototype, \"value\", void 0);\nInvalidityDate = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InvalidityDate);\nexport { InvalidityDate };\n", "var IssueAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_issuerAltName = `${id_ce}.18`;\nlet IssueAlternativeName = IssueAlternativeName_1 = class IssueAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, IssueAlternativeName_1.prototype);\n    }\n};\nIssueAlternativeName = IssueAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], IssueAlternativeName);\nexport { IssueAlternativeName };\n", "import { BitString } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_keyUsage = `${id_ce}.15`;\nexport var KeyUsageFlags;\n(function (KeyUsageFlags) {\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nexport class KeyUsage extends BitString {\n    toJSON() {\n        const flag = this.toNumber();\n        const res = [];\n        if (flag & KeyUsageFlags.cRLSign) {\n            res.push(\"crlSign\");\n        }\n        if (flag & KeyUsageFlags.dataEncipherment) {\n            res.push(\"dataEncipherment\");\n        }\n        if (flag & KeyUsageFlags.decipherOnly) {\n            res.push(\"decipherOnly\");\n        }\n        if (flag & KeyUsageFlags.digitalSignature) {\n            res.push(\"digitalSignature\");\n        }\n        if (flag & KeyUsageFlags.encipherOnly) {\n            res.push(\"encipherOnly\");\n        }\n        if (flag & KeyUsageFlags.keyAgreement) {\n            res.push(\"keyAgreement\");\n        }\n        if (flag & KeyUsageFlags.keyCertSign) {\n            res.push(\"keyCertSign\");\n        }\n        if (flag & KeyUsageFlags.keyEncipherment) {\n            res.push(\"keyEncipherment\");\n        }\n        if (flag & KeyUsageFlags.nonRepudiation) {\n            res.push(\"nonRepudiation\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\n", "var GeneralSubtrees_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_nameConstraints = `${id_ce}.30`;\nexport class GeneralSubtree {\n    constructor(params = {}) {\n        this.base = new GeneralName();\n        this.minimum = 0;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], GeneralSubtree.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 0, defaultValue: 0, implicit: true })\n], GeneralSubtree.prototype, \"minimum\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 1, optional: true, implicit: true })\n], GeneralSubtree.prototype, \"maximum\", void 0);\nlet GeneralSubtrees = GeneralSubtrees_1 = class GeneralSubtrees extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralSubtrees_1.prototype);\n    }\n};\nGeneralSubtrees = GeneralSubtrees_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralSubtree })\n], GeneralSubtrees);\nexport { GeneralSubtrees };\nexport class NameConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 0, optional: true, implicit: true })\n], NameConstraints.prototype, \"permittedSubtrees\", void 0);\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 1, optional: true, implicit: true })\n], NameConstraints.prototype, \"excludedSubtrees\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyConstraints = `${id_ce}.36`;\nexport class PolicyConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        implicit: true,\n        optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"requireExplicitPolicy\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 1,\n        implicit: true,\n        optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"inhibitPolicyMapping\", void 0);\n", "var PolicyMappings_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyMappings = `${id_ce}.33`;\nexport class PolicyMapping {\n    constructor(params = {}) {\n        this.issuerDomainPolicy = \"\";\n        this.subjectDomainPolicy = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMapping.prototype, \"issuerDomainPolicy\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMapping.prototype, \"subjectDomainPolicy\", void 0);\nlet PolicyMappings = PolicyMappings_1 = class PolicyMappings extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, PolicyMappings_1.prototype);\n    }\n};\nPolicyMappings = PolicyMappings_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyMapping })\n], PolicyMappings);\nexport { PolicyMappings };\n", "var SubjectAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectAltName = `${id_ce}.17`;\nlet SubjectAlternativeName = SubjectAlternativeName_1 = class SubjectAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectAlternativeName_1.prototype);\n    }\n};\nSubjectAlternativeName = SubjectAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SubjectAlternativeName);\nexport { SubjectAlternativeName };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class Attribute {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.values = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Attribute.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], Attribute.prototype, \"values\", void 0);\n", "var SubjectDirectoryAttributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { Attribute } from \"../attribute\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectDirectoryAttributes = `${id_ce}.9`;\nlet SubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = class SubjectDirectoryAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectDirectoryAttributes_1.prototype);\n    }\n};\nSubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], SubjectDirectoryAttributes);\nexport { SubjectDirectoryAttributes };\n", "import { id_ce } from \"../object_identifiers\";\nimport { KeyIdentifier } from \"./authority_key_identifier\";\nexport const id_ce_subjectKeyIdentifier = `${id_ce}.14`;\nexport class SubjectKeyIdentifier extends KeyIdentifier {\n}\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_privateKeyUsagePeriod = `${id_ce}.16`;\nexport class PrivateKeyUsagePeriod {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 0, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 1, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notAfter\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, BitString } from \"@peculiar/asn1-schema\";\nexport const id_entrust_entrustVersInfo = \"1.2.840.113533.7.65.0\";\nexport var EntrustInfoFlags;\n(function (EntrustInfoFlags) {\n    EntrustInfoFlags[EntrustInfoFlags[\"keyUpdateAllowed\"] = 1] = \"keyUpdateAllowed\";\n    EntrustInfoFlags[EntrustInfoFlags[\"newExtensions\"] = 2] = \"newExtensions\";\n    EntrustInfoFlags[EntrustInfoFlags[\"pKIXCertificate\"] = 4] = \"pKIXCertificate\";\n})(EntrustInfoFlags || (EntrustInfoFlags = {}));\nexport class EntrustInfo extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & EntrustInfoFlags.pKIXCertificate) {\n            res.push(\"pKIXCertificate\");\n        }\n        if (flags & EntrustInfoFlags.newExtensions) {\n            res.push(\"newExtensions\");\n        }\n        if (flags & EntrustInfoFlags.keyUpdateAllowed) {\n            res.push(\"keyUpdateAllowed\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nexport class EntrustVersionInfo {\n    constructor(params = {}) {\n        this.entrustVers = \"\";\n        this.entrustInfoFlags = new EntrustInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralString })\n], EntrustVersionInfo.prototype, \"entrustVers\", void 0);\n__decorate([\n    AsnProp({ type: EntrustInfo })\n], EntrustVersionInfo.prototype, \"entrustInfoFlags\", void 0);\n", "var SubjectInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_pe } from \"../object_identifiers\";\nimport { AccessDescription } from \"./authority_information_access\";\nexport const id_pe_subjectInfoAccess = `${id_pe}.11`;\nlet SubjectInfoAccessSyntax = SubjectInfoAccessSyntax_1 = class SubjectInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectInfoAccessSyntax_1.prototype);\n    }\n};\nSubjectInfoAccessSyntax = SubjectInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], SubjectInfoAccessSyntax);\nexport { SubjectInfoAccessSyntax };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport * as pvtsutils from \"pvtsutils\";\nexport class AlgorithmIdentifier {\n    constructor(params = {}) {\n        this.algorithm = \"\";\n        Object.assign(this, params);\n    }\n    isEqual(data) {\n        return (data instanceof AlgorithmIdentifier &&\n            data.algorithm == this.algorithm &&\n            ((data.parameters &&\n                this.parameters &&\n                pvtsutils.isEqual(data.parameters, this.parameters)) ||\n                data.parameters === this.parameters));\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.ObjectIdentifier,\n    })\n], AlgorithmIdentifier.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Any,\n        optional: true,\n    })\n], AlgorithmIdentifier.prototype, \"parameters\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nexport class SubjectPublicKeyInfo {\n    constructor(params = {}) {\n        this.algorithm = new AlgorithmIdentifier();\n        this.subjectPublicKey = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], SubjectPublicKeyInfo.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], SubjectPublicKeyInfo.prototype, \"subjectPublicKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet Time = class Time {\n    constructor(time) {\n        if (time) {\n            if (typeof time === \"string\" || typeof time === \"number\" || time instanceof Date) {\n                const date = new Date(time);\n                if (date.getUTCFullYear() > 2049) {\n                    this.generalTime = date;\n                }\n                else {\n                    this.utcTime = date;\n                }\n            }\n            else {\n                Object.assign(this, time);\n            }\n        }\n    }\n    getTime() {\n        const time = this.utcTime || this.generalTime;\n        if (!time) {\n            throw new Error(\"Cannot get time from CHOICE object\");\n        }\n        return time;\n    }\n};\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.UTCTime,\n    })\n], Time.prototype, \"utcTime\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.GeneralizedTime,\n    })\n], Time.prototype, \"generalTime\", void 0);\nTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Time);\nexport { Time };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { Time } from \"./time\";\nexport class Validity {\n    constructor(params) {\n        this.notBefore = new Time(new Date());\n        this.notAfter = new Time(new Date());\n        if (params) {\n            this.notBefore = new Time(params.notBefore);\n            this.notAfter = new Time(params.notAfter);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notAfter\", void 0);\n", "var Extensions_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nexport class Extension {\n    constructor(params = {}) {\n        this.extnID = \"\";\n        this.critical = Extension.CRITICAL;\n        this.extnValue = new OctetString();\n        Object.assign(this, params);\n    }\n}\nExtension.CRITICAL = false;\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Extension.prototype, \"extnID\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        defaultValue: Extension.CRITICAL,\n    })\n], Extension.prototype, \"critical\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], Extension.prototype, \"extnValue\", void 0);\nlet Extensions = Extensions_1 = class Extensions extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Extensions_1.prototype);\n    }\n};\nExtensions = Extensions_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Extension })\n], Extensions);\nexport { Extensions };\n", "export var Version;\n(function (Version) {\n    Version[Version[\"v1\"] = 0] = \"v1\";\n    Version[Version[\"v2\"] = 1] = \"v2\";\n    Version[Version[\"v3\"] = 2] = \"v3\";\n})(Version || (Version = {}));\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { SubjectPublicKeyInfo } from \"./subject_public_key_info\";\nimport { Validity } from \"./validity\";\nimport { Extensions } from \"./extension\";\nimport { Version } from \"./types\";\nexport class TBSCertificate {\n    constructor(params = {}) {\n        this.version = Version.v1;\n        this.serialNumber = new ArrayBuffer(0);\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.validity = new Validity();\n        this.subject = new Name();\n        this.subjectPublicKeyInfo = new SubjectPublicKeyInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        defaultValue: Version.v1,\n    })\n], TBSCertificate.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], TBSCertificate.prototype, \"serialNumber\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertificate.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Validity })\n], TBSCertificate.prototype, \"validity\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"subject\", void 0);\n__decorate([\n    AsnProp({ type: SubjectPublicKeyInfo })\n], TBSCertificate.prototype, \"subjectPublicKeyInfo\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.BitString,\n        context: 1,\n        implicit: true,\n        optional: true,\n    })\n], TBSCertificate.prototype, \"issuerUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 2, implicit: true, optional: true })\n], TBSCertificate.prototype, \"subjectUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: Extensions, context: 3, optional: true })\n], TBSCertificate.prototype, \"extensions\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertificate } from \"./tbs_certificate\";\nexport class Certificate {\n    constructor(params = {}) {\n        this.tbsCertificate = new TBSCertificate();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signatureValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertificate })\n], Certificate.prototype, \"tbsCertificate\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], Certificate.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], Certificate.prototype, \"signatureValue\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { Time } from \"./time\";\nimport { Extension } from \"./extension\";\nexport class RevokedCertificate {\n    constructor(params = {}) {\n        this.userCertificate = new ArrayBuffer(0);\n        this.revocationDate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RevokedCertificate.prototype, \"userCertificate\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], RevokedCertificate.prototype, \"revocationDate\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, repeated: \"sequence\" })\n], RevokedCertificate.prototype, \"crlEntryExtensions\", void 0);\nexport class TBSCertList {\n    constructor(params = {}) {\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.thisUpdate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], TBSCertList.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertList.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertList.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], TBSCertList.prototype, \"thisUpdate\", void 0);\n__decorate([\n    AsnProp({ type: Time, optional: true })\n], TBSCertList.prototype, \"nextUpdate\", void 0);\n__decorate([\n    AsnProp({ type: RevokedCertificate, repeated: \"sequence\", optional: true })\n], TBSCertList.prototype, \"revokedCertificates\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, context: 0, repeated: \"sequence\" })\n], TBSCertList.prototype, \"crlExtensions\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertList } from \"./tbs_cert_list\";\nexport class CertificateList {\n    constructor(params = {}) {\n        this.tbsCertList = new TBSCertList();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signature = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertList })\n], CertificateList.prototype, \"tbsCertList\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], CertificateList.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], CertificateList.prototype, \"signature\", void 0);\n", "export const id_ecPublicKey = \"1.2.840.10045.2.1\";\nexport const id_ecDH = \"1.3.132.1.12\";\nexport const id_ecMQV = \"1.3.132.1.13\";\nexport const id_ecdsaWithSHA1 = \"1.2.840.10045.4.1\";\nexport const id_ecdsaWithSHA224 = \"1.2.840.10045.4.3.1\";\nexport const id_ecdsaWithSHA256 = \"1.2.840.10045.4.3.2\";\nexport const id_ecdsaWithSHA384 = \"1.2.840.10045.4.3.3\";\nexport const id_ecdsaWithSHA512 = \"1.2.840.10045.4.3.4\";\nexport const id_secp192r1 = \"1.2.840.10045.3.1.1\";\nexport const id_sect163k1 = \"1.3.132.0.1\";\nexport const id_sect163r2 = \"1.3.132.0.15\";\nexport const id_secp224r1 = \"1.3.132.0.33\";\nexport const id_sect233k1 = \"1.3.132.0.26\";\nexport const id_sect233r1 = \"1.3.132.0.27\";\nexport const id_secp256r1 = \"1.2.840.10045.3.1.7\";\nexport const id_sect283k1 = \"1.3.132.0.16\";\nexport const id_sect283r1 = \"1.3.132.0.17\";\nexport const id_secp384r1 = \"1.3.132.0.34\";\nexport const id_sect409k1 = \"1.3.132.0.36\";\nexport const id_sect409r1 = \"1.3.132.0.37\";\nexport const id_secp521r1 = \"1.3.132.0.35\";\nexport const id_sect571k1 = \"1.3.132.0.38\";\nexport const id_sect571r1 = \"1.3.132.0.39\";\n", "import { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm });\n}\nexport const ecdsaWithSHA1 = create(oid.id_ecdsaWithSHA1);\nexport const ecdsaWithSHA224 = create(oid.id_ecdsaWithSHA224);\nexport const ecdsaWithSHA256 = create(oid.id_ecdsaWithSHA256);\nexport const ecdsaWithSHA384 = create(oid.id_ecdsaWithSHA384);\nexport const ecdsaWithSHA512 = create(oid.id_ecdsaWithSHA512);\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes, OctetString, AsnIntegerArrayBufferConverter, } from \"@peculiar/asn1-schema\";\nlet FieldID = class FieldID {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], FieldID.prototype, \"fieldType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], FieldID.prototype, \"parameters\", void 0);\nFieldID = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], FieldID);\nexport { FieldID };\nexport class ECPoint extends OctetString {\n}\nexport class FieldElement extends OctetString {\n}\nlet Curve = class Curve {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], Curve.prototype, \"a\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], Curve.prototype, \"b\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], Curve.prototype, \"seed\", void 0);\nCurve = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Curve);\nexport { Curve };\nexport var ECPVer;\n(function (ECPVer) {\n    ECPVer[ECPVer[\"ecpVer1\"] = 1] = \"ecpVer1\";\n})(ECPVer || (ECPVer = {}));\nlet SpecifiedECDomain = class SpecifiedECDomain {\n    constructor(params = {}) {\n        this.version = ECPVer.ecpVer1;\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SpecifiedECDomain.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: FieldID })\n], SpecifiedECDomain.prototype, \"fieldID\", void 0);\n__decorate([\n    AsnProp({ type: Curve })\n], SpecifiedECDomain.prototype, \"curve\", void 0);\n__decorate([\n    AsnProp({ type: ECPoint })\n], SpecifiedECDomain.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], SpecifiedECDomain.prototype, \"order\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], SpecifiedECDomain.prototype, \"cofactor\", void 0);\nSpecifiedECDomain = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SpecifiedECDomain);\nexport { SpecifiedECDomain };\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { SpecifiedECDomain } from \"./rfc3279\";\nlet ECParameters = class ECParameters {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ECParameters.prototype, \"namedCurve\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Null })\n], ECParameters.prototype, \"implicitCurve\", void 0);\n__decorate([\n    AsnProp({ type: SpecifiedECDomain })\n], ECParameters.prototype, \"specifiedCurve\", void 0);\nECParameters = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ECParameters);\nexport { ECParameters };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { ECParameters } from \"./ec_parameters\";\nexport class ECPrivateKey {\n    constructor(params = {}) {\n        this.version = 1;\n        this.privateKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], ECPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], ECPrivateKey.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: ECParameters, context: 0, optional: true })\n], ECPrivateKey.prototype, \"parameters\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 1, optional: true })\n], ECPrivateKey.prototype, \"publicKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class ECDSASigValue {\n    constructor(params = {}) {\n        this.r = new ArrayBuffer(0);\n        this.s = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"r\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"s\", void 0);\n", "export const id_pkcs_1 = \"1.2.840.113549.1.1\";\nexport const id_rsaEncryption = `${id_pkcs_1}.1`;\nexport const id_RSAES_OAEP = `${id_pkcs_1}.7`;\nexport const id_pSpecified = `${id_pkcs_1}.9`;\nexport const id_RSASSA_PSS = `${id_pkcs_1}.10`;\nexport const id_md2WithRSAEncryption = `${id_pkcs_1}.2`;\nexport const id_md5WithRSAEncryption = `${id_pkcs_1}.4`;\nexport const id_sha1WithRSAEncryption = `${id_pkcs_1}.5`;\nexport const id_sha224WithRSAEncryption = `${id_pkcs_1}.14`;\nexport const id_ssha224WithRSAEncryption = id_sha224WithRSAEncryption;\nexport const id_sha256WithRSAEncryption = `${id_pkcs_1}.11`;\nexport const id_sha384WithRSAEncryption = `${id_pkcs_1}.12`;\nexport const id_sha512WithRSAEncryption = `${id_pkcs_1}.13`;\nexport const id_sha512_224WithRSAEncryption = `${id_pkcs_1}.15`;\nexport const id_sha512_256WithRSAEncryption = `${id_pkcs_1}.16`;\nexport const id_sha1 = \"1.3.14.3.2.26\";\nexport const id_sha224 = \"2.16.840.1.101.3.4.2.4\";\nexport const id_sha256 = \"2.16.840.1.101.3.4.2.1\";\nexport const id_sha384 = \"2.16.840.1.101.3.4.2.2\";\nexport const id_sha512 = \"2.16.840.1.101.3.4.2.3\";\nexport const id_sha512_224 = \"2.16.840.1.101.3.4.2.5\";\nexport const id_sha512_256 = \"2.16.840.1.101.3.4.2.6\";\nexport const id_md2 = \"1.2.840.113549.2.2\";\nexport const id_md5 = \"1.2.840.113549.2.5\";\nexport const id_mgf1 = `${id_pkcs_1}.8`;\n", "import { AsnConvert, AsnOctetStringConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm, parameters: null });\n}\nexport const md2 = create(oid.id_md2);\nexport const md4 = create(oid.id_md5);\nexport const sha1 = create(oid.id_sha1);\nexport const sha224 = create(oid.id_sha224);\nexport const sha256 = create(oid.id_sha256);\nexport const sha384 = create(oid.id_sha384);\nexport const sha512 = create(oid.id_sha512);\nexport const sha512_224 = create(oid.id_sha512_224);\nexport const sha512_256 = create(oid.id_sha512_256);\nexport const mgf1SHA1 = new AlgorithmIdentifier({\n    algorithm: oid.id_mgf1,\n    parameters: AsnConvert.serialize(sha1),\n});\nexport const pSpecifiedEmpty = new AlgorithmIdentifier({\n    algorithm: oid.id_pSpecified,\n    parameters: AsnConvert.serialize(AsnOctetStringConverter.toASN(new Uint8Array([\n        0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18,\n        0x90, 0xaf, 0xd8, 0x07, 0x09,\n    ]).buffer)),\n});\nexport const rsaEncryption = create(oid.id_rsaEncryption);\nexport const md2WithRSAEncryption = create(oid.id_md2WithRSAEncryption);\nexport const md5WithRSAEncryption = create(oid.id_md5WithRSAEncryption);\nexport const sha1WithRSAEncryption = create(oid.id_sha1WithRSAEncryption);\nexport const sha224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\nexport const sha384WithRSAEncryption = create(oid.id_sha384WithRSAEncryption);\nexport const sha512WithRSAEncryption = create(oid.id_sha512WithRSAEncryption);\nexport const sha512_224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha512_256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSAES_OAEP } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1, pSpecifiedEmpty } from \"../algorithms\";\nexport class RsaEsOaepParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.pSourceAlgorithm = new AlgorithmIdentifier(pSpecifiedEmpty);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaEsOaepParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaEsOaepParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 2, defaultValue: pSpecifiedEmpty })\n], RsaEsOaepParams.prototype, \"pSourceAlgorithm\", void 0);\nexport const RSAES_OAEP = new AlgorithmIdentifier({\n    algorithm: id_RSAES_OAEP,\n    parameters: AsnConvert.serialize(new RsaEsOaepParams()),\n});\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSASSA_PSS } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1 } from \"../algorithms\";\nexport class RsaSaPssParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.saltLength = 20;\n        this.trailerField = 1;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaSaPssParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaSaPssParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 2, defaultValue: 20 })\n], RsaSaPssParams.prototype, \"saltLength\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 3, defaultValue: 1 })\n], RsaSaPssParams.prototype, \"trailerField\", void 0);\nexport const RSASSA_PSS = new AlgorithmIdentifier({\n    algorithm: id_RSASSA_PSS,\n    parameters: AsnConvert.serialize(new RsaSaPssParams()),\n});\n", "import { __decorate } from \"tslib\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nexport class DigestInfo {\n    constructor(params = {}) {\n        this.digestAlgorithm = new AlgorithmIdentifier();\n        this.digest = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], DigestInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], DigestInfo.prototype, \"digest\", void 0);\n", "var OtherPrimeInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, AsnArray, AsnType, AsnTypeTypes, } from \"@peculiar/asn1-schema\";\nexport class OtherPrimeInfo {\n    constructor(params = {}) {\n        this.prime = new ArrayBuffer(0);\n        this.exponent = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"prime\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"exponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"coefficient\", void 0);\nlet OtherPrimeInfos = OtherPrimeInfos_1 = class OtherPrimeInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, OtherPrimeInfos_1.prototype);\n    }\n};\nOtherPrimeInfos = OtherPrimeInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: OtherPrimeInfo })\n], OtherPrimeInfos);\nexport { OtherPrimeInfos };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { OtherPrimeInfos } from \"./other_prime_info\";\nexport class RSAPrivateKey {\n    constructor(params = {}) {\n        this.version = 0;\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        this.privateExponent = new ArrayBuffer(0);\n        this.prime1 = new ArrayBuffer(0);\n        this.prime2 = new ArrayBuffer(0);\n        this.exponent1 = new ArrayBuffer(0);\n        this.exponent2 = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], RSAPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"publicExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"privateExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"coefficient\", void 0);\n__decorate([\n    AsnProp({ type: OtherPrimeInfos, optional: true })\n], RSAPrivateKey.prototype, \"otherPrimeInfos\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class RSAPublicKey {\n    constructor(params = {}) {\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"publicExponent\", void 0);\n", "var IntegerSet_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nexport const id_ce_keyDescription = \"1.3.6.1.4.1.11129.2.1.17\";\nexport var VerifiedBootState;\n(function (VerifiedBootState) {\n    VerifiedBootState[VerifiedBootState[\"verified\"] = 0] = \"verified\";\n    VerifiedBootState[VerifiedBootState[\"selfSigned\"] = 1] = \"selfSigned\";\n    VerifiedBootState[VerifiedBootState[\"unverified\"] = 2] = \"unverified\";\n    VerifiedBootState[VerifiedBootState[\"failed\"] = 3] = \"failed\";\n})(VerifiedBootState || (VerifiedBootState = {}));\nexport class RootOfTrust {\n    constructor(params = {}) {\n        this.verifiedBootKey = new OctetString();\n        this.deviceLocked = false;\n        this.verifiedBootState = VerifiedBootState.verified;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: OctetString })\n], RootOfTrust.prototype, \"verifiedBootKey\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean })\n], RootOfTrust.prototype, \"deviceLocked\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], RootOfTrust.prototype, \"verifiedBootState\", void 0);\n__decorate([\n    AsnProp({ type: OctetString, optional: true })\n], RootOfTrust.prototype, \"verifiedBootHash\", void 0);\nlet IntegerSet = IntegerSet_1 = class IntegerSet extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, IntegerSet_1.prototype);\n    }\n};\nIntegerSet = IntegerSet_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: AsnPropTypes.Integer })\n], IntegerSet);\nexport { IntegerSet };\nexport class AuthorizationList {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ context: 1, type: IntegerSet, optional: true })\n], AuthorizationList.prototype, \"purpose\", void 0);\n__decorate([\n    AsnProp({ context: 2, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ context: 3, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"keySize\", void 0);\n__decorate([\n    AsnProp({ context: 5, type: IntegerSet, optional: true })\n], AuthorizationList.prototype, \"digest\", void 0);\n__decorate([\n    AsnProp({ context: 6, type: IntegerSet, optional: true })\n], AuthorizationList.prototype, \"padding\", void 0);\n__decorate([\n    AsnProp({ context: 10, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"ecCurve\", void 0);\n__decorate([\n    AsnProp({ context: 200, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"rsaPublicExponent\", void 0);\n__decorate([\n    AsnProp({ context: 203, type: IntegerSet, optional: true })\n], AuthorizationList.prototype, \"mgfDigest\", void 0);\n__decorate([\n    AsnProp({ context: 303, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"rollbackResistance\", void 0);\n__decorate([\n    AsnProp({ context: 305, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"earlyBootOnly\", void 0);\n__decorate([\n    AsnProp({ context: 400, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"activeDateTime\", void 0);\n__decorate([\n    AsnProp({ context: 401, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"originationExpireDateTime\", void 0);\n__decorate([\n    AsnProp({ context: 402, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"usageExpireDateTime\", void 0);\n__decorate([\n    AsnProp({ context: 405, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"usageCountLimit\", void 0);\n__decorate([\n    AsnProp({ context: 503, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"noAuthRequired\", void 0);\n__decorate([\n    AsnProp({ context: 504, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"userAuthType\", void 0);\n__decorate([\n    AsnProp({ context: 505, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"authTimeout\", void 0);\n__decorate([\n    AsnProp({ context: 506, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"allowWhileOnBody\", void 0);\n__decorate([\n    AsnProp({ context: 507, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"trustedUserPresenceRequired\", void 0);\n__decorate([\n    AsnProp({ context: 508, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"trustedConfirmationRequired\", void 0);\n__decorate([\n    AsnProp({ context: 509, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"unlockedDeviceRequired\", void 0);\n__decorate([\n    AsnProp({ context: 600, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"allApplications\", void 0);\n__decorate([\n    AsnProp({ context: 601, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"applicationId\", void 0);\n__decorate([\n    AsnProp({ context: 701, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"creationDateTime\", void 0);\n__decorate([\n    AsnProp({ context: 702, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"origin\", void 0);\n__decorate([\n    AsnProp({ context: 703, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"rollbackResistant\", void 0);\n__decorate([\n    AsnProp({ context: 704, type: RootOfTrust, optional: true })\n], AuthorizationList.prototype, \"rootOfTrust\", void 0);\n__decorate([\n    AsnProp({ context: 705, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"osVersion\", void 0);\n__decorate([\n    AsnProp({ context: 706, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"osPatchLevel\", void 0);\n__decorate([\n    AsnProp({ context: 709, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationApplicationId\", void 0);\n__decorate([\n    AsnProp({ context: 710, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdBrand\", void 0);\n__decorate([\n    AsnProp({ context: 711, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdDevice\", void 0);\n__decorate([\n    AsnProp({ context: 712, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdProduct\", void 0);\n__decorate([\n    AsnProp({ context: 713, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdSerial\", void 0);\n__decorate([\n    AsnProp({ context: 714, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdImei\", void 0);\n__decorate([\n    AsnProp({ context: 715, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdMeid\", void 0);\n__decorate([\n    AsnProp({ context: 716, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdManufacturer\", void 0);\n__decorate([\n    AsnProp({ context: 717, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdModel\", void 0);\n__decorate([\n    AsnProp({ context: 718, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"vendorPatchLevel\", void 0);\n__decorate([\n    AsnProp({ context: 719, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"bootPatchLevel\", void 0);\n__decorate([\n    AsnProp({ context: 720, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"deviceUniqueAttestation\", void 0);\n__decorate([\n    AsnProp({ context: 723, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdSecondImei\", void 0);\n__decorate([\n    AsnProp({ context: 724, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"moduleHash\", void 0);\nexport var SecurityLevel;\n(function (SecurityLevel) {\n    SecurityLevel[SecurityLevel[\"software\"] = 0] = \"software\";\n    SecurityLevel[SecurityLevel[\"trustedEnvironment\"] = 1] = \"trustedEnvironment\";\n    SecurityLevel[SecurityLevel[\"strongBox\"] = 2] = \"strongBox\";\n})(SecurityLevel || (SecurityLevel = {}));\nexport var Version;\n(function (Version) {\n    Version[Version[\"KM2\"] = 1] = \"KM2\";\n    Version[Version[\"KM3\"] = 2] = \"KM3\";\n    Version[Version[\"KM4\"] = 3] = \"KM4\";\n    Version[Version[\"KM4_1\"] = 4] = \"KM4_1\";\n    Version[Version[\"keyMint1\"] = 100] = \"keyMint1\";\n    Version[Version[\"keyMint2\"] = 200] = \"keyMint2\";\n    Version[Version[\"keyMint3\"] = 300] = \"keyMint3\";\n    Version[Version[\"keyMint4\"] = 400] = \"keyMint4\";\n})(Version || (Version = {}));\nexport class KeyDescription {\n    constructor(params = {}) {\n        this.attestationVersion = Version.KM4;\n        this.attestationSecurityLevel = SecurityLevel.software;\n        this.keymasterVersion = 0;\n        this.keymasterSecurityLevel = SecurityLevel.software;\n        this.attestationChallenge = new OctetString();\n        this.uniqueId = new OctetString();\n        this.softwareEnforced = new AuthorizationList();\n        this.teeEnforced = new AuthorizationList();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyDescription.prototype, \"attestationVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], KeyDescription.prototype, \"attestationSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyDescription.prototype, \"keymasterVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], KeyDescription.prototype, \"keymasterSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyDescription.prototype, \"attestationChallenge\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyDescription.prototype, \"uniqueId\", void 0);\n__decorate([\n    AsnProp({ type: AuthorizationList })\n], KeyDescription.prototype, \"softwareEnforced\", void 0);\n__decorate([\n    AsnProp({ type: AuthorizationList })\n], KeyDescription.prototype, \"teeEnforced\", void 0);\nexport class KeyMintKeyDescription {\n    constructor(params = {}) {\n        this.attestationVersion = Version.keyMint4;\n        this.attestationSecurityLevel = SecurityLevel.software;\n        this.keyMintVersion = 0;\n        this.keyMintSecurityLevel = SecurityLevel.software;\n        this.attestationChallenge = new OctetString();\n        this.uniqueId = new OctetString();\n        this.softwareEnforced = new AuthorizationList();\n        this.hardwareEnforced = new AuthorizationList();\n        Object.assign(this, params);\n    }\n    toLegacyKeyDescription() {\n        return new KeyDescription({\n            attestationVersion: this.attestationVersion,\n            attestationSecurityLevel: this.attestationSecurityLevel,\n            keymasterVersion: this.keyMintVersion,\n            keymasterSecurityLevel: this.keyMintSecurityLevel,\n            attestationChallenge: this.attestationChallenge,\n            uniqueId: this.uniqueId,\n            softwareEnforced: this.softwareEnforced,\n            teeEnforced: this.hardwareEnforced,\n        });\n    }\n    static fromLegacyKeyDescription(keyDesc) {\n        return new KeyMintKeyDescription({\n            attestationVersion: keyDesc.attestationVersion,\n            attestationSecurityLevel: keyDesc.attestationSecurityLevel,\n            keyMintVersion: keyDesc.keymasterVersion,\n            keyMintSecurityLevel: keyDesc.keymasterSecurityLevel,\n            attestationChallenge: keyDesc.attestationChallenge,\n            uniqueId: keyDesc.uniqueId,\n            softwareEnforced: keyDesc.softwareEnforced,\n            hardwareEnforced: keyDesc.teeEnforced,\n        });\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyMintKeyDescription.prototype, \"attestationVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], KeyMintKeyDescription.prototype, \"attestationSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyMintKeyDescription.prototype, \"keyMintVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], KeyMintKeyDescription.prototype, \"keyMintSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyMintKeyDescription.prototype, \"attestationChallenge\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyMintKeyDescription.prototype, \"uniqueId\", void 0);\n__decorate([\n    AsnProp({ type: AuthorizationList })\n], KeyMintKeyDescription.prototype, \"softwareEnforced\", void 0);\n__decorate([\n    AsnProp({ type: AuthorizationList })\n], KeyMintKeyDescription.prototype, \"hardwareEnforced\", void 0);\n", "var NonStandardAuthorizationList_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { AuthorizationList, SecurityLevel, Version } from \"./key_description\";\nlet NonStandardAuthorization = class NonStandardAuthorization extends AuthorizationList {\n};\nNonStandardAuthorization = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], NonStandardAuthorization);\nexport { NonStandardAuthorization };\nlet NonStandardAuthorizationList = NonStandardAuthorizationList_1 = class NonStandardAuthorizationList extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, NonStandardAuthorizationList_1.prototype);\n    }\n    findProperty(key) {\n        const prop = this.find((o) => key in o);\n        if (prop) {\n            return prop[key];\n        }\n        return undefined;\n    }\n};\nNonStandardAuthorizationList = NonStandardAuthorizationList_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: NonStandardAuthorization })\n], NonStandardAuthorizationList);\nexport { NonStandardAuthorizationList };\nexport class NonStandardKeyDescription {\n    get keyMintVersion() {\n        return this.keymasterVersion;\n    }\n    set keyMintVersion(value) {\n        this.keymasterVersion = value;\n    }\n    get keyMintSecurityLevel() {\n        return this.keymasterSecurityLevel;\n    }\n    set keyMintSecurityLevel(value) {\n        this.keymasterSecurityLevel = value;\n    }\n    get hardwareEnforced() {\n        return this.teeEnforced;\n    }\n    set hardwareEnforced(value) {\n        this.teeEnforced = value;\n    }\n    constructor(params = {}) {\n        this.attestationVersion = Version.KM4;\n        this.attestationSecurityLevel = SecurityLevel.software;\n        this.keymasterVersion = 0;\n        this.keymasterSecurityLevel = SecurityLevel.software;\n        this.attestationChallenge = new OctetString();\n        this.uniqueId = new OctetString();\n        this.softwareEnforced = new NonStandardAuthorizationList();\n        this.teeEnforced = new NonStandardAuthorizationList();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], NonStandardKeyDescription.prototype, \"attestationVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], NonStandardKeyDescription.prototype, \"attestationSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], NonStandardKeyDescription.prototype, \"keymasterVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], NonStandardKeyDescription.prototype, \"keymasterSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], NonStandardKeyDescription.prototype, \"attestationChallenge\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], NonStandardKeyDescription.prototype, \"uniqueId\", void 0);\n__decorate([\n    AsnProp({ type: NonStandardAuthorizationList })\n], NonStandardKeyDescription.prototype, \"softwareEnforced\", void 0);\n__decorate([\n    AsnProp({ type: NonStandardAuthorizationList })\n], NonStandardKeyDescription.prototype, \"teeEnforced\", void 0);\nlet NonStandardKeyMintKeyDescription = class NonStandardKeyMintKeyDescription extends NonStandardKeyDescription {\n    constructor(params = {}) {\n        if (\"keymasterVersion\" in params && !(\"keyMintVersion\" in params)) {\n            params.keyMintVersion = params.keymasterVersion;\n        }\n        if (\"keymasterSecurityLevel\" in params && !(\"keyMintSecurityLevel\" in params)) {\n            params.keyMintSecurityLevel = params.keymasterSecurityLevel;\n        }\n        if (\"teeEnforced\" in params && !(\"hardwareEnforced\" in params)) {\n            params.hardwareEnforced = params.teeEnforced;\n        }\n        super(params);\n    }\n};\nNonStandardKeyMintKeyDescription = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], NonStandardKeyMintKeyDescription);\nexport { NonStandardKeyMintKeyDescription };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class AttestationPackageInfo {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], AttestationPackageInfo.prototype, \"packageName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], AttestationPackageInfo.prototype, \"version\", void 0);\nexport class AttestationApplicationId {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AttestationPackageInfo, repeated: \"set\" })\n], AttestationApplicationId.prototype, \"packageInfos\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString, repeated: \"set\" })\n], AttestationApplicationId.prototype, \"signatureDigests\", void 0);\n", "import { tinyCbor } from '../../deps.js';\n/**\n * Whatever CBOR encoder is used should keep CBOR data the same length when data is re-encoded\n *\n * MOST CRITICALLY, this means the following needs to be true of whatever CBOR library we use:\n * - CBOR Map type values MUST decode to JavaScript Maps\n * - CBOR tag 64 (uint8 Typed Array) MUST NOT be used when encoding Uint8Arrays back to CBOR\n *\n * So long as these requirements are maintained, then CBOR sequences can be encoded and decoded\n * freely while maintaining their lengths for the most accurate pointer movement across them.\n */\n/**\n * Decode and return the first item in a sequence of CBOR-encoded values\n *\n * @param input The CBOR data to decode\n * @param asObject (optional) Whether to convert any CBOR Maps into JavaScript Objects. Defaults to\n * `false`\n */\nexport function decodeFirst(input) {\n    // Make a copy so we don't mutate the original\n    const _input = new Uint8Array(input);\n    const decoded = tinyCbor.decodePartialCBOR(_input, 0);\n    const [first] = decoded;\n    return first;\n}\n/**\n * Encode data to CBOR\n */\nexport function encode(input) {\n    return tinyCbor.encodeCBOR(input);\n}\n", "export { digest } from './digest.js';\nexport { getRandomValues } from './getRandomValues.js';\nexport { verify } from './verify.js';\n", "export function isCOSEPublicKeyOKP(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.OKP;\n}\nexport function isCOSEPublicKeyEC2(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.EC2;\n}\nexport function isCOSEPublicKeyRSA(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.RSA;\n}\n/**\n * COSE Keys\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-common-parameters\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type-parameters\n */\nexport var COSEKEYS;\n(function (COSEKEYS) {\n    COSEKEYS[COSEKEYS[\"kty\"] = 1] = \"kty\";\n    COSEKEYS[COSEKEYS[\"alg\"] = 3] = \"alg\";\n    COSEKEYS[COSEKEYS[\"crv\"] = -1] = \"crv\";\n    COSEKEYS[COSEKEYS[\"x\"] = -2] = \"x\";\n    COSEKEYS[COSEKEYS[\"y\"] = -3] = \"y\";\n    COSEKEYS[COSEKEYS[\"n\"] = -1] = \"n\";\n    COSEKEYS[COSEKEYS[\"e\"] = -2] = \"e\";\n})(COSEKEYS || (COSEKEYS = {}));\n/**\n * COSE Key Types\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type\n */\nexport var COSEKTY;\n(function (COSEKTY) {\n    COSEKTY[COSEKTY[\"OKP\"] = 1] = \"OKP\";\n    COSEKTY[COSEKTY[\"EC2\"] = 2] = \"EC2\";\n    COSEKTY[COSEKTY[\"RSA\"] = 3] = \"RSA\";\n})(COSEKTY || (COSEKTY = {}));\nexport function isCOSEKty(kty) {\n    return Object.values(COSEKTY).indexOf(kty) >= 0;\n}\n/**\n * COSE Curves\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#elliptic-curves\n */\nexport var COSECRV;\n(function (COSECRV) {\n    COSECRV[COSECRV[\"P256\"] = 1] = \"P256\";\n    COSECRV[COSECRV[\"P384\"] = 2] = \"P384\";\n    COSECRV[COSECRV[\"P521\"] = 3] = \"P521\";\n    COSECRV[COSECRV[\"ED25519\"] = 6] = \"ED25519\";\n    COSECRV[COSECRV[\"SECP256K1\"] = 8] = \"SECP256K1\";\n})(COSECRV || (COSECRV = {}));\nexport function isCOSECrv(crv) {\n    return Object.values(COSECRV).indexOf(crv) >= 0;\n}\n/**\n * COSE Algorithms\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nexport var COSEALG;\n(function (COSEALG) {\n    COSEALG[COSEALG[\"ES256\"] = -7] = \"ES256\";\n    COSEALG[COSEALG[\"EdDSA\"] = -8] = \"EdDSA\";\n    COSEALG[COSEALG[\"ES384\"] = -35] = \"ES384\";\n    COSEALG[COSEALG[\"ES512\"] = -36] = \"ES512\";\n    COSEALG[COSEALG[\"PS256\"] = -37] = \"PS256\";\n    COSEALG[COSEALG[\"PS384\"] = -38] = \"PS384\";\n    COSEALG[COSEALG[\"PS512\"] = -39] = \"PS512\";\n    COSEALG[COSEALG[\"ES256K\"] = -47] = \"ES256K\";\n    COSEALG[COSEALG[\"RS256\"] = -257] = \"RS256\";\n    COSEALG[COSEALG[\"RS384\"] = -258] = \"RS384\";\n    COSEALG[COSEALG[\"RS512\"] = -259] = \"RS512\";\n    COSEALG[COSEALG[\"RS1\"] = -65535] = \"RS1\";\n})(COSEALG || (COSEALG = {}));\nexport function isCOSEAlg(alg) {\n    return Object.values(COSEALG).indexOf(alg) >= 0;\n}\n", "import { COSEALG } from '../../cose.js';\n/**\n * Convert a COSE alg ID into a corresponding string value that WebCrypto APIs expect\n */\nexport function mapCoseAlgToWebCryptoAlg(alg) {\n    if ([COSEALG.RS1].indexOf(alg) >= 0) {\n        return 'SHA-1';\n    }\n    else if ([COSEALG.ES256, COSEALG.PS256, COSEALG.RS256].indexOf(alg) >= 0) {\n        return 'SHA-256';\n    }\n    else if ([COSEALG.ES384, COSEALG.PS384, COSEALG.RS384].indexOf(alg) >= 0) {\n        return 'SHA-384';\n    }\n    else if ([COSEALG.ES512, COSEALG.PS512, COSEALG.RS512, COSEALG.EdDSA].indexOf(alg) >=\n        0) {\n        return 'SHA-512';\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto alg`);\n}\n", "let webCrypto = undefined;\n/**\n * Try to get an instance of the Crypto API from the current runtime. Should support Node,\n * as well as others, like Deno, that implement Web APIs.\n */\nexport function getWebCrypto() {\n    /**\n     * Hello there! If you came here wondering why this method is asynchronous when use of\n     * `globalThis.crypto` is not, it's to minimize a bunch of refactor related to making this\n     * synchronous. For example, `generateRegistrationOptions()` and `generateAuthenticationOptions()`\n     * become synchronous if we make this synchronous (since nothing else in that method is async)\n     * which represents a breaking API change in this library's core API.\n     *\n     * TODO: If it's after February 2025 when you read this then consider whether it still makes sense\n     * to keep this method asynchronous.\n     */\n    const toResolve = new Promise((resolve, reject) => {\n        if (webCrypto) {\n            return resolve(webCrypto);\n        }\n        /**\n         * Naively attempt to access Crypto as a global object, which popular ESM-centric run-times\n         * support (and Node v20+)\n         */\n        const _globalThisCrypto = _getWebCryptoInternals.stubThisGlobalThisCrypto();\n        if (_globalThisCrypto) {\n            webCrypto = _globalThisCrypto;\n            return resolve(webCrypto);\n        }\n        // We tried to access it both in Node and globally, so bail out\n        return reject(new MissingWebCrypto());\n    });\n    return toResolve;\n}\nexport class MissingWebCrypto extends Error {\n    constructor() {\n        const message = 'An instance of the Crypto API could not be located';\n        super(message);\n        this.name = 'MissingWebCrypto';\n    }\n}\n// Make it possible to stub return values during testing\nexport const _getWebCryptoInternals = {\n    stubThisGlobalThisCrypto: () => globalThis.crypto,\n    // Make it possible to reset the `webCrypto` at the top of the file\n    setCachedCrypto: (newCrypto) => {\n        webCrypto = newCrypto;\n    },\n};\n", "import { mapCoseAlgToWebCryptoAlg } from './mapCoseAlgToWebCryptoAlg.js';\nimport { getWebCrypto } from './getWebCrypto.js';\n/**\n * Generate a digest of the provided data.\n *\n * @param data The data to generate a digest of\n * @param algorithm A COSE algorithm ID that maps to a desired SHA algorithm\n */\nexport async function digest(data, algorithm) {\n    const WebCrypto = await getWebCrypto();\n    const subtleAlgorithm = mapCoseAlgToWebCryptoAlg(algorithm);\n    const hashed = await WebCrypto.subtle.digest(subtleAlgorithm, data);\n    return new Uint8Array(hashed);\n}\n", "import { getWebCrypto } from './getWebCrypto.js';\n/**\n * Fill up the provided bytes array with random bytes equal to its length.\n *\n * @returns the same bytes array passed into the method\n */\nexport async function getRandomValues(array) {\n    const WebCrypto = await getWebCrypto();\n    WebCrypto.getRandomValues(array);\n    return array;\n}\n", "import { getWebCrypto } from './getWebCrypto.js';\nexport async function importKey(opts) {\n    const WebCrypto = await getWebCrypto();\n    const { keyData, algorithm } = opts;\n    return WebCrypto.subtle.importKey('jwk', keyData, algorithm, false, [\n        'verify',\n    ]);\n}\n", "import { COSECRV, COSEKEYS } from '../../cose.js';\nimport { mapCoseAlgToWebCryptoAlg } from './mapCoseAlgToWebCryptoAlg.js';\nimport { importKey } from './importKey.js';\nimport { isoBase64URL } from '../index.js';\nimport { getWebCrypto } from './getWebCrypto.js';\n/**\n * Verify a signature using an EC2 public key\n */\nexport async function verifyEC2(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await getWebCrypto();\n    // Import the public key\n    const alg = cosePublicKey.get(COSEKEYS.alg);\n    const crv = cosePublicKey.get(COSEKEYS.crv);\n    const x = cosePublicKey.get(COSEKEYS.x);\n    const y = cosePublicKey.get(COSEKEYS.y);\n    if (!alg) {\n        throw new Error('Public key was missing alg (EC2)');\n    }\n    if (!crv) {\n        throw new Error('Public key was missing crv (EC2)');\n    }\n    if (!x) {\n        throw new Error('Public key was missing x (EC2)');\n    }\n    if (!y) {\n        throw new Error('Public key was missing y (EC2)');\n    }\n    let _crv;\n    if (crv === COSECRV.P256) {\n        _crv = 'P-256';\n    }\n    else if (crv === COSECRV.P384) {\n        _crv = 'P-384';\n    }\n    else if (crv === COSECRV.P521) {\n        _crv = 'P-521';\n    }\n    else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (EC2)`);\n    }\n    const keyData = {\n        kty: 'EC',\n        crv: _crv,\n        x: isoBase64URL.fromBuffer(x),\n        y: isoBase64URL.fromBuffer(y),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        /**\n         * Note to future self: you can't use `mapCoseAlgToWebCryptoKeyAlgName()` here because some\n         * leaf certs from actual devices specified an RSA SHA value for `alg` (e.g. `-257`) which\n         * would then map here to `'RSASSA-PKCS1-v1_5'`. We always want `'ECDSA'` here so we'll\n         * hard-code this.\n         */\n        name: 'ECDSA',\n        namedCurve: _crv,\n    };\n    const key = await importKey({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    // Determine which SHA algorithm to use for signature verification\n    let subtleAlg = mapCoseAlgToWebCryptoAlg(alg);\n    if (shaHashOverride) {\n        subtleAlg = mapCoseAlgToWebCryptoAlg(shaHashOverride);\n    }\n    const verifyAlgorithm = {\n        name: 'ECDSA',\n        hash: { name: subtleAlg },\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n", "import { COSEALG } from '../../cose.js';\n/**\n * Convert a COSE alg ID into a corresponding key algorithm string value that WebCrypto APIs expect\n */\nexport function mapCoseAlgToWebCryptoKeyAlgName(alg) {\n    if ([COSEALG.EdDSA].indexOf(alg) >= 0) {\n        return 'Ed25519';\n    }\n    else if ([COSEALG.ES256, COSEALG.ES384, COSEALG.ES512, COSEALG.ES256K].indexOf(alg) >= 0) {\n        return 'ECDSA';\n    }\n    else if ([COSEALG.RS256, COSEALG.RS384, COSEALG.RS512, COSEALG.RS1].indexOf(alg) >= 0) {\n        return 'RSASSA-PKCS1-v1_5';\n    }\n    else if ([COSEALG.PS256, COSEALG.PS384, COSEALG.PS512].indexOf(alg) >= 0) {\n        return 'RSA-PSS';\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto key alg name`);\n}\n", "import { COSEKEYS, isCOSEAlg } from '../../cose.js';\nimport { mapCoseAlgToWebCryptoAlg } from './mapCoseAlgToWebCryptoAlg.js';\nimport { importKey } from './importKey.js';\nimport { isoBase64URL } from '../index.js';\nimport { mapCoseAlgToWebCryptoKeyAlgName } from './mapCoseAlgToWebCryptoKeyAlgName.js';\nimport { getWebCrypto } from './getWebCrypto.js';\n/**\n * Verify a signature using an RSA public key\n */\nexport async function verifyRSA(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await getWebCrypto();\n    const alg = cosePublicKey.get(COSEKEYS.alg);\n    const n = cosePublicKey.get(COSEKEYS.n);\n    const e = cosePublicKey.get(COSEKEYS.e);\n    if (!alg) {\n        throw new Error('Public key was missing alg (RSA)');\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (RSA)`);\n    }\n    if (!n) {\n        throw new Error('Public key was missing n (RSA)');\n    }\n    if (!e) {\n        throw new Error('Public key was missing e (RSA)');\n    }\n    const keyData = {\n        kty: 'RSA',\n        alg: '',\n        n: isoBase64URL.fromBuffer(n),\n        e: isoBase64URL.fromBuffer(e),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        name: mapCoseAlgToWebCryptoKeyAlgName(alg),\n        hash: { name: mapCoseAlgToWebCryptoAlg(alg) },\n    };\n    const verifyAlgorithm = {\n        name: mapCoseAlgToWebCryptoKeyAlgName(alg),\n    };\n    if (shaHashOverride) {\n        keyAlgorithm.hash.name = mapCoseAlgToWebCryptoAlg(shaHashOverride);\n    }\n    if (keyAlgorithm.name === 'RSASSA-PKCS1-v1_5') {\n        if (keyAlgorithm.hash.name === 'SHA-256') {\n            keyData.alg = 'RS256';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-384') {\n            keyData.alg = 'RS384';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-512') {\n            keyData.alg = 'RS512';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-1') {\n            keyData.alg = 'RS1';\n        }\n    }\n    else if (keyAlgorithm.name === 'RSA-PSS') {\n        /**\n         * salt length. The default value is 20 but the convention is to use hLen, the length of the\n         * output of the hash function in bytes. A salt length of zero is permitted and will result in\n         * a deterministic signature value. The actual salt length used can be determined from the\n         * signature value.\n         *\n         * From https://www.cryptosys.net/pki/manpki/pki_rsaschemes.html\n         */\n        let saltLength = 0;\n        if (keyAlgorithm.hash.name === 'SHA-256') {\n            keyData.alg = 'PS256';\n            saltLength = 32; // 256 bits => 32 bytes\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-384') {\n            keyData.alg = 'PS384';\n            saltLength = 48; // 384 bits => 48 bytes\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-512') {\n            keyData.alg = 'PS512';\n            saltLength = 64; // 512 bits => 64 bytes\n        }\n        verifyAlgorithm.saltLength = saltLength;\n    }\n    else {\n        throw new Error(`Unexpected RSA key algorithm ${alg} (${keyAlgorithm.name})`);\n    }\n    const key = await importKey({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n", "import { isoUint8Array } from './iso/index.js';\n/**\n * Convert the aaguid buffer in authData into a UUID string\n */\nexport function convertAAGUIDToString(aaguid) {\n    // Raw Hex: adce000235bcc60a648b0b25f1f05503\n    const hex = isoUint8Array.toHex(aaguid);\n    const segments = [\n        hex.slice(0, 8),\n        hex.slice(8, 12),\n        hex.slice(12, 16),\n        hex.slice(16, 20),\n        hex.slice(20, 32), // 8\n    ];\n    // Formatted: adce0002-35bc-c60a-648b-0b25f1f05503\n    return segments.join('-');\n}\n", "import { isoBase64URL } from './iso/index.js';\n/**\n * Convert buffer to an OpenSSL-compatible PEM text format.\n */\nexport function convertCertBufferToPEM(certBuffer) {\n    let b64cert;\n    /**\n     * Get certBuffer to a base64 representation\n     */\n    if (typeof certBuffer === 'string') {\n        if (isoBase64URL.isBase64URL(certBuffer)) {\n            b64cert = isoBase64URL.toBase64(certBuffer);\n        }\n        else if (isoBase64URL.isBase64(certBuffer)) {\n            b64cert = certBuffer;\n        }\n        else {\n            throw new Error('Certificate is not a valid base64 or base64url string');\n        }\n    }\n    else {\n        b64cert = isoBase64URL.fromBuffer(certBuffer, 'base64');\n    }\n    let PEMKey = '';\n    for (let i = 0; i < Math.ceil(b64cert.length / 64); i += 1) {\n        const start = 64 * i;\n        PEMKey += `${b64cert.substr(start, 64)}\\n`;\n    }\n    PEMKey = `-----BEGIN CERTIFICATE-----\\n${PEMKey}-----END CERTIFICATE-----\\n`;\n    return PEMKey;\n}\n", "import { isoCBOR, isoUint8Array } from './iso/index.js';\nimport { COSEKEYS } from './cose.js';\n/**\n * Takes COSE-encoded public key and converts it to PKCS key\n */\nexport function convertCOSEtoPKCS(cosePublicKey) {\n    // This is a little sloppy, I'm using COSEPublicKeyEC2 since it could have both x and y, but when\n    // there's no y it means it's probably better typed as COSEPublicKeyOKP. I'll leave this for now\n    // and revisit it later if it ever becomes an actual problem.\n    const struct = isoCBOR.decodeFirst(cosePublicKey);\n    const tag = Uint8Array.from([0x04]);\n    const x = struct.get(COSEKEYS.x);\n    const y = struct.get(COSEKEYS.y);\n    if (!x) {\n        throw new Error('COSE public key was missing x');\n    }\n    if (y) {\n        return isoUint8Array.concat([tag, x, y]);\n    }\n    return isoUint8Array.concat([tag, x]);\n}\n", "import { isoCBOR } from './iso/index.js';\n/**\n * Convert an AttestationObject buffer to a proper object\n *\n * @param base64AttestationObject Attestation Object buffer\n */\nexport function decodeAttestationObject(attestationObject) {\n    return _decodeAttestationObjectInternals.stubThis(isoCBOR.decodeFirst(attestationObject));\n}\n// Make it possible to stub the return value during testing\nexport const _decodeAttestationObjectInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoBase64URL } from './iso/index.js';\n/**\n * Decode an authenticator's base64url-encoded clientDataJSON to JSON\n */\nexport function decodeClientDataJSON(data) {\n    const toString = isoBase64URL.toUTF8String(data);\n    const clientData = JSON.parse(toString);\n    return _decodeClientDataJSONInternals.stubThis(clientData);\n}\n// Make it possible to stub the return value during testing\nexport const _decodeClientDataJSONInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoCBOR } from './iso/index.js';\nexport function decodeCredentialPublicKey(publicKey) {\n    return _decodeCredentialPublicKeyInternals.stubThis(isoCBOR.decodeFirst(publicKey));\n}\n// Make it possible to stub the return value during testing\nexport const _decodeCredentialPublicKeyInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoCrypto } from './iso/index.js';\n/**\n * Generate a suitably random value to be used as user ID\n */\nexport async function generateUserID() {\n    /**\n     * WebAuthn spec says user.id has a max length of 64 bytes. I prefer how 32 random bytes look\n     * after they're base64url-encoded so I'm choosing to go with that here.\n     */\n    const newUserID = new Uint8Array(32);\n    await isoCrypto.getRandomValues(newUserID);\n    return _generateUserIDInternals.stubThis(newUserID);\n}\n// Make it possible to stub the return value during testing\nexport const _generateUserIDInternals = {\n    stubThis: (value) => value,\n};\n", "import { AsnParser, BasicConstraints, Certificate, id_ce_basicConstraints } from '../deps.js';\nconst issuerSubjectIDKey = {\n    '2.5.4.6': 'C',\n    '2.5.4.10': 'O',\n    '2.5.4.11': 'OU',\n    '2.5.4.3': 'CN',\n};\n/**\n * Extract PEM certificate info\n *\n * @param pemCertificate Result from call to `convertASN1toPEM(x5c[0])`\n */\nexport function getCertificateInfo(leafCertBuffer) {\n    const x509 = AsnParser.parse(leafCertBuffer, Certificate);\n    const parsedCert = x509.tbsCertificate;\n    // Issuer\n    const issuer = { combined: '' };\n    parsedCert.issuer.forEach(([iss]) => {\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            issuer[key] = iss.value.toString();\n        }\n    });\n    issuer.combined = issuerSubjectToString(issuer);\n    // Subject\n    const subject = { combined: '' };\n    parsedCert.subject.forEach(([iss]) => {\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            subject[key] = iss.value.toString();\n        }\n    });\n    subject.combined = issuerSubjectToString(subject);\n    let basicConstraintsCA = false;\n    if (parsedCert.extensions) {\n        // console.log(parsedCert.extensions);\n        for (const ext of parsedCert.extensions) {\n            if (ext.extnID === id_ce_basicConstraints) {\n                const basicConstraints = AsnParser.parse(ext.extnValue, BasicConstraints);\n                basicConstraintsCA = basicConstraints.cA;\n            }\n        }\n    }\n    return {\n        issuer,\n        subject,\n        version: parsedCert.version,\n        basicConstraintsCA,\n        notBefore: parsedCert.validity.notBefore.getTime(),\n        notAfter: parsedCert.validity.notAfter.getTime(),\n        parsedCertificate: x509,\n    };\n}\n/**\n * Stringify the parts of Issuer or Subject info for easier comparison of subject issuers with\n * issuer subjects.\n *\n * The order might seem arbitrary, because it is. It should be enough that the two are stringified\n * in the same order.\n */\nfunction issuerSubjectToString(input) {\n    const parts = [];\n    if (input.C) {\n        parts.push(input.C);\n    }\n    if (input.O) {\n        parts.push(input.O);\n    }\n    if (input.OU) {\n        parts.push(input.OU);\n    }\n    if (input.CN) {\n        parts.push(input.CN);\n    }\n    return parts.join(' : ');\n}\n", "import { crossFetch } from '../deps.js';\n/**\n * A simple method for requesting data via standard `fetch`. Should work\n * across multiple runtimes.\n */\nexport function fetch(url) {\n    return _fetchInternals.stubThis(url);\n}\n// Make it possible to stub the return value during testing\nexport const _fetchInternals = {\n    stubThis: (url) => crossFetch(url),\n};\n", "import { AsnParser, AuthorityKeyIdentifier, CertificateList, CRLDistributionPoints, id_ce_authorityKeyIdentifier, id_ce_cRLDistributionPoints, id_ce_subjectKeyIdentifier, SubjectKeyIdentifier, } from '../deps.js';\nimport { isoUint8Array } from './iso/index.js';\nimport { fetch } from './fetch.js';\nconst cacheRevokedCerts = {};\n/**\n * A method to pull a CRL from a certificate and compare its serial number to the list of revoked\n * certificate serial numbers within the CRL.\n *\n * CRL certificate structure referenced from https://tools.ietf.org/html/rfc5280#page-117\n */\nexport async function isCertRevoked(cert) {\n    const { extensions } = cert.tbsCertificate;\n    if (!extensions) {\n        return false;\n    }\n    let extAuthorityKeyID;\n    let extSubjectKeyID;\n    let extCRLDistributionPoints;\n    extensions.forEach((ext) => {\n        if (ext.extnID === id_ce_authorityKeyIdentifier) {\n            extAuthorityKeyID = AsnParser.parse(ext.extnValue, AuthorityKeyIdentifier);\n        }\n        else if (ext.extnID === id_ce_subjectKeyIdentifier) {\n            extSubjectKeyID = AsnParser.parse(ext.extnValue, SubjectKeyIdentifier);\n        }\n        else if (ext.extnID === id_ce_cRLDistributionPoints) {\n            extCRLDistributionPoints = AsnParser.parse(ext.extnValue, CRLDistributionPoints);\n        }\n    });\n    // Check to see if we've got cached info for the cert's CA\n    let keyIdentifier = undefined;\n    if (extAuthorityKeyID && extAuthorityKeyID.keyIdentifier) {\n        keyIdentifier = isoUint8Array.toHex(new Uint8Array(extAuthorityKeyID.keyIdentifier.buffer));\n    }\n    else if (extSubjectKeyID) {\n        /**\n         * We might be dealing with a self-signed root certificate. Check the\n         * Subject key Identifier extension next.\n         */\n        keyIdentifier = isoUint8Array.toHex(new Uint8Array(extSubjectKeyID.buffer));\n    }\n    const certSerialHex = isoUint8Array.toHex(new Uint8Array(cert.tbsCertificate.serialNumber));\n    if (keyIdentifier) {\n        const cached = cacheRevokedCerts[keyIdentifier];\n        if (cached) {\n            const now = new Date();\n            // If there's a nextUpdate then make sure we're before it\n            if (!cached.nextUpdate || cached.nextUpdate > now) {\n                return cached.revokedCerts.indexOf(certSerialHex) >= 0;\n            }\n        }\n    }\n    const crlURL = extCRLDistributionPoints?.[0].distributionPoint?.fullName?.[0]\n        .uniformResourceIdentifier;\n    // If no URL is provided then we have nothing to check\n    if (!crlURL) {\n        return false;\n    }\n    // Download and read the CRL\n    let certListBytes;\n    try {\n        const respCRL = await fetch(crlURL);\n        certListBytes = await respCRL.arrayBuffer();\n    }\n    catch (_err) {\n        return false;\n    }\n    let data;\n    try {\n        data = AsnParser.parse(certListBytes, CertificateList);\n    }\n    catch (_err) {\n        // Something was malformed with the CRL, so pass\n        return false;\n    }\n    const newCached = {\n        revokedCerts: [],\n        nextUpdate: undefined,\n    };\n    // nextUpdate\n    if (data.tbsCertList.nextUpdate) {\n        newCached.nextUpdate = data.tbsCertList.nextUpdate.getTime();\n    }\n    // revokedCertificates\n    const revokedCerts = data.tbsCertList.revokedCertificates;\n    if (revokedCerts) {\n        for (const cert of revokedCerts) {\n            const revokedHex = isoUint8Array.toHex(new Uint8Array(cert.userCertificate));\n            newCached.revokedCerts.push(revokedHex);\n        }\n        // Cache the results\n        if (keyIdentifier) {\n            cacheRevokedCerts[keyIdentifier] = newCached;\n        }\n        return newCached.revokedCerts.indexOf(certSerialHex) >= 0;\n    }\n    return false;\n}\n", "import { isoCBOR } from './iso/index.js';\n/**\n * Convert authenticator extension data buffer to a proper object\n *\n * @param extensionData Authenticator Extension Data buffer\n */\nexport function decodeAuthenticatorExtensions(extensionData) {\n    let toCBOR;\n    try {\n        toCBOR = isoCBOR.decodeFirst(extensionData);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`Error decoding authenticator extensions: ${_err.message}`);\n    }\n    return convertMapToObjectDeep(toCBOR);\n}\n/**\n * CBOR-encoded extensions can be deeply-nested Maps, which are too deep for a simple\n * `Object.entries()`. This method will recursively make sure that all Maps are converted into\n * basic objects.\n */\nfunction convertMapToObjectDeep(input) {\n    const mapped = {};\n    for (const [key, value] of input) {\n        if (value instanceof Map) {\n            mapped[key] = convertMapToObjectDeep(value);\n        }\n        else {\n            mapped[key] = value;\n        }\n    }\n    return mapped;\n}\n", "import { decodeAuthenticatorExtensions, } from './decodeAuthenticatorExtensions.js';\nimport { isoCBOR, isoUint8Array } from './iso/index.js';\n/**\n * Make sense of the authData buffer contained in an Attestation\n */\nexport function parseAuthenticatorData(authData) {\n    if (authData.byteLength < 37) {\n        throw new Error(`Authenticator data was ${authData.byteLength} bytes, expected at least 37 bytes`);\n    }\n    let pointer = 0;\n    const dataView = isoUint8Array.toDataView(authData);\n    const rpIdHash = authData.slice(pointer, pointer += 32);\n    const flagsBuf = authData.slice(pointer, pointer += 1);\n    const flagsInt = flagsBuf[0];\n    // Bit positions can be referenced here:\n    // https://www.w3.org/TR/webauthn-2/#flags\n    const flags = {\n        up: !!(flagsInt & (1 << 0)),\n        uv: !!(flagsInt & (1 << 2)),\n        be: !!(flagsInt & (1 << 3)),\n        bs: !!(flagsInt & (1 << 4)),\n        at: !!(flagsInt & (1 << 6)),\n        ed: !!(flagsInt & (1 << 7)),\n        flagsInt,\n    };\n    const counterBuf = authData.slice(pointer, pointer + 4);\n    const counter = dataView.getUint32(pointer, false);\n    pointer += 4;\n    let aaguid = undefined;\n    let credentialID = undefined;\n    let credentialPublicKey = undefined;\n    if (flags.at) {\n        aaguid = authData.slice(pointer, pointer += 16);\n        const credIDLen = dataView.getUint16(pointer);\n        pointer += 2;\n        credentialID = authData.slice(pointer, pointer += credIDLen);\n        /**\n         * Firefox 117 incorrectly CBOR-encodes authData when EdDSA (-8) is used for the public key.\n         * A CBOR \"Map of 3 items\" (0xa3) should be \"Map of 4 items\" (0xa4), and if we manually adjust\n         * the single byte there's a good chance the authData can be correctly parsed.\n         *\n         * This browser release also incorrectly uses the string labels \"OKP\" and \"Ed25519\" instead of\n         * their integer representations for kty and crv respectively. That's why the COSE public key\n         * in the hex below looks so odd.\n         */\n        // Bytes decode to `{ 1: \"OKP\", 3: -8, -1: \"Ed25519\" }` (it's missing key -2 a.k.a. COSEKEYS.x)\n        const badEdDSACBOR = isoUint8Array.fromHex('a301634f4b500327206745643235353139');\n        const bytesAtCurrentPosition = authData.slice(pointer, pointer + badEdDSACBOR.byteLength);\n        let foundBadCBOR = false;\n        if (isoUint8Array.areEqual(badEdDSACBOR, bytesAtCurrentPosition)) {\n            // Change the bad CBOR 0xa3 to 0xa4 so that the credential public key can be recognized\n            foundBadCBOR = true;\n            authData[pointer] = 0xa4;\n        }\n        // Decode the next CBOR item in the buffer, then re-encode it back to a Buffer\n        const firstDecoded = isoCBOR.decodeFirst(authData.slice(pointer));\n        const firstEncoded = Uint8Array.from(\n        /**\n         * Casting to `Map` via `as unknown` here because TS doesn't make it possible to define Maps\n         * with discrete keys and properties with known types per pair, and CBOR libs typically parse\n         * CBOR Major Type 5 to `Map` because you can have numbers for keys. A `COSEPublicKey` can be\n         * generalized as \"a Map with numbers for keys and either numbers or bytes for values\" though.\n         * If this presumption falls apart then other parts of verification later on will fail so we\n         * should be safe doing this here.\n         */\n        isoCBOR.encode(firstDecoded));\n        if (foundBadCBOR) {\n            // Restore the bit we changed so that `authData` is the same as it came in and won't break\n            // signature verification.\n            authData[pointer] = 0xa3;\n        }\n        credentialPublicKey = firstEncoded;\n        pointer += firstEncoded.byteLength;\n    }\n    let extensionsData = undefined;\n    let extensionsDataBuffer = undefined;\n    if (flags.ed) {\n        const firstDecoded = isoCBOR.decodeFirst(authData.slice(pointer));\n        extensionsDataBuffer = Uint8Array.from(isoCBOR.encode(firstDecoded));\n        extensionsData = decodeAuthenticatorExtensions(extensionsDataBuffer);\n        pointer += extensionsDataBuffer.byteLength;\n    }\n    // Pointer should be at the end of the authenticator data, otherwise too much data was sent\n    if (authData.byteLength > pointer) {\n        throw new Error('Leftover bytes detected while parsing authenticator data');\n    }\n    return _parseAuthenticatorDataInternals.stubThis({\n        rpIdHash,\n        flagsBuf,\n        flags,\n        counter,\n        counterBuf,\n        aaguid,\n        credentialID,\n        credentialPublicKey,\n        extensionsData,\n        extensionsDataBuffer,\n    });\n}\n// Make it possible to stub the return value during testing\nexport const _parseAuthenticatorDataInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoCrypto, isoUint8Array } from './iso/index.js';\n/**\n * Returns hash digest of the given data, using the given algorithm when provided. Defaults to using\n * SHA-256.\n */\nexport function toHash(data, algorithm = -7) {\n    if (typeof data === 'string') {\n        data = isoUint8Array.fromUTF8String(data);\n    }\n    const digest = isoCrypto.digest(data, algorithm);\n    return digest;\n}\n", "import { COSEALG } from './cose.js';\n/**\n * Map X.509 signature algorithm OIDs to COSE algorithm IDs\n *\n * - EC2 OIDs: https://oidref.com/1.2.840.10045.4.3\n * - RSA OIDs: https://oidref.com/1.2.840.113549.1.1\n */\nexport function mapX509SignatureAlgToCOSEAlg(signatureAlgorithm) {\n    let alg;\n    if (signatureAlgorithm === '1.2.840.10045.4.3.2') {\n        alg = COSEALG.ES256;\n    }\n    else if (signatureAlgorithm === '1.2.840.10045.4.3.3') {\n        alg = COSEALG.ES384;\n    }\n    else if (signatureAlgorithm === '1.2.840.10045.4.3.4') {\n        alg = COSEALG.ES512;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.11') {\n        alg = COSEALG.RS256;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.12') {\n        alg = COSEALG.RS384;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.13') {\n        alg = COSEALG.RS512;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.5') {\n        alg = COSEALG.RS1;\n    }\n    else {\n        throw new Error(`Unable to map X.509 signature algorithm ${signatureAlgorithm} to a COSE algorithm`);\n    }\n    return alg;\n}\n", "import { AsnParser, Certificate, ECParameters, id_ecPublicKey, id_secp256r1, id_secp384r1, RSAPublicKey, } from '../deps.js';\nimport { COSECRV, COSEKEYS, COSEKTY, } from './cose.js';\nimport { mapX509SignatureAlgToCOSEAlg } from './mapX509SignatureAlgToCOSEAlg.js';\nexport function convertX509PublicKeyToCOSE(x509Certificate) {\n    let cosePublicKey = new Map();\n    /**\n     * Time to extract the public key from an X.509 certificate\n     */\n    const x509 = AsnParser.parse(x509Certificate, Certificate);\n    const { tbsCertificate } = x509;\n    const { subjectPublicKeyInfo, signature: _tbsSignature } = tbsCertificate;\n    const signatureAlgorithm = _tbsSignature.algorithm;\n    const publicKeyAlgorithmID = subjectPublicKeyInfo.algorithm.algorithm;\n    if (publicKeyAlgorithmID === id_ecPublicKey) {\n        /**\n         * EC2 Public Key\n         */\n        if (!subjectPublicKeyInfo.algorithm.parameters) {\n            throw new Error('Certificate public key was missing parameters (EC2)');\n        }\n        const ecParameters = AsnParser.parse(new Uint8Array(subjectPublicKeyInfo.algorithm.parameters), ECParameters);\n        let crv = -999;\n        const { namedCurve } = ecParameters;\n        if (namedCurve === id_secp256r1) {\n            crv = COSECRV.P256;\n        }\n        else if (namedCurve === id_secp384r1) {\n            crv = COSECRV.P384;\n        }\n        else {\n            throw new Error(`Certificate public key contained unexpected namedCurve ${namedCurve} (EC2)`);\n        }\n        const subjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n        let x;\n        let y;\n        if (subjectPublicKey[0] === 0x04) {\n            // Public key is in \"uncompressed form\", so we can split the remaining bytes in half\n            let pointer = 1;\n            const halfLength = (subjectPublicKey.length - 1) / 2;\n            x = subjectPublicKey.slice(pointer, pointer += halfLength);\n            y = subjectPublicKey.slice(pointer);\n        }\n        else {\n            throw new Error('TODO: Figure out how to handle public keys in \"compressed form\"');\n        }\n        const coseEC2PubKey = new Map();\n        coseEC2PubKey.set(COSEKEYS.kty, COSEKTY.EC2);\n        coseEC2PubKey.set(COSEKEYS.alg, mapX509SignatureAlgToCOSEAlg(signatureAlgorithm));\n        coseEC2PubKey.set(COSEKEYS.crv, crv);\n        coseEC2PubKey.set(COSEKEYS.x, x);\n        coseEC2PubKey.set(COSEKEYS.y, y);\n        cosePublicKey = coseEC2PubKey;\n    }\n    else if (publicKeyAlgorithmID === '1.2.840.113549.1.1.1') {\n        /**\n         * RSA public key\n         */\n        const rsaPublicKey = AsnParser.parse(subjectPublicKeyInfo.subjectPublicKey, RSAPublicKey);\n        const coseRSAPubKey = new Map();\n        coseRSAPubKey.set(COSEKEYS.kty, COSEKTY.RSA);\n        coseRSAPubKey.set(COSEKEYS.alg, mapX509SignatureAlgToCOSEAlg(signatureAlgorithm));\n        coseRSAPubKey.set(COSEKEYS.n, new Uint8Array(rsaPublicKey.modulus));\n        coseRSAPubKey.set(COSEKEYS.e, new Uint8Array(rsaPublicKey.publicExponent));\n        cosePublicKey = coseRSAPubKey;\n    }\n    else {\n        throw new Error(`Certificate public key contained unexpected algorithm ID ${publicKeyAlgorithmID}`);\n    }\n    return cosePublicKey;\n}\n", "import { isoCrypto } from './iso/index.js';\nimport { decodeCredentialPublicKey } from './decodeCredentialPublicKey.js';\nimport { convertX509PublicKeyToCOSE } from './convertX509PublicKeyToCOSE.js';\n/**\n * Verify an authenticator's signature\n */\nexport function verifySignature(opts) {\n    const { signature, data, credentialPublicKey, x509Certificate, hashAlgorithm, } = opts;\n    if (!x509Certificate && !credentialPublicKey) {\n        throw new Error('Must declare either \"leafCert\" or \"credentialPublicKey\"');\n    }\n    if (x509Certificate && credentialPublicKey) {\n        throw new Error('Must not declare both \"leafCert\" and \"credentialPublicKey\"');\n    }\n    let cosePublicKey = new Map();\n    if (credentialPublicKey) {\n        cosePublicKey = decodeCredentialPublicKey(credentialPublicKey);\n    }\n    else if (x509Certificate) {\n        cosePublicKey = convertX509PublicKeyToCOSE(x509Certificate);\n    }\n    return _verifySignatureInternals.stubThis(isoCrypto.verify({\n        cosePublicKey,\n        signature,\n        data,\n        shaHashOverride: hashAlgorithm,\n    }));\n}\n// Make it possible to stub the return value during testing\nexport const _verifySignatureInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoBase64URL } from './iso/index.js';\n/**\n * Take a certificate in PEM format and convert it to bytes\n */\nexport function convertPEMToBytes(pem) {\n    const certBase64 = pem\n        .replace('-----BEGIN CERTIFICATE-----', '')\n        .replace('-----END CERTIFICATE-----', '')\n        .replace(/[\\n ]/g, '');\n    return isoBase64URL.toBuffer(certBase64, 'base64');\n}\n", "import { AsnSerializer } from '../deps.js';\nimport { isCertRevoked } from './isCertRevoked.js';\nimport { verifySignature } from './verifySignature.js';\nimport { mapX509SignatureAlgToCOSEAlg } from './mapX509SignatureAlgToCOSEAlg.js';\nimport { getCertificateInfo } from './getCertificateInfo.js';\nimport { convertPEMToBytes } from './convertPEMToBytes.js';\n/**\n * Traverse an array of PEM certificates and ensure they form a proper chain\n * @param certificates Typically the result of `x5c.map(convertASN1toPEM)`\n * @param rootCertificates Possible root certificates to complete the path\n */\nexport async function validateCertificatePath(certificates, rootCertificates = []) {\n    if (rootCertificates.length === 0) {\n        // We have no root certs with which to create a full path, so skip path validation\n        // TODO: Is this going to be acceptable default behavior??\n        return true;\n    }\n    let invalidSubjectAndIssuerError = false;\n    let certificateNotYetValidOrExpiredErrorMessage = undefined;\n    for (const rootCert of rootCertificates) {\n        try {\n            const certsWithRoot = certificates.concat([rootCert]);\n            await _validatePath(certsWithRoot);\n            // If we successfully validated a path then there's no need to continue. Reset any existing\n            // errors that were thrown by earlier root certificates\n            invalidSubjectAndIssuerError = false;\n            certificateNotYetValidOrExpiredErrorMessage = undefined;\n            break;\n        }\n        catch (err) {\n            if (err instanceof InvalidSubjectAndIssuer) {\n                invalidSubjectAndIssuerError = true;\n            }\n            else if (err instanceof CertificateNotYetValidOrExpired) {\n                certificateNotYetValidOrExpiredErrorMessage = err.message;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    // We tried multiple root certs and none of them worked\n    if (invalidSubjectAndIssuerError) {\n        throw new InvalidSubjectAndIssuer();\n    }\n    else if (certificateNotYetValidOrExpiredErrorMessage) {\n        throw new CertificateNotYetValidOrExpired(certificateNotYetValidOrExpiredErrorMessage);\n    }\n    return true;\n}\nasync function _validatePath(certificates) {\n    if (new Set(certificates).size !== certificates.length) {\n        throw new Error('Invalid certificate path: found duplicate certificates');\n    }\n    // From leaf to root, make sure each cert is issued by the next certificate in the chain\n    for (let i = 0; i < certificates.length; i += 1) {\n        const subjectPem = certificates[i];\n        const isLeafCert = i === 0;\n        const isRootCert = i + 1 >= certificates.length;\n        let issuerPem = '';\n        if (isRootCert) {\n            issuerPem = subjectPem;\n        }\n        else {\n            issuerPem = certificates[i + 1];\n        }\n        const subjectInfo = getCertificateInfo(convertPEMToBytes(subjectPem));\n        const issuerInfo = getCertificateInfo(convertPEMToBytes(issuerPem));\n        const x509Subject = subjectInfo.parsedCertificate;\n        // Check for certificate revocation\n        const subjectCertRevoked = await isCertRevoked(x509Subject);\n        if (subjectCertRevoked) {\n            throw new Error(`Found revoked certificate in certificate path`);\n        }\n        // Check that intermediate certificate is within its valid time window\n        const { notBefore, notAfter } = issuerInfo;\n        const now = new Date(Date.now());\n        if (notBefore > now || notAfter < now) {\n            if (isLeafCert) {\n                throw new CertificateNotYetValidOrExpired(`Leaf certificate is not yet valid or expired: ${issuerPem}`);\n            }\n            else if (isRootCert) {\n                throw new CertificateNotYetValidOrExpired(`Root certificate is not yet valid or expired: ${issuerPem}`);\n            }\n            else {\n                throw new CertificateNotYetValidOrExpired(`Intermediate certificate is not yet valid or expired: ${issuerPem}`);\n            }\n        }\n        if (subjectInfo.issuer.combined !== issuerInfo.subject.combined) {\n            throw new InvalidSubjectAndIssuer();\n        }\n        // Verify the subject certificate's signature with the issuer cert's public key\n        const data = AsnSerializer.serialize(x509Subject.tbsCertificate);\n        const signature = x509Subject.signatureValue;\n        const signatureAlgorithm = mapX509SignatureAlgToCOSEAlg(x509Subject.signatureAlgorithm.algorithm);\n        const issuerCertBytes = convertPEMToBytes(issuerPem);\n        const verified = await verifySignature({\n            data: new Uint8Array(data),\n            signature: new Uint8Array(signature),\n            x509Certificate: issuerCertBytes,\n            hashAlgorithm: signatureAlgorithm,\n        });\n        if (!verified) {\n            throw new Error('Invalid certificate path: invalid signature');\n        }\n    }\n    return true;\n}\n// Custom errors to help pass on certain errors\nclass InvalidSubjectAndIssuer extends Error {\n    constructor() {\n        const message = 'Subject issuer did not match issuer subject';\n        super(message);\n        this.name = 'InvalidSubjectAndIssuer';\n    }\n}\nclass CertificateNotYetValidOrExpired extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'CertificateNotYetValidOrExpired';\n    }\n}\n", "import { COSECRV, COSEKEYS, isCOSEAlg } from '../../cose.js';\nimport { isoBase64URL } from '../../index.js';\nimport { importKey } from './importKey.js';\nimport { getWebCrypto } from './getWebCrypto.js';\nexport async function verifyOKP(opts) {\n    const { cosePublicKey, signature, data } = opts;\n    const WebCrypto = await getWebCrypto();\n    const alg = cosePublicKey.get(COSEKEYS.alg);\n    const crv = cosePublicKey.get(COSEKEYS.crv);\n    const x = cosePublicKey.get(COSEKEYS.x);\n    if (!alg) {\n        throw new Error('Public key was missing alg (OKP)');\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (OKP)`);\n    }\n    if (!crv) {\n        throw new Error('Public key was missing crv (OKP)');\n    }\n    if (!x) {\n        throw new Error('Public key was missing x (OKP)');\n    }\n    // Pulled key import steps from here:\n    // https://wicg.github.io/webcrypto-secure-curves/#ed25519-operations\n    let _crv;\n    if (crv === COSECRV.ED25519) {\n        _crv = 'Ed25519';\n    }\n    else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (OKP)`);\n    }\n    const keyData = {\n        kty: 'OKP',\n        crv: _crv,\n        alg: 'EdDSA',\n        x: isoBase64URL.fromBuffer(x),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        name: _crv,\n        namedCurve: _crv,\n    };\n    const key = await importKey({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    const verifyAlgorithm = {\n        name: _crv,\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n", "import { AsnParser, ECDSASigValue } from '../../../deps.js';\nimport { COSECRV } from '../../cose.js';\nimport { isoUint8Array } from '../index.js';\n/**\n * In WebAuthn, EC2 signatures are wrapped in ASN.1 structure so we need to peel r and s apart.\n *\n * See https://www.w3.org/TR/webauthn-2/#sctn-signature-attestation-types\n */\nexport function unwrapEC2Signature(signature, crv) {\n    const parsedSignature = AsnParser.parse(signature, ECDSASigValue);\n    const rBytes = new Uint8Array(parsedSignature.r);\n    const sBytes = new Uint8Array(parsedSignature.s);\n    const componentLength = getSignatureComponentLength(crv);\n    const rNormalizedBytes = toNormalizedBytes(rBytes, componentLength);\n    const sNormalizedBytes = toNormalizedBytes(sBytes, componentLength);\n    const finalSignature = isoUint8Array.concat([\n        rNormalizedBytes,\n        sNormalizedBytes,\n    ]);\n    return finalSignature;\n}\n/**\n * The SubtleCrypto Web Crypto API expects ECDSA signatures with `r` and `s` values to be encoded\n * to a specific length depending on the order of the curve. This function returns the expected\n * byte-length for each of the `r` and `s` signature components.\n *\n * See <https://www.w3.org/TR/WebCryptoAPI/#ecdsa-operations>\n */\nfunction getSignatureComponentLength(crv) {\n    switch (crv) {\n        case COSECRV.P256:\n            return 32;\n        case COSECRV.P384:\n            return 48;\n        case COSECRV.P521:\n            return 66;\n        default:\n            throw new Error(`Unexpected COSE crv value of ${crv} (EC2)`);\n    }\n}\n/**\n * Converts the ASN.1 integer representation to bytes of a specific length `n`.\n *\n * DER encodes integers as big-endian byte arrays, with as small as possible representation and\n * requires a leading `0` byte to disambiguate between negative and positive numbers. This means\n * that `r` and `s` can potentially not be the expected byte-length that is needed by the\n * SubtleCrypto Web Crypto API: if there are leading `0`s it can be shorter than expected, and if\n * it has a leading `1` bit, it can be one byte longer.\n *\n * See <https://www.itu.int/rec/T-REC-X.690-202102-I/en>\n * See <https://www.w3.org/TR/WebCryptoAPI/#ecdsa-operations>\n */\nfunction toNormalizedBytes(bytes, componentLength) {\n    let normalizedBytes;\n    if (bytes.length < componentLength) {\n        // In case the bytes are shorter than expected, we need to pad it with leading `0`s.\n        normalizedBytes = new Uint8Array(componentLength);\n        normalizedBytes.set(bytes, componentLength - bytes.length);\n    }\n    else if (bytes.length === componentLength) {\n        normalizedBytes = bytes;\n    }\n    else if (bytes.length === componentLength + 1 && bytes[0] === 0 && (bytes[1] & 0x80) === 0x80) {\n        // The bytes contain a leading `0` to encode that the integer is positive. This leading `0`\n        // needs to be removed for compatibility with the SubtleCrypto Web Crypto API.\n        normalizedBytes = bytes.subarray(1);\n    }\n    else {\n        throw new Error(`Invalid signature component length ${bytes.length}, expected ${componentLength}`);\n    }\n    return normalizedBytes;\n}\n", "import { COSEKEYS, isCOSECrv, isCOSEPublicKeyEC2, isCOSEPublicKeyOKP, isCOSEPublicKeyRSA, } from '../../cose.js';\nimport { verifyEC2 } from './verifyEC2.js';\nimport { verifyRSA } from './verifyRSA.js';\nimport { verifyOKP } from './verifyOKP.js';\nimport { unwrapEC2Signature } from './unwrapEC2Signature.js';\n/**\n * Verify signatures with their public key. Supports EC2 and RSA public keys.\n */\nexport function verify(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    if (isCOSEPublicKeyEC2(cosePublicKey)) {\n        const crv = cosePublicKey.get(COSEKEYS.crv);\n        if (!isCOSECrv(crv)) {\n            throw new Error(`unknown COSE curve ${crv}`);\n        }\n        const unwrappedSignature = unwrapEC2Signature(signature, crv);\n        return verifyEC2({\n            cosePublicKey,\n            signature: unwrappedSignature,\n            data,\n            shaHashOverride,\n        });\n    }\n    else if (isCOSEPublicKeyRSA(cosePublicKey)) {\n        return verifyRSA({ cosePublicKey, signature, data, shaHashOverride });\n    }\n    else if (isCOSEPublicKeyOKP(cosePublicKey)) {\n        return verifyOKP({ cosePublicKey, signature, data });\n    }\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    throw new Error(`Signature verification with public key of kty ${kty} is not supported by this method`);\n}\n", "/**\n * Make sure two Uint8Arrays are deeply equivalent\n */\nexport function areEqual(array1, array2) {\n    if (array1.length != array2.length) {\n        return false;\n    }\n    return array1.every((val, i) => val === array2[i]);\n}\n/**\n * Convert a Uint8Array to Hexadecimal.\n *\n * A replacement for `Buffer.toString('hex')`\n */\nexport function toHex(array) {\n    const hexParts = Array.from(array, (i) => i.toString(16).padStart(2, '0'));\n    // adce000235bcc60a648b0b25f1f05503\n    return hexParts.join('');\n}\n/**\n * Convert a hexadecimal string to isoUint8Array.\n *\n * A replacement for `Buffer.from('...', 'hex')`\n */\nexport function fromHex(hex) {\n    if (!hex) {\n        return Uint8Array.from([]);\n    }\n    const isValid = hex.length !== 0 && hex.length % 2 === 0 &&\n        !/[^a-fA-F0-9]/u.test(hex);\n    if (!isValid) {\n        throw new Error('Invalid hex string');\n    }\n    const byteStrings = hex.match(/.{1,2}/g) ?? [];\n    return Uint8Array.from(byteStrings.map((byte) => parseInt(byte, 16)));\n}\n/**\n * Combine multiple Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n    let pointer = 0;\n    const totalLength = arrays.reduce((prev, curr) => prev + curr.length, 0);\n    const toReturn = new Uint8Array(totalLength);\n    arrays.forEach((arr) => {\n        toReturn.set(arr, pointer);\n        pointer += arr.length;\n    });\n    return toReturn;\n}\n/**\n * Convert bytes into a UTF-8 string\n */\nexport function toUTF8String(array) {\n    const decoder = new globalThis.TextDecoder('utf-8');\n    return decoder.decode(array);\n}\n/**\n * Convert a UTF-8 string back into bytes\n */\nexport function fromUTF8String(utf8String) {\n    const encoder = new globalThis.TextEncoder();\n    return encoder.encode(utf8String);\n}\n/**\n * Convert an ASCII string to Uint8Array\n */\nexport function fromASCIIString(value) {\n    return Uint8Array.from(value.split('').map((x) => x.charCodeAt(0)));\n}\n/**\n * Prepare a DataView we can slice our way around in as we parse the bytes in a Uint8Array\n */\nexport function toDataView(array) {\n    return new DataView(array.buffer, array.byteOffset, array.length);\n}\n", "import { isoCrypto } from './iso/index.js';\n/**\n * Generate a suitably random value to be used as an attestation or assertion challenge\n */\nexport async function generateChallenge() {\n    /**\n     * WebAuthn spec says that 16 bytes is a good minimum:\n     *\n     * \"In order to prevent replay attacks, the challenges MUST contain enough entropy to make\n     * guessing them infeasible. Challenges SHOULD therefore be at least 16 bytes long.\"\n     *\n     * Just in case, let's double it\n     */\n    const challenge = new Uint8Array(32);\n    await isoCrypto.getRandomValues(challenge);\n    return _generateChallengeInternals.stubThis(challenge);\n}\n// Make it possible to stub the return value during testing\nexport const _generateChallengeInternals = {\n    stubThis: (value) => value,\n};\n", "import { generateChallenge } from '../helpers/generateChallenge.js';\nimport { generateUserID } from '../helpers/generateUserID.js';\nimport { isoBase64URL, isoUint8Array } from '../helpers/iso/index.js';\n/**\n * Supported crypto algo identifiers\n * See https://w3c.github.io/webauthn/#sctn-alg-identifier\n * and https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nexport const supportedCOSEAlgorithmIdentifiers = [\n    // EdDSA (In first position to encourage authenticators to use this over ES256)\n    -8,\n    // ECDSA w/ SHA-256\n    -7,\n    // ECDSA w/ SHA-512\n    -36,\n    // RSASSA-PSS w/ SHA-256\n    -37,\n    // RSASSA-PSS w/ SHA-384\n    -38,\n    // RSASSA-PSS w/ SHA-512\n    -39,\n    // RSASSA-PKCS1-v1_5 w/ SHA-256\n    -257,\n    // RSASSA-PKCS1-v1_5 w/ SHA-384\n    -258,\n    // RSASSA-PKCS1-v1_5 w/ SHA-512\n    -259,\n    // RSASSA-PKCS1-v1_5 w/ SHA-1 (Deprecated; here for legacy support)\n    -65535,\n];\n/**\n * Set up some default authenticator selection options as per the latest spec:\n * https://www.w3.org/TR/webauthn-2/#dictdef-authenticatorselectioncriteria\n *\n * Helps with some older platforms (e.g. Android 7.0 Nougat) that may not be aware of these\n * defaults.\n */\nconst defaultAuthenticatorSelection = {\n    residentKey: 'preferred',\n    userVerification: 'preferred',\n};\n/**\n * Use the most commonly-supported algorithms\n * See the following:\n *   - https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n *   - https://w3c.github.io/webauthn/#dom-publickeycredentialcreationoptions-pubkeycredparams\n */\nconst defaultSupportedAlgorithmIDs = [-8, -7, -257];\n/**\n * Prepare a value to pass into navigator.credentials.create(...) for authenticator registration\n *\n * **Options:**\n *\n * @param rpName - User-visible, \"friendly\" website/service name\n * @param rpID - Valid domain name (after `https://`)\n * @param userName - User's website-specific username (email, etc...)\n * @param userID **(Optional)** - User's website-specific unique ID. Defaults to generating a random identifier\n * @param challenge **(Optional)** - Random value the authenticator needs to sign and pass back. Defaults to generating a random value\n * @param userDisplayName **(Optional)** - User's actual name. Defaults to `\"\"`\n * @param timeout **(Optional)** - How long (in ms) the user can take to complete attestation. Defaults to `60000`\n * @param attestationType **(Optional)** - Specific attestation statement. Defaults to `\"none\"`\n * @param excludeCredentials **(Optional)** - Authenticators registered by the user so the user can't register the same credential multiple times. Defaults to `[]`\n * @param authenticatorSelection **(Optional)** - Advanced criteria for restricting the types of authenticators that may be used. Defaults to `{ residentKey: 'preferred', userVerification: 'preferred' }`\n * @param extensions **(Optional)** - Additional plugins the authenticator or browser should use during attestation\n * @param supportedAlgorithmIDs **(Optional)** - Array of numeric COSE algorithm identifiers supported for attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms. Defaults to `[-8, -7, -257]`\n */\nexport async function generateRegistrationOptions(options) {\n    const { rpName, rpID, userName, userID, challenge = await generateChallenge(), userDisplayName = '', timeout = 60000, attestationType = 'none', excludeCredentials = [], authenticatorSelection = defaultAuthenticatorSelection, extensions, supportedAlgorithmIDs = defaultSupportedAlgorithmIDs, } = options;\n    /**\n     * Prepare pubKeyCredParams from the array of algorithm ID's\n     */\n    const pubKeyCredParams = supportedAlgorithmIDs.map((id) => ({\n        alg: id,\n        type: 'public-key',\n    }));\n    /**\n     * Capture some of the nuances of how `residentKey` and `requireResidentKey` how either is set\n     * depending on when either is defined in the options\n     */\n    if (authenticatorSelection.residentKey === undefined) {\n        /**\n         * `residentKey`: \"If no value is given then the effective value is `required` if\n         * requireResidentKey is true or `discouraged` if it is false or absent.\"\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-residentkey\n         */\n        if (authenticatorSelection.requireResidentKey) {\n            authenticatorSelection.residentKey = 'required';\n        }\n        else {\n            /**\n             * FIDO Conformance v1.7.2 fails the first test if we do this, even though this is\n             * technically compatible with the WebAuthn L2 spec...\n             */\n            // authenticatorSelection.residentKey = 'discouraged';\n        }\n    }\n    else {\n        /**\n         * `requireResidentKey`: \"Relying Parties SHOULD set it to true if, and only if, residentKey is\n         * set to \"required\"\"\n         *\n         * Spec says this property defaults to `false` so we should still be okay to assign `false` too\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-requireresidentkey\n         */\n        authenticatorSelection.requireResidentKey = authenticatorSelection.residentKey === 'required';\n    }\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */\n    let _challenge = challenge;\n    if (typeof _challenge === 'string') {\n        _challenge = isoUint8Array.fromUTF8String(_challenge);\n    }\n    /**\n     * Explicitly disallow use of strings for userID anymore because `isoBase64URL.fromBuffer()` below\n     * will return an empty string if one gets through!\n     */\n    if (typeof userID === 'string') {\n        throw new Error(`String values for \\`userID\\` are no longer supported. See https://simplewebauthn.dev/docs/advanced/server/custom-user-ids`);\n    }\n    /**\n     * Generate a user ID if one is not provided\n     */\n    let _userID = userID;\n    if (!_userID) {\n        _userID = await generateUserID();\n    }\n    return {\n        challenge: isoBase64URL.fromBuffer(_challenge),\n        rp: {\n            name: rpName,\n            id: rpID,\n        },\n        user: {\n            id: isoBase64URL.fromBuffer(_userID),\n            name: userName,\n            displayName: userDisplayName,\n        },\n        pubKeyCredParams,\n        timeout,\n        attestation: attestationType,\n        excludeCredentials: excludeCredentials.map((cred) => {\n            if (!isoBase64URL.isBase64URL(cred.id)) {\n                throw new Error(`excludeCredential id \"${cred.id}\" is not a valid base64url string`);\n            }\n            return {\n                ...cred,\n                id: isoBase64URL.trimPadding(cred.id),\n                type: 'public-key',\n            };\n        }),\n        authenticatorSelection,\n        extensions: {\n            ...extensions,\n            credProps: true,\n        },\n    };\n}\n", "/**\n * Make sense of Bits 3 and 4 in authenticator indicating:\n *\n * - Whether the credential can be used on multiple devices\n * - Whether the credential is backed up or not\n *\n * Invalid configurations will raise an `Error`\n */\nexport function parseBackupFlags({ be, bs }) {\n    const credentialBackedUp = bs;\n    let credentialDeviceType = 'singleDevice';\n    if (be) {\n        credentialDeviceType = 'multiDevice';\n    }\n    if (credentialDeviceType === 'singleDevice' && credentialBackedUp) {\n        throw new InvalidBackupFlags('Single-device credential indicated that it was backed up, which should be impossible.');\n    }\n    return { credentialDeviceType, credentialBackedUp };\n}\nexport class InvalidBackupFlags extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InvalidBackupFlags';\n    }\n}\n", "import { toHash } from './toHash.js';\nimport { isoUint8Array } from './iso/index.js';\n/**\n * Go through each expected RP ID and try to find one that matches. Returns the unhashed RP ID\n * that matched the hash in the response.\n *\n * Raises an `UnexpectedRPIDHash` error if no match is found\n */\nexport async function matchExpectedRPID(rpIDHash, expectedRPIDs) {\n    try {\n        const matchedRPID = await Promise.any(expectedRPIDs.map((expected) => {\n            return new Promise((resolve, reject) => {\n                toHash(isoUint8Array.fromASCIIString(expected)).then((expectedRPIDHash) => {\n                    if (isoUint8Array.areEqual(rpIDHash, expectedRPIDHash)) {\n                        resolve(expected);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }));\n        return matchedRPID;\n    }\n    catch (err) {\n        const _err = err;\n        // This means no matches were found\n        if (_err.name === 'AggregateError') {\n            throw new UnexpectedRPIDHash();\n        }\n        // An unexpected error occurred\n        throw err;\n    }\n}\nclass UnexpectedRPIDHash extends Error {\n    constructor() {\n        const message = 'Unexpected RP ID hash';\n        super(message);\n        this.name = 'UnexpectedRPIDHash';\n    }\n}\n", "/**\n * GlobalSign Root CA\n *\n * Downloaded from https://pki.goog/roots.pem\n *\n * Valid until 2028-01-28 @ 04:00 PST\n *\n * SHA256 Fingerprint\n * EB:D4:10:40:E4:BB:3E:C7:42:C9:E3:81:D3:1E:F2:A4:1A:48:B6:68:5C:96:E7:CE:F3:C1:DF:6C:D4:33:1C:99\n */\nexport const GlobalSign_Root_CA = `-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkG\nA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv\nb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAw\nMDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxT\naWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaDuaZ\njc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavp\nxy0Sy6scTHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp\n1Wrjsok6Vjk4bwY8iGlbKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdG\nsnUOhugZitVtbNV4FpWi6cgKOOvyJBNPc1STE4U6G7weNLWLBYy5d4ux2x8gkasJ\nU26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrXgzT/LCrBbBlDSgeF59N8\n9iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0B\nAQUFAAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOz\nyj1hTdNGCbM+w6DjY1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE\n38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymP\nAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhHhm4qxFYxldBniYUr+WymXUad\nDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveCX4XSQRjbgbME\nHMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==\n-----END CERTIFICATE-----\n`;\n", "/**\n * Google Hardware Attestation Root 1\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (first entry)\n *\n * Valid until 2026-05-24 @ 09:28 PST\n *\n * SHA256 Fingerprint\n * C1:98:4A:3E:F4:5C:1E:2A:91:85:51:DE:10:60:3C:86:F7:05:1B:22:49:C4:89:1C:AE:32:30:EA:BD:0C:97:D5\n */\nexport const Google_Hardware_Attestation_Root_1 = `-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy\nODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD\nVR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO\nBgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk\nLmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD\nggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB\nPb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m\nqC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY\nDBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm\nQUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u\nJU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD\nCdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy\nZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD\nqwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic\nMDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1\nwDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk\n-----END CERTIFICATE-----\n`;\n/**\n * Google Hardware Attestation Root 2\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (second entry)\n *\n * Valid until 2034-11-18 @ 12:37 PST\n *\n * SHA256 Fingerprint\n * 1E:F1:A0:4B:8B:A5:8A:B9:45:89:AC:49:8C:89:82:A7:83:F2:4E:A7:30:7E:01:59:A0:C3:A7:3B:37:7D:87:CC\n */\nexport const Google_Hardware_Attestation_Root_2 = `-----BEGIN CERTIFICATE-----\nMIIFHDCCAwSgAwIBAgIJANUP8luj8tazMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTkxMTIyMjAzNzU4WhcNMzQxMTE4MjAz\nNzU4WjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaNjMGEwHQYDVR0OBBYEFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMB8GA1Ud\nIwQYMBaAFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMA8GA1UdEwEB/wQFMAMBAf8wDgYD\nVR0PAQH/BAQDAgIEMA0GCSqGSIb3DQEBCwUAA4ICAQBOMaBc8oumXb2voc7XCWnu\nXKhBBK3e2KMGz39t7lA3XXRe2ZLLAkLM5y3J7tURkf5a1SutfdOyXAmeE6SRo83U\nh6WszodmMkxK5GM4JGrnt4pBisu5igXEydaW7qq2CdC6DOGjG+mEkN8/TA6p3cno\nL/sPyz6evdjLlSeJ8rFBH6xWyIZCbrcpYEJzXaUOEaxxXxgYz5/cTiVKN2M1G2ok\nQBUIYSY6bjEL4aUN5cfo7ogP3UvliEo3Eo0YgwuzR2v0KR6C1cZqZJSTnghIC/vA\nD32KdNQ+c3N+vl2OTsUVMC1GiWkngNx1OO1+kXW+YTnnTUOtOIswUP/Vqd5SYgAI\nmMAfY8U9/iIgkQj6T2W6FsScy94IN9fFhE1UtzmLoBIuUFsVXJMTz+Jucth+IqoW\nFua9v1R93/k98p41pjtFX+H8DslVgfP097vju4KDlqN64xV1grw3ZLl4CiOe/A91\noeLm2UHOq6wn3esB4r2EIQKb6jTVGu5sYCcdWpXr0AUVqcABPdgL+H7qJguBw09o\njm6xNIrw2OocrDKsudk/okr/AwqEyPKw9WnMlQgLIKw1rODG2NvU9oR3GVGdMkUB\nZutL8VuFkERQGt6vQ2OCw0sV47VMkuYbacK/xyZFiRcrPJPb41zgbQj9XAEyLKCH\nex0SdDrx+tWUDqG8At2JHA==\n-----END CERTIFICATE-----\n`;\n", "/**\n * Apple WebAuthn Root CA\n *\n * Downloaded from https://www.apple.com/certificateauthority/Apple_WebAuthn_Root_CA.pem\n *\n * Valid until 2045-03-14 @ 17:00 PST\n *\n * SHA256 Fingerprint\n * 09:15:DD:5C:07:A2:8D:B5:49:D1:F6:77:BB:5A:75:D4:BF:BE:95:61:A7:73:42:43:27:76:2E:9E:02:F9:BB:29\n */\nexport const Apple_WebAuthn_Root_CA = `-----BEGIN CERTIFICATE-----\nMIICEjCCAZmgAwIBAgIQaB0BbHo84wIlpQGUKEdXcTAKBggqhkjOPQQDAzBLMR8w\nHQYDVQQDDBZBcHBsZSBXZWJBdXRobiBSb290IENBMRMwEQYDVQQKDApBcHBsZSBJ\nbmMuMRMwEQYDVQQIDApDYWxpZm9ybmlhMB4XDTIwMDMxODE4MjEzMloXDTQ1MDMx\nNTAwMDAwMFowSzEfMB0GA1UEAwwWQXBwbGUgV2ViQXV0aG4gUm9vdCBDQTETMBEG\nA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAGByqGSM49\nAgEGBSuBBAAiA2IABCJCQ2pTVhzjl4Wo6IhHtMSAzO2cv+H9DQKev3//fG59G11k\nxu9eI0/7o6V5uShBpe1u6l6mS19S1FEh6yGljnZAJ+2GNP1mi/YK2kSXIuTHjxA/\npcoRf7XkOtO4o1qlcaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUJtdk\n2cV4wlpn0afeaxLQG2PxxtcwDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMDA2cA\nMGQCMFrZ+9DsJ1PW9hfNdBywZDsWDbWFp28it1d/5w2RPkRX3Bbn/UbDTNLx7Jr3\njAGGiQIwHFj+dJZYUJR786osByBelJYsVZd2GbHQu209b5RCmGQ21gpSAk9QZW4B\n1bWeT0vT\n-----END CERTIFICATE-----\n`;\n", "/**\n * GlobalSign Root CA - R3\n *\n * Downloaded from https://valid.r3.roots.globalsign.com/\n *\n * Valid until 2029-03-18 @ 00:00 PST\n *\n * SHA256 Fingerprint\n * CB:B5:22:D7:B7:F1:27:AD:6A:01:13:86:5B:DF:1C:D4:10:2E:7D:07:59:AF:63:5A:7C:F4:72:0D:C9:63:C5:3B\n */\nexport const GlobalSign_Root_CA_R3 = `-----BEGIN CERTIFICATE-----\n MIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\n A1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\n Z24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\n MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\n A1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\n hvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\n RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\n gHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\n KPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\n QQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\n XriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\n DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\n LkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\n RUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\n jjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n 6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\n mcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\n Mx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\n WD9f\n -----END CERTIFICATE-----\n `;\n", "import { convertCertBufferToPEM } from '../helpers/convertCertBufferToPEM.js';\nimport { GlobalSign_Root_CA } from './defaultRootCerts/android-safetynet.js';\nimport { Google_Hardware_Attestation_Root_1, Google_Hardware_Attestation_Root_2, } from './defaultRootCerts/android-key.js';\nimport { Apple_WebAuthn_Root_CA } from './defaultRootCerts/apple.js';\nimport { GlobalSign_Root_CA_R3 } from './defaultRootCerts/mds.js';\nclass BaseSettingsService {\n    constructor() {\n        // Certificates are stored as PEM-formatted strings\n        Object.defineProperty(this, \"pemCertificates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pemCertificates = new Map();\n    }\n    /**\n     * Set potential root certificates for attestation formats that use them. Root certs will be tried\n     * one-by-one when validating a certificate path.\n     *\n     * Certificates can be specified as a raw `Buffer`, or as a PEM-formatted string. If a\n     * `Buffer` is passed in it will be converted to PEM format.\n     */\n    setRootCertificates(opts) {\n        const { identifier, certificates } = opts;\n        const newCertificates = [];\n        for (const cert of certificates) {\n            if (cert instanceof Uint8Array) {\n                newCertificates.push(convertCertBufferToPEM(cert));\n            }\n            else {\n                newCertificates.push(cert);\n            }\n        }\n        this.pemCertificates.set(identifier, newCertificates);\n    }\n    /**\n     * Get any registered root certificates for the specified attestation format\n     */\n    getRootCertificates(opts) {\n        const { identifier } = opts;\n        return this.pemCertificates.get(identifier) ?? [];\n    }\n}\nexport const SettingsService = new BaseSettingsService();\n// Initialize default certificates\nSettingsService.setRootCertificates({\n    identifier: 'android-key',\n    certificates: [\n        Google_Hardware_Attestation_Root_1,\n        Google_Hardware_Attestation_Root_2,\n    ],\n});\nSettingsService.setRootCertificates({\n    identifier: 'android-safetynet',\n    certificates: [GlobalSign_Root_CA],\n});\nSettingsService.setRootCertificates({\n    identifier: 'apple',\n    certificates: [Apple_WebAuthn_Root_CA],\n});\nSettingsService.setRootCertificates({\n    identifier: 'mds',\n    certificates: [GlobalSign_Root_CA_R3],\n});\n", "import { convertCOSEtoPKCS } from '../../helpers/convertCOSEtoPKCS.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { verifySignature } from '../../helpers/verifySignature.js';\nimport { isoUint8Array } from '../../helpers/iso/index.js';\nimport { COSEALG } from '../../helpers/cose.js';\n/**\n * Verify an attestation response with fmt 'fido-u2f'\n */\nexport async function verifyAttestationFIDOU2F(options) {\n    const { attStmt, clientDataHash, rpIdHash, credentialID, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const reservedByte = Uint8Array.from([0x00]);\n    const publicKey = convertCOSEtoPKCS(credentialPublicKey);\n    const signatureBase = isoUint8Array.concat([\n        reservedByte,\n        rpIdHash,\n        clientDataHash,\n        credentialID,\n        publicKey,\n    ]);\n    const sig = attStmt.get('sig');\n    const x5c = attStmt.get('x5c');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (FIDOU2F)');\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (FIDOU2F)');\n    }\n    // FIDO spec says that aaguid _must_ equal 0x00 here to be legit\n    const aaguidToHex = Number.parseInt(isoUint8Array.toHex(aaguid), 16);\n    if (aaguidToHex !== 0x00) {\n        throw new Error(`AAGUID \"${aaguidToHex}\" was not expected value`);\n    }\n    try {\n        // Try validating the certificate path using the root certificates set via SettingsService\n        await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (FIDOU2F)`);\n    }\n    return verifySignature({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: COSEALG.ES256,\n    });\n}\n", "import { AsnParser, OctetString } from '../deps.js';\nimport { isoUint8Array } from './iso/index.js';\n/**\n * Attestation Certificate Extension OID: `id-fido-gen-ce-aaguid`\n *\n * Sourced from https://fidoalliance.org/specs/fido-v2.0-ps-20150904/fido-key-attestation-v2.0-ps-20150904.html#verifying-an-attestation-statement\n */\nconst id_fido_gen_ce_aaguid = '1.3.6.1.4.1.45724.1.1.4';\n/**\n * Look for the id-fido-gen-ce-aaguid certificate extension. If it's present then check it against\n * the attestation statement AAGUID.\n */\nexport function validateExtFIDOGenCEAAGUID(certExtensions, aaguid) {\n    // The certificate had no extensions so there's nothing to validate\n    if (!certExtensions) {\n        return true;\n    }\n    const extFIDOGenCEAAGUID = certExtensions.find((ext) => ext.extnID === id_fido_gen_ce_aaguid);\n    // The extension isn't present so there's nothing to validate\n    if (!extFIDOGenCEAAGUID) {\n        return true;\n    }\n    // Parse the extension value\n    const parsedExtFIDOGenCEAAGUID = AsnParser.parse(extFIDOGenCEAAGUID.extnValue, OctetString);\n    const extValue = new Uint8Array(parsedExtFIDOGenCEAAGUID.buffer);\n    // Compare the two values\n    const aaguidAndExtAreEqual = isoUint8Array.areEqual(aaguid, extValue);\n    if (!aaguidAndExtAreEqual) {\n        const _debugExtHex = isoUint8Array.toHex(extValue);\n        const _debugAAGUIDHex = isoUint8Array.toHex(aaguid);\n        throw new Error(`Certificate extension id-fido-gen-ce-aaguid (${id_fido_gen_ce_aaguid}) value of \"${_debugExtHex}\" was present but not equal to attestation statement AAGUID value of \"${_debugAAGUIDHex}\"`);\n    }\n    return true;\n}\n", "// import { debug, Debugger } from '../deps.ts';\n// const defaultLogger = debug('SimpleWebAuthn');\n/**\n * Generate an instance of a `debug` logger that extends off of the \"simplewebauthn\" namespace for\n * consistent naming.\n *\n * See https://www.npmjs.com/package/debug for information on how to control logging output when\n * using @simplewebauthn/server\n *\n * Example:\n *\n * ```\n * const log = getLogger('mds');\n * log('hello'); // simplewebauthn:mds hello +0ms\n * ```\n */\nexport function getLogger(_name) {\n    // This is a noop for now while I search for a better debug logger technique\n    return (_message, ..._rest) => { };\n}\n", "import { isoBase64URL } from '../helpers/iso/index.js';\n/**\n * Process a JWT into Javascript-friendly data structures\n */\nexport function parseJWT(jwt) {\n    const parts = jwt.split('.');\n    return [\n        JSON.parse(isoBase64URL.toUTF8String(parts[0])),\n        JSON.parse(isoBase64URL.toUTF8String(parts[1])),\n        parts[2],\n    ];\n}\n", "import { convertX509PublicKeyToCOSE } from '../helpers/convertX509PublicKeyToCOSE.js';\nimport { isoBase64URL, isoUint8Array } from '../helpers/iso/index.js';\nimport { COSEALG, COSEKEYS, isCOSEPublicKeyEC2, isCOSEPublicKeyRSA } from '../helpers/cose.js';\nimport { verifyEC2 } from '../helpers/iso/isoCrypto/verifyEC2.js';\nimport { verifyRSA } from '../helpers/iso/isoCrypto/verifyRSA.js';\n/**\n * Lightweight verification for FIDO MDS JWTs. Supports use of EC2 and RSA.\n *\n * If this ever needs to support more JWS algorithms, here's the list of them:\n *\n * https://www.rfc-editor.org/rfc/rfc7518.html#section-3.1\n *\n * (Pulled from https://www.rfc-editor.org/rfc/rfc7515#section-4.1.1)\n */\nexport function verifyJWT(jwt, leafCert) {\n    const [header, payload, signature] = jwt.split('.');\n    const certCOSE = convertX509PublicKeyToCOSE(leafCert);\n    const data = isoUint8Array.fromUTF8String(`${header}.${payload}`);\n    const signatureBytes = isoBase64URL.toBuffer(signature);\n    if (isCOSEPublicKeyEC2(certCOSE)) {\n        return verifyEC2({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n            shaHashOverride: COSEALG.ES256,\n        });\n    }\n    else if (isCOSEPublicKeyRSA(certCOSE)) {\n        return verifyRSA({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n        });\n    }\n    const kty = certCOSE.get(COSEKEYS.kty);\n    throw new Error(`JWT verification with public key of kty ${kty} is not supported by this method`);\n}\n", "import { validateCertificatePath } from '../helpers/validateCertificatePath.js';\nimport { convertCertBufferToPEM } from '../helpers/convertCertBufferToPEM.js';\nimport { convertAAGUIDToString } from '../helpers/convertAAGUIDToString.js';\nimport { SettingsService } from './settingsService.js';\nimport { getLogger } from '../helpers/logging.js';\nimport { convertPEMToBytes } from '../helpers/convertPEMToBytes.js';\nimport { fetch } from '../helpers/fetch.js';\nimport { parseJWT } from '../metadata/parseJWT.js';\nimport { verifyJWT } from '../metadata/verifyJWT.js';\nconst defaultURLMDS = 'https://mds.fidoalliance.org/'; // v3\nvar SERVICE_STATE;\n(function (SERVICE_STATE) {\n    SERVICE_STATE[SERVICE_STATE[\"DISABLED\"] = 0] = \"DISABLED\";\n    SERVICE_STATE[SERVICE_STATE[\"REFRESHING\"] = 1] = \"REFRESHING\";\n    SERVICE_STATE[SERVICE_STATE[\"READY\"] = 2] = \"READY\";\n})(SERVICE_STATE || (SERVICE_STATE = {}));\nconst log = getLogger('MetadataService');\n/**\n * A basic service for coordinating interactions with the FIDO Metadata Service. This includes BLOB\n * download and parsing, and on-demand requesting and caching of individual metadata statements.\n *\n * https://fidoalliance.org/metadata/\n */\nexport class BaseMetadataService {\n    constructor() {\n        Object.defineProperty(this, \"mdsCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"statementCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: SERVICE_STATE.DISABLED\n        });\n        Object.defineProperty(this, \"verificationMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'strict'\n        });\n    }\n    /**\n     * Prepare the service to handle remote MDS servers and/or cache local metadata statements.\n     *\n     * **Options:**\n     *\n     * @param opts.mdsServers An array of URLs to FIDO Alliance Metadata Service\n     * (version 3.0)-compatible servers. Defaults to the official FIDO MDS server\n     * @param opts.statements An array of local metadata statements\n     * @param opts.verificationMode How MetadataService will handle unregistered AAGUIDs. Defaults to\n     * `\"strict\"` which throws errors during registration response verification when an\n     * unregistered AAGUID is encountered. Set to `\"permissive\"` to allow registration by\n     * authenticators with unregistered AAGUIDs\n     */\n    async initialize(opts = {}) {\n        const { mdsServers = [defaultURLMDS], statements, verificationMode } = opts;\n        this.setState(SERVICE_STATE.REFRESHING);\n        // If metadata statements are provided, load them into the cache first\n        if (statements?.length) {\n            let statementsAdded = 0;\n            statements.forEach((statement) => {\n                // Only cache statements that are for FIDO2-compatible authenticators\n                if (statement.aaguid) {\n                    this.statementCache[statement.aaguid] = {\n                        entry: {\n                            metadataStatement: statement,\n                            statusReports: [],\n                            timeOfLastStatusChange: '1970-01-01',\n                        },\n                        url: '',\n                    };\n                    statementsAdded += 1;\n                }\n            });\n            log(`Cached ${statementsAdded} local statements`);\n        }\n        // If MDS servers are provided, then process them and add their statements to the cache\n        if (mdsServers?.length) {\n            // Get a current count so we know how many new statements we've added from MDS servers\n            const currentCacheCount = Object.keys(this.statementCache).length;\n            let numServers = mdsServers.length;\n            for (const url of mdsServers) {\n                try {\n                    await this.downloadBlob({\n                        url,\n                        no: 0,\n                        nextUpdate: new Date(0),\n                    });\n                }\n                catch (err) {\n                    // Notify of the error and move on\n                    log(`Could not download BLOB from ${url}:`, err);\n                    numServers -= 1;\n                }\n            }\n            // Calculate the difference to get the total number of new statements we successfully added\n            const newCacheCount = Object.keys(this.statementCache).length;\n            const cacheDiff = newCacheCount - currentCacheCount;\n            log(`Cached ${cacheDiff} statements from ${numServers} metadata server(s)`);\n        }\n        if (verificationMode) {\n            this.verificationMode = verificationMode;\n        }\n        this.setState(SERVICE_STATE.READY);\n    }\n    /**\n     * Get a metadata statement for a given AAGUID.\n     *\n     * This method will coordinate updating the cache as per the `nextUpdate` property in the initial\n     * BLOB download.\n     */\n    async getStatement(aaguid) {\n        if (this.state === SERVICE_STATE.DISABLED) {\n            return;\n        }\n        if (!aaguid) {\n            return;\n        }\n        if (aaguid instanceof Uint8Array) {\n            aaguid = convertAAGUIDToString(aaguid);\n        }\n        // If a cache refresh is in progress then pause this until the service is ready\n        await this.pauseUntilReady();\n        // Try to grab a cached statement\n        const cachedStatement = this.statementCache[aaguid];\n        if (!cachedStatement) {\n            if (this.verificationMode === 'strict') {\n                // FIDO conformance requires RP's to only support registered AAGUID's\n                throw new Error(`No metadata statement found for aaguid \"${aaguid}\"`);\n            }\n            // Allow registration verification to continue without using metadata\n            return;\n        }\n        // If the statement points to an MDS API, check the MDS' nextUpdate to see if we need to refresh\n        if (cachedStatement.url) {\n            const mds = this.mdsCache[cachedStatement.url];\n            const now = new Date();\n            if (now > mds.nextUpdate) {\n                try {\n                    this.setState(SERVICE_STATE.REFRESHING);\n                    await this.downloadBlob(mds);\n                }\n                finally {\n                    this.setState(SERVICE_STATE.READY);\n                }\n            }\n        }\n        const { entry } = cachedStatement;\n        // Check to see if the this aaguid has a status report with a \"compromised\" status\n        for (const report of entry.statusReports) {\n            const { status } = report;\n            if (status === 'USER_VERIFICATION_BYPASS' ||\n                status === 'ATTESTATION_KEY_COMPROMISE' ||\n                status === 'USER_KEY_REMOTE_COMPROMISE' ||\n                status === 'USER_KEY_PHYSICAL_COMPROMISE') {\n                throw new Error(`Detected compromised aaguid \"${aaguid}\"`);\n            }\n        }\n        return entry.metadataStatement;\n    }\n    /**\n     * Download and process the latest BLOB from MDS\n     */\n    async downloadBlob(mds) {\n        const { url, no } = mds;\n        // Get latest \"BLOB\" (FIDO's terminology, not mine)\n        const resp = await fetch(url);\n        const data = await resp.text();\n        // Parse the JWT\n        const parsedJWT = parseJWT(data);\n        const header = parsedJWT[0];\n        const payload = parsedJWT[1];\n        if (payload.no <= no) {\n            // From FIDO MDS docs: \"also ignore the file if its number (no) is less or equal to the\n            // number of the last BLOB cached locally.\"\n            throw new Error(`Latest BLOB no. \"${payload.no}\" is not greater than previous ${no}`);\n        }\n        const headerCertsPEM = header.x5c.map(convertCertBufferToPEM);\n        try {\n            // Validate the certificate chain\n            const rootCerts = SettingsService.getRootCertificates({\n                identifier: 'mds',\n            });\n            await validateCertificatePath(headerCertsPEM, rootCerts);\n        }\n        catch (error) {\n            const _error = error;\n            // From FIDO MDS docs: \"ignore the file if the chain cannot be verified or if one of the\n            // chain certificates is revoked\"\n            throw new Error(`BLOB certificate path could not be validated: ${_error.message}`);\n        }\n        // Verify the BLOB JWT signature\n        const leafCert = headerCertsPEM[0];\n        const verified = await verifyJWT(data, convertPEMToBytes(leafCert));\n        if (!verified) {\n            // From FIDO MDS docs: \"The FIDO Server SHOULD ignore the file if the signature is invalid.\"\n            throw new Error('BLOB signature could not be verified');\n        }\n        // Cache statements for FIDO2 devices\n        for (const entry of payload.entries) {\n            // Only cache entries with an `aaguid`\n            if (entry.aaguid) {\n                this.statementCache[entry.aaguid] = { entry, url };\n            }\n        }\n        // Remember info about the server so we can refresh later\n        const [year, month, day] = payload.nextUpdate.split('-');\n        this.mdsCache[url] = {\n            ...mds,\n            // Store the payload `no` to make sure we're getting the next BLOB in the sequence\n            no: payload.no,\n            // Convert the nextUpdate property into a Date so we can determine when to re-download\n            nextUpdate: new Date(parseInt(year, 10), \n            // Months need to be zero-indexed\n            parseInt(month, 10) - 1, parseInt(day, 10)),\n        };\n    }\n    /**\n     * A helper method to pause execution until the service is ready\n     */\n    pauseUntilReady() {\n        if (this.state === SERVICE_STATE.READY) {\n            return new Promise((resolve) => {\n                resolve();\n            });\n        }\n        // State isn't ready, so set up polling\n        const readyPromise = new Promise((resolve, reject) => {\n            const totalTimeoutMS = 70000;\n            const intervalMS = 100;\n            let iterations = totalTimeoutMS / intervalMS;\n            // Check service state every `intervalMS` milliseconds\n            const intervalID = globalThis.setInterval(() => {\n                if (iterations < 1) {\n                    clearInterval(intervalID);\n                    reject(`State did not become ready in ${totalTimeoutMS / 1000} seconds`);\n                }\n                else if (this.state === SERVICE_STATE.READY) {\n                    clearInterval(intervalID);\n                    resolve();\n                }\n                iterations -= 1;\n            }, intervalMS);\n        });\n        return readyPromise;\n    }\n    /**\n     * Report service status on change\n     */\n    setState(newState) {\n        this.state = newState;\n        if (newState === SERVICE_STATE.DISABLED) {\n            log('MetadataService is DISABLED');\n        }\n        else if (newState === SERVICE_STATE.REFRESHING) {\n            log('MetadataService is REFRESHING');\n        }\n        else if (newState === SERVICE_STATE.READY) {\n            log('MetadataService is READY');\n        }\n    }\n}\n// Export a service singleton\nexport const MetadataService = new BaseMetadataService();\n", "import { convertCertBufferToPEM } from '../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../helpers/validateCertificatePath.js';\nimport { decodeCredentialPublicKey } from '../helpers/decodeCredentialPublicKey.js';\nimport { COSEKEYS, COSEKTY, isCOSEPublicKeyEC2 } from '../helpers/cose.js';\n/**\n * Match properties of the authenticator's attestation statement against expected values as\n * registered with the FIDO Alliance Metadata Service\n */\nexport async function verifyAttestationWithMetadata({ statement, credentialPublicKey, x5c, attestationStatementAlg, }) {\n    const { authenticationAlgorithms, authenticatorGetInfo, attestationRootCertificates, } = statement;\n    // Make sure the alg in the attestation statement matches one of the ones specified in metadata\n    const keypairCOSEAlgs = new Set();\n    authenticationAlgorithms.forEach((algSign) => {\n        // Map algSign string to { kty, alg, crv }\n        const algSignCOSEINFO = algSignToCOSEInfoMap[algSign];\n        // Keeping this statement here just in case MDS returns something unexpected\n        if (algSignCOSEINFO) {\n            keypairCOSEAlgs.add(algSignCOSEINFO);\n        }\n    });\n    // Extract the public key's COSE info for comparison\n    const decodedPublicKey = decodeCredentialPublicKey(credentialPublicKey);\n    const kty = decodedPublicKey.get(COSEKEYS.kty);\n    const alg = decodedPublicKey.get(COSEKEYS.alg);\n    if (!kty) {\n        throw new Error('Credential public key was missing kty');\n    }\n    if (!alg) {\n        throw new Error('Credential public key was missing alg');\n    }\n    if (!kty) {\n        throw new Error('Credential public key was missing kty');\n    }\n    // Assume everything is a number because these values should be\n    const publicKeyCOSEInfo = { kty, alg };\n    if (isCOSEPublicKeyEC2(decodedPublicKey)) {\n        const crv = decodedPublicKey.get(COSEKEYS.crv);\n        publicKeyCOSEInfo.crv = crv;\n    }\n    /**\n     * Attempt to match the credential public key's algorithm to one specified in the device's\n     * metadata\n     */\n    let foundMatch = false;\n    for (const keypairAlg of keypairCOSEAlgs) {\n        // Make sure algorithm and key type match\n        if (keypairAlg.alg === publicKeyCOSEInfo.alg &&\n            keypairAlg.kty === publicKeyCOSEInfo.kty) {\n            // If not an RSA keypair then make sure curve numbers match too\n            if ((keypairAlg.kty === COSEKTY.EC2 || keypairAlg.kty === COSEKTY.OKP) &&\n                keypairAlg.crv === publicKeyCOSEInfo.crv) {\n                foundMatch = true;\n            }\n            else {\n                // We've matched an RSA public key's properties\n                foundMatch = true;\n            }\n        }\n        if (foundMatch) {\n            break;\n        }\n    }\n    // Make sure the public key is one of the allowed algorithms\n    if (!foundMatch) {\n        /**\n         * Craft some useful error output from the MDS algorithms\n         *\n         * Example:\n         *\n         * ```\n         * [\n         *   'rsassa_pss_sha256_raw' (COSE info: { kty: 3, alg: -37 }),\n         *   'secp256k1_ecdsa_sha256_raw' (COSE info: { kty: 2, alg: -47, crv: 8 })\n         * ]\n         * ```\n         */\n        const debugMDSAlgs = authenticationAlgorithms.map((algSign) => `'${algSign}' (COSE info: ${stringifyCOSEInfo(algSignToCOSEInfoMap[algSign])})`);\n        const strMDSAlgs = JSON.stringify(debugMDSAlgs, null, 2).replace(/\"/g, '');\n        /**\n         * Construct useful error output about the public key\n         */\n        const strPubKeyAlg = stringifyCOSEInfo(publicKeyCOSEInfo);\n        throw new Error(`Public key parameters ${strPubKeyAlg} did not match any of the following metadata algorithms:\\n${strMDSAlgs}`);\n    }\n    /**\n     * Confirm the attestation statement's algorithm is one supported according to metadata\n     */\n    if (attestationStatementAlg !== undefined &&\n        authenticatorGetInfo?.algorithms !== undefined) {\n        const getInfoAlgs = authenticatorGetInfo.algorithms.map((_alg) => _alg.alg);\n        if (getInfoAlgs.indexOf(attestationStatementAlg) < 0) {\n            throw new Error(`Attestation statement alg ${attestationStatementAlg} did not match one of ${getInfoAlgs}`);\n        }\n    }\n    // Prepare to check the certificate chain\n    const authenticatorCerts = x5c.map(convertCertBufferToPEM);\n    const statementRootCerts = attestationRootCertificates.map(convertCertBufferToPEM);\n    /**\n     * If an authenticator returns exactly one certificate in its x5c, and that cert is found in the\n     * metadata statement then the authenticator is \"self-referencing\". In this case we forego\n     * certificate chain validation.\n     */\n    let authenticatorIsSelfReferencing = false;\n    if (authenticatorCerts.length === 1 &&\n        statementRootCerts.indexOf(authenticatorCerts[0]) >= 0) {\n        authenticatorIsSelfReferencing = true;\n    }\n    if (!authenticatorIsSelfReferencing) {\n        try {\n            await validateCertificatePath(authenticatorCerts, statementRootCerts);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`Could not validate certificate path with any metadata root certificates: ${_err.message}`);\n        }\n    }\n    return true;\n}\n/**\n * Convert ALG_SIGN values to COSE info\n *\n * Values pulled from `ALG_KEY_COSE` definitions in the FIDO Registry of Predefined Values\n *\n * https://fidoalliance.org/specs/common-specs/fido-registry-v2.2-ps-20220523.html#authentication-algorithms\n */\nexport const algSignToCOSEInfoMap = {\n    secp256r1_ecdsa_sha256_raw: { kty: 2, alg: -7, crv: 1 },\n    secp256r1_ecdsa_sha256_der: { kty: 2, alg: -7, crv: 1 },\n    rsassa_pss_sha256_raw: { kty: 3, alg: -37 },\n    rsassa_pss_sha256_der: { kty: 3, alg: -37 },\n    secp256k1_ecdsa_sha256_raw: { kty: 2, alg: -47, crv: 8 },\n    secp256k1_ecdsa_sha256_der: { kty: 2, alg: -47, crv: 8 },\n    rsassa_pss_sha384_raw: { kty: 3, alg: -38 },\n    rsassa_pkcsv15_sha256_raw: { kty: 3, alg: -257 },\n    rsassa_pkcsv15_sha384_raw: { kty: 3, alg: -258 },\n    rsassa_pkcsv15_sha512_raw: { kty: 3, alg: -259 },\n    rsassa_pkcsv15_sha1_raw: { kty: 3, alg: -65535 },\n    secp384r1_ecdsa_sha384_raw: { kty: 2, alg: -35, crv: 2 },\n    secp512r1_ecdsa_sha256_raw: { kty: 2, alg: -36, crv: 3 },\n    ed25519_eddsa_sha512_raw: { kty: 1, alg: -8, crv: 6 },\n};\n/**\n * A helper to format COSEInfo a little nicer than we can achieve with JSON.stringify()\n *\n * Input: `{ \"kty\": 3, \"alg\": -257 }`\n *\n * Output: `\"{ kty: 3, alg: -257 }\"`\n */\nfunction stringifyCOSEInfo(info) {\n    const { kty, alg, crv } = info;\n    let toReturn = '';\n    if (kty !== COSEKTY.RSA) {\n        toReturn = `{ kty: ${kty}, alg: ${alg}, crv: ${crv} }`;\n    }\n    else {\n        toReturn = `{ kty: ${kty}, alg: ${alg} }`;\n    }\n    return toReturn;\n}\n", "import { isCOSEAlg } from '../../helpers/cose.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { getCertificateInfo } from '../../helpers/getCertificateInfo.js';\nimport { verifySignature } from '../../helpers/verifySignature.js';\nimport { isoUint8Array } from '../../helpers/iso/index.js';\nimport { validateExtFIDOGenCEAAGUID } from '../../helpers/validateExtFIDOGenCEAAGUID.js';\nimport { MetadataService } from '../../services/metadataService.js';\nimport { verifyAttestationWithMetadata } from '../../metadata/verifyAttestationWithMetadata.js';\n/**\n * Verify an attestation response with fmt 'packed'\n */\nexport async function verifyAttestationPacked(options) {\n    const { attStmt, clientDataHash, authData, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const sig = attStmt.get('sig');\n    const x5c = attStmt.get('x5c');\n    const alg = attStmt.get('alg');\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (Packed)');\n    }\n    if (!alg) {\n        throw new Error('Attestation statement did not contain alg (Packed)');\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (Packed)`);\n    }\n    const signatureBase = isoUint8Array.concat([authData, clientDataHash]);\n    let verified = false;\n    if (x5c) {\n        const { subject, basicConstraintsCA, version, notBefore, notAfter, parsedCertificate, } = getCertificateInfo(x5c[0]);\n        const { OU, CN, O, C } = subject;\n        if (OU !== 'Authenticator Attestation') {\n            throw new Error('Certificate OU was not \"Authenticator Attestation\" (Packed|Full)');\n        }\n        if (!CN) {\n            throw new Error('Certificate CN was empty (Packed|Full)');\n        }\n        if (!O) {\n            throw new Error('Certificate O was empty (Packed|Full)');\n        }\n        if (!C || C.length !== 2) {\n            throw new Error('Certificate C was not two-character ISO 3166 code (Packed|Full)');\n        }\n        if (basicConstraintsCA) {\n            throw new Error('Certificate basic constraints CA was not `false` (Packed|Full)');\n        }\n        if (version !== 2) {\n            throw new Error('Certificate version was not `3` (ASN.1 value of 2) (Packed|Full)');\n        }\n        let now = new Date();\n        if (notBefore > now) {\n            throw new Error(`Certificate not good before \"${notBefore.toString()}\" (Packed|Full)`);\n        }\n        now = new Date();\n        if (notAfter < now) {\n            throw new Error(`Certificate not good after \"${notAfter.toString()}\" (Packed|Full)`);\n        }\n        // Validate attestation statement AAGUID against leaf cert AAGUID\n        try {\n            await validateExtFIDOGenCEAAGUID(parsedCertificate.tbsCertificate.extensions, aaguid);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (Packed|Full)`);\n        }\n        // If available, validate attestation alg and x5c with info in the metadata statement\n        const statement = await MetadataService.getStatement(aaguid);\n        if (statement) {\n            // The presence of x5c means this is a full attestation. Check to see if attestationTypes\n            // includes packed attestations.\n            if (statement.attestationTypes.indexOf('basic_full') < 0) {\n                throw new Error('Metadata does not indicate support for full attestations (Packed|Full)');\n            }\n            try {\n                await verifyAttestationWithMetadata({\n                    statement,\n                    credentialPublicKey,\n                    x5c,\n                    attestationStatementAlg: alg,\n                });\n            }\n            catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        else {\n            try {\n                // Try validating the certificate path using the root certificates set via SettingsService\n                await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n            }\n            catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        verified = await verifySignature({\n            signature: sig,\n            data: signatureBase,\n            x509Certificate: x5c[0],\n        });\n    }\n    else {\n        verified = await verifySignature({\n            signature: sig,\n            data: signatureBase,\n            credentialPublicKey,\n            hashAlgorithm: alg,\n        });\n    }\n    return verified;\n}\n", "import { toHash } from '../../helpers/toHash.js';\nimport { verifySignature } from '../../helpers/verifySignature.js';\nimport { getCertificateInfo } from '../../helpers/getCertificateInfo.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { isoBase64URL, isoUint8Array } from '../../helpers/iso/index.js';\nimport { MetadataService } from '../../services/metadataService.js';\nimport { verifyAttestationWithMetadata } from '../../metadata/verifyAttestationWithMetadata.js';\n/**\n * Verify an attestation response with fmt 'android-safetynet'\n */\nexport async function verifyAttestationAndroidSafetyNet(options) {\n    const { attStmt, clientDataHash, authData, aaguid, rootCertificates, verifyTimestampMS = true, credentialPublicKey, } = options;\n    const alg = attStmt.get('alg');\n    const response = attStmt.get('response');\n    const ver = attStmt.get('ver');\n    if (!ver) {\n        throw new Error('No ver value in attestation (SafetyNet)');\n    }\n    if (!response) {\n        throw new Error('No response was included in attStmt by authenticator (SafetyNet)');\n    }\n    // Prepare to verify a JWT\n    const jwt = isoUint8Array.toUTF8String(response);\n    const jwtParts = jwt.split('.');\n    const HEADER = JSON.parse(isoBase64URL.toUTF8String(jwtParts[0]));\n    const PAYLOAD = JSON.parse(isoBase64URL.toUTF8String(jwtParts[1]));\n    const SIGNATURE = jwtParts[2];\n    /**\n     * START Verify PAYLOAD\n     */\n    const { nonce, ctsProfileMatch, timestampMs } = PAYLOAD;\n    if (verifyTimestampMS) {\n        // Make sure timestamp is in the past\n        let now = Date.now();\n        if (timestampMs > Date.now()) {\n            throw new Error(`Payload timestamp \"${timestampMs}\" was later than \"${now}\" (SafetyNet)`);\n        }\n        // Consider a SafetyNet attestation valid within a minute of it being performed\n        const timestampPlusDelay = timestampMs + 60 * 1000;\n        now = Date.now();\n        if (timestampPlusDelay < now) {\n            throw new Error(`Payload timestamp \"${timestampPlusDelay}\" has expired (SafetyNet)`);\n        }\n    }\n    const nonceBase = isoUint8Array.concat([authData, clientDataHash]);\n    const nonceBuffer = await toHash(nonceBase);\n    const expectedNonce = isoBase64URL.fromBuffer(nonceBuffer, 'base64');\n    if (nonce !== expectedNonce) {\n        throw new Error('Could not verify payload nonce (SafetyNet)');\n    }\n    if (!ctsProfileMatch) {\n        throw new Error('Could not verify device integrity (SafetyNet)');\n    }\n    /**\n     * END Verify PAYLOAD\n     */\n    /**\n     * START Verify Header\n     */\n    // `HEADER.x5c[0]` is definitely a base64 string\n    const leafCertBuffer = isoBase64URL.toBuffer(HEADER.x5c[0], 'base64');\n    const leafCertInfo = getCertificateInfo(leafCertBuffer);\n    const { subject } = leafCertInfo;\n    // Ensure the certificate was issued to this hostname\n    // See https://developer.android.com/training/safetynet/attestation#verify-attestation-response\n    if (subject.CN !== 'attest.android.com') {\n        throw new Error('Certificate common name was not \"attest.android.com\" (SafetyNet)');\n    }\n    const statement = await MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await verifyAttestationWithMetadata({\n                statement,\n                credentialPublicKey,\n                x5c: HEADER.x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await validateCertificatePath(HEADER.x5c.map(convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    /**\n     * END Verify Header\n     */\n    /**\n     * START Verify Signature\n     */\n    const signatureBaseBuffer = isoUint8Array.fromUTF8String(`${jwtParts[0]}.${jwtParts[1]}`);\n    const signatureBuffer = isoBase64URL.toBuffer(SIGNATURE);\n    const verified = await verifySignature({\n        signature: signatureBuffer,\n        data: signatureBaseBuffer,\n        x509Certificate: leafCertBuffer,\n    });\n    /**\n     * END Verify Signature\n     */\n    return verified;\n}\n", "// deno-lint-ignore-file no-dupe-keys\n/**\n * A whole lotta domain knowledge is captured here, with hazy connections to source\n * documents. Good places to start searching for more info on these values are the\n * following Trusted Computing Group TPM Library docs linked in the WebAuthn API:\n *\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-1-Architecture-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-3-Commands-01.38.pdf\n */\n/**\n * 6.9 TPM_ST (Structure Tags)\n */\nexport const TPM_ST = {\n    0x00c4: 'TPM_ST_RSP_COMMAND',\n    0x8000: 'TPM_ST_NULL',\n    0x8001: 'TPM_ST_NO_SESSIONS',\n    0x8002: 'TPM_ST_SESSIONS',\n    0x8014: 'TPM_ST_ATTEST_NV',\n    0x8015: 'TPM_ST_ATTEST_COMMAND_AUDIT',\n    0x8016: 'TPM_ST_ATTEST_SESSION_AUDIT',\n    0x8017: 'TPM_ST_ATTEST_CERTIFY',\n    0x8018: 'TPM_ST_ATTEST_QUOTE',\n    0x8019: 'TPM_ST_ATTEST_TIME',\n    0x801a: 'TPM_ST_ATTEST_CREATION',\n    0x8021: 'TPM_ST_CREATION',\n    0x8022: 'TPM_ST_VERIFIED',\n    0x8023: 'TPM_ST_AUTH_SECRET',\n    0x8024: 'TPM_ST_HASHCHECK',\n    0x8025: 'TPM_ST_AUTH_SIGNED',\n    0x8029: 'TPM_ST_FU_MANIFEST',\n};\n/**\n * 6.3 TPM_ALG_ID\n */\nexport const TPM_ALG = {\n    0x0000: 'TPM_ALG_ERROR',\n    0x0001: 'TPM_ALG_RSA',\n    0x0004: 'TPM_ALG_SHA',\n    // @ts-ignore 2300\n    0x0004: 'TPM_ALG_SHA1',\n    0x0005: 'TPM_ALG_HMAC',\n    0x0006: 'TPM_ALG_AES',\n    0x0007: 'TPM_ALG_MGF1',\n    0x0008: 'TPM_ALG_KEYEDHASH',\n    0x000a: 'TPM_ALG_XOR',\n    0x000b: 'TPM_ALG_SHA256',\n    0x000c: 'TPM_ALG_SHA384',\n    0x000d: 'TPM_ALG_SHA512',\n    0x0010: 'TPM_ALG_NULL',\n    0x0012: 'TPM_ALG_SM3_256',\n    0x0013: 'TPM_ALG_SM4',\n    0x0014: 'TPM_ALG_RSASSA',\n    0x0015: 'TPM_ALG_RSAES',\n    0x0016: 'TPM_ALG_RSAPSS',\n    0x0017: 'TPM_ALG_OAEP',\n    0x0018: 'TPM_ALG_ECDSA',\n    0x0019: 'TPM_ALG_ECDH',\n    0x001a: 'TPM_ALG_ECDAA',\n    0x001b: 'TPM_ALG_SM2',\n    0x001c: 'TPM_ALG_ECSCHNORR',\n    0x001d: 'TPM_ALG_ECMQV',\n    0x0020: 'TPM_ALG_KDF1_SP800_56A',\n    0x0021: 'TPM_ALG_KDF2',\n    0x0022: 'TPM_ALG_KDF1_SP800_108',\n    0x0023: 'TPM_ALG_ECC',\n    0x0025: 'TPM_ALG_SYMCIPHER',\n    0x0026: 'TPM_ALG_CAMELLIA',\n    0x0040: 'TPM_ALG_CTR',\n    0x0041: 'TPM_ALG_OFB',\n    0x0042: 'TPM_ALG_CBC',\n    0x0043: 'TPM_ALG_CFB',\n    0x0044: 'TPM_ALG_ECB',\n};\n/**\n * 6.4 TPM_ECC_CURVE\n */\nexport const TPM_ECC_CURVE = {\n    0x0000: 'TPM_ECC_NONE',\n    0x0001: 'TPM_ECC_NIST_P192',\n    0x0002: 'TPM_ECC_NIST_P224',\n    0x0003: 'TPM_ECC_NIST_P256',\n    0x0004: 'TPM_ECC_NIST_P384',\n    0x0005: 'TPM_ECC_NIST_P521',\n    0x0010: 'TPM_ECC_BN_P256',\n    0x0011: 'TPM_ECC_BN_P638',\n    0x0020: 'TPM_ECC_SM2_P256',\n};\n/**\n * Sourced from https://trustedcomputinggroup.org/resource/vendor-id-registry/\n *\n * Latest version:\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG-TPM-Vendor-ID-Registry-Version-1.02-Revision-1.00.pdf\n */\nexport const TPM_MANUFACTURERS = {\n    'id:414D4400': {\n        name: 'AMD',\n        id: 'AMD',\n    },\n    'id:41544D4C': {\n        name: 'Atmel',\n        id: 'ATML',\n    },\n    'id:4252434D': {\n        name: 'Broadcom',\n        id: 'BRCM',\n    },\n    'id:49424d00': {\n        name: 'IBM',\n        id: 'IBM',\n    },\n    'id:49424D00': {\n        name: 'IBM',\n        id: 'IBM',\n    },\n    'id:49465800': {\n        name: 'Infineon',\n        id: 'IFX',\n    },\n    'id:494E5443': {\n        name: 'Intel',\n        id: 'INTC',\n    },\n    'id:4C454E00': {\n        name: 'Lenovo',\n        id: 'LEN',\n    },\n    'id:4E534D20': {\n        name: 'National Semiconductor',\n        id: 'NSM',\n    },\n    'id:4E545A00': {\n        name: 'Nationz',\n        id: 'NTZ',\n    },\n    'id:4E544300': {\n        name: 'Nuvoton Technology',\n        id: 'NTC',\n    },\n    'id:51434F4D': {\n        name: 'Qualcomm',\n        id: 'QCOM',\n    },\n    'id:534D5343': {\n        name: 'SMSC',\n        id: 'SMSC',\n    },\n    'id:53544D20': {\n        name: 'ST Microelectronics',\n        id: 'STM',\n    },\n    'id:534D534E': {\n        name: 'Samsung',\n        id: 'SMSN',\n    },\n    'id:534E5300': {\n        name: 'Sinosun',\n        id: 'SNS',\n    },\n    'id:54584E00': {\n        name: 'Texas Instruments',\n        id: 'TXN',\n    },\n    'id:57454300': {\n        name: 'Winbond',\n        id: 'WEC',\n    },\n    'id:524F4343': {\n        name: 'Fuzhouk Rockchip',\n        id: 'ROCC',\n    },\n    'id:FFFFF1D0': {\n        name: 'FIDO Alliance',\n        id: 'FIDO',\n    },\n};\n/**\n * Match TPM public area curve ID's to `crv` numbers used in COSE public keys\n */\nexport const TPM_ECC_CURVE_COSE_CRV_MAP = {\n    TPM_ECC_NIST_P256: 1,\n    TPM_ECC_NIST_P384: 2,\n    TPM_ECC_NIST_P521: 3,\n    TPM_ECC_BN_P256: 1,\n    TPM_ECC_SM2_P256: 1, // p256\n};\n", "import { TPM_ALG, TPM_ST } from './constants.js';\nimport { isoUint8Array } from '../../../helpers/iso/index.js';\n/**\n * Cut up a TPM attestation's certInfo into intelligible chunks\n */\nexport function parseCertInfo(certInfo) {\n    let pointer = 0;\n    const dataView = isoUint8Array.toDataView(certInfo);\n    // Get a magic constant\n    const magic = dataView.getUint32(pointer);\n    pointer += 4;\n    // Determine the algorithm used for attestation\n    const typeBuffer = dataView.getUint16(pointer);\n    pointer += 2;\n    const type = TPM_ST[typeBuffer];\n    // The name of a parent entity, can be ignored\n    const qualifiedSignerLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedSigner = certInfo.slice(pointer, pointer += qualifiedSignerLength);\n    // Get the expected hash of `attsToBeSigned`\n    const extraDataLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const extraData = certInfo.slice(pointer, pointer += extraDataLength);\n    // Information about the TPM device's internal clock, can be ignored\n    const clock = certInfo.slice(pointer, pointer += 8);\n    const resetCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const restartCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const safe = !!certInfo.slice(pointer, pointer += 1);\n    const clockInfo = { clock, resetCount, restartCount, safe };\n    // TPM device firmware version\n    const firmwareVersion = certInfo.slice(pointer, pointer += 8);\n    // Attested Name\n    const attestedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const attestedName = certInfo.slice(pointer, pointer += attestedNameLength);\n    const attestedNameDataView = isoUint8Array.toDataView(attestedName);\n    // Attested qualified name, can be ignored\n    const qualifiedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedName = certInfo.slice(pointer, pointer += qualifiedNameLength);\n    const attested = {\n        nameAlg: TPM_ALG[attestedNameDataView.getUint16(0)],\n        nameAlgBuffer: attestedName.slice(0, 2),\n        name: attestedName,\n        qualifiedName,\n    };\n    return {\n        magic,\n        type,\n        qualifiedSigner,\n        extraData,\n        clockInfo,\n        firmwareVersion,\n        attested,\n    };\n}\n", "import { TPM_ALG, TPM_ECC_CURVE } from './constants.js';\nimport { isoUint8Array } from '../../../helpers/iso/index.js';\n/**\n * Break apart a TPM attestation's pubArea buffer\n *\n * See 12.2.4 TPMT_PUBLIC here:\n * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n */\nexport function parsePubArea(pubArea) {\n    let pointer = 0;\n    const dataView = isoUint8Array.toDataView(pubArea);\n    const type = TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    const nameAlg = TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    // Get some authenticator attributes(?)\n    // const objectAttributesInt = pubArea.slice(pointer, (pointer += 4)).readUInt32BE(0);\n    const objectAttributesInt = dataView.getUint32(pointer);\n    pointer += 4;\n    const objectAttributes = {\n        fixedTPM: !!(objectAttributesInt & 1),\n        stClear: !!(objectAttributesInt & 2),\n        fixedParent: !!(objectAttributesInt & 8),\n        sensitiveDataOrigin: !!(objectAttributesInt & 16),\n        userWithAuth: !!(objectAttributesInt & 32),\n        adminWithPolicy: !!(objectAttributesInt & 64),\n        noDA: !!(objectAttributesInt & 512),\n        encryptedDuplication: !!(objectAttributesInt & 1024),\n        restricted: !!(objectAttributesInt & 32768),\n        decrypt: !!(objectAttributesInt & 65536),\n        signOrEncrypt: !!(objectAttributesInt & 131072),\n    };\n    // Slice out the authPolicy of dynamic length\n    const authPolicyLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const authPolicy = pubArea.slice(pointer, pointer += authPolicyLength);\n    // Extract additional curve params according to type\n    const parameters = {};\n    let unique = Uint8Array.from([]);\n    if (type === 'TPM_ALG_RSA') {\n        const symmetric = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const keyBits = dataView.getUint16(pointer);\n        pointer += 2;\n        const exponent = dataView.getUint32(pointer);\n        pointer += 4;\n        parameters.rsa = { symmetric, scheme, keyBits, exponent };\n        /**\n         * See 11.2.4.5 TPM2B_PUBLIC_KEY_RSA here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */\n        // const uniqueLength = pubArea.slice(pointer, (pointer += 2)).readUInt16BE(0);\n        const uniqueLength = dataView.getUint16(pointer);\n        pointer += 2;\n        unique = pubArea.slice(pointer, pointer += uniqueLength);\n    }\n    else if (type === 'TPM_ALG_ECC') {\n        const symmetric = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const curveID = TPM_ECC_CURVE[dataView.getUint16(pointer)];\n        pointer += 2;\n        const kdf = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        parameters.ecc = { symmetric, scheme, curveID, kdf };\n        /**\n         * See 11.2.5.1 TPM2B_ECC_PARAMETER here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */\n        // Retrieve X\n        const uniqueXLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueX = pubArea.slice(pointer, pointer += uniqueXLength);\n        // Retrieve Y\n        const uniqueYLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueY = pubArea.slice(pointer, pointer += uniqueYLength);\n        unique = isoUint8Array.concat([uniqueX, uniqueY]);\n    }\n    else {\n        throw new Error(`Unexpected type \"${type}\" (TPM)`);\n    }\n    return {\n        type,\n        nameAlg,\n        objectAttributes,\n        authPolicy,\n        parameters,\n        unique,\n    };\n}\n", "import { AsnParser, Certificate, ExtendedKeyUsage, id_ce_extKeyUsage, id_ce_subjectAltName, SubjectAlternativeName, } from '../../../deps.js';\nimport { decodeCredentialPublicKey } from '../../../helpers/decodeCredentialPublicKey.js';\nimport { COSEALG, COSEKEYS, isCOSEAlg, isCOSEPublicKeyEC2, isCOSEPublicKeyRSA, } from '../../../helpers/cose.js';\nimport { toHash } from '../../../helpers/toHash.js';\nimport { convertCertBufferToPEM } from '../../../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../../../helpers/validateCertificatePath.js';\nimport { getCertificateInfo } from '../../../helpers/getCertificateInfo.js';\nimport { verifySignature } from '../../../helpers/verifySignature.js';\nimport { isoUint8Array } from '../../../helpers/iso/index.js';\nimport { validateExtFIDOGenCEAAGUID } from '../../../helpers/validateExtFIDOGenCEAAGUID.js';\nimport { MetadataService } from '../../../services/metadataService.js';\nimport { verifyAttestationWithMetadata } from '../../../metadata/verifyAttestationWithMetadata.js';\nimport { TPM_ECC_CURVE_COSE_CRV_MAP, TPM_MANUFACTURERS } from './constants.js';\nimport { parseCertInfo } from './parseCertInfo.js';\nimport { parsePubArea } from './parsePubArea.js';\nexport async function verifyAttestationTPM(options) {\n    const { aaguid, attStmt, authData, credentialPublicKey, clientDataHash, rootCertificates, } = options;\n    const ver = attStmt.get('ver');\n    const sig = attStmt.get('sig');\n    const alg = attStmt.get('alg');\n    const x5c = attStmt.get('x5c');\n    const pubArea = attStmt.get('pubArea');\n    const certInfo = attStmt.get('certInfo');\n    /**\n     * Verify structures\n     */\n    if (ver !== '2.0') {\n        throw new Error(`Unexpected ver \"${ver}\", expected \"2.0\" (TPM)`);\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (TPM)');\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (TPM)`);\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (TPM)`);\n    }\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (TPM)');\n    }\n    if (!pubArea) {\n        throw new Error('Attestation statement did not contain pubArea (TPM)');\n    }\n    if (!certInfo) {\n        throw new Error('Attestation statement did not contain certInfo (TPM)');\n    }\n    const parsedPubArea = parsePubArea(pubArea);\n    const { unique, type: pubType, parameters } = parsedPubArea;\n    // Verify that the public key specified by the parameters and unique fields of pubArea is\n    // identical to the credentialPublicKey in the attestedCredentialData in authenticatorData.\n    const cosePublicKey = decodeCredentialPublicKey(credentialPublicKey);\n    if (pubType === 'TPM_ALG_RSA') {\n        if (!isCOSEPublicKeyRSA(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const n = cosePublicKey.get(COSEKEYS.n);\n        const e = cosePublicKey.get(COSEKEYS.e);\n        if (!n) {\n            throw new Error('COSE public key missing n (TPM|RSA)');\n        }\n        if (!e) {\n            throw new Error('COSE public key missing e (TPM|RSA)');\n        }\n        if (!isoUint8Array.areEqual(unique, n)) {\n            throw new Error('PubArea unique is not same as credentialPublicKey (TPM|RSA)');\n        }\n        if (!parameters.rsa) {\n            throw new Error(`Parsed pubArea type is RSA, but missing parameters.rsa (TPM|RSA)`);\n        }\n        const eBuffer = e;\n        // If `exponent` is equal to 0x00, then exponent is the default RSA exponent of 2^16+1 (65537)\n        const pubAreaExponent = parameters.rsa.exponent || 65537;\n        // Do some bit shifting to get to an integer\n        const eSum = eBuffer[0] + (eBuffer[1] << 8) + (eBuffer[2] << 16);\n        if (pubAreaExponent !== eSum) {\n            throw new Error(`Unexpected public key exp ${eSum}, expected ${pubAreaExponent} (TPM|RSA)`);\n        }\n    }\n    else if (pubType === 'TPM_ALG_ECC') {\n        if (!isCOSEPublicKeyEC2(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const crv = cosePublicKey.get(COSEKEYS.crv);\n        const x = cosePublicKey.get(COSEKEYS.x);\n        const y = cosePublicKey.get(COSEKEYS.y);\n        if (!crv) {\n            throw new Error('COSE public key missing crv (TPM|ECC)');\n        }\n        if (!x) {\n            throw new Error('COSE public key missing x (TPM|ECC)');\n        }\n        if (!y) {\n            throw new Error('COSE public key missing y (TPM|ECC)');\n        }\n        if (!isoUint8Array.areEqual(unique, isoUint8Array.concat([x, y]))) {\n            throw new Error('PubArea unique is not same as public key x and y (TPM|ECC)');\n        }\n        if (!parameters.ecc) {\n            throw new Error(`Parsed pubArea type is ECC, but missing parameters.ecc (TPM|ECC)`);\n        }\n        const pubAreaCurveID = parameters.ecc.curveID;\n        const pubAreaCurveIDMapToCOSECRV = TPM_ECC_CURVE_COSE_CRV_MAP[pubAreaCurveID];\n        if (pubAreaCurveIDMapToCOSECRV !== crv) {\n            throw new Error(`Public area key curve ID \"${pubAreaCurveID}\" mapped to \"${pubAreaCurveIDMapToCOSECRV}\" which did not match public key crv of \"${crv}\" (TPM|ECC)`);\n        }\n    }\n    else {\n        throw new Error(`Unsupported pubArea.type \"${pubType}\"`);\n    }\n    const parsedCertInfo = parseCertInfo(certInfo);\n    const { magic, type: certType, attested, extraData } = parsedCertInfo;\n    if (magic !== 0xff544347) {\n        throw new Error(`Unexpected magic value \"${magic}\", expected \"0xff544347\" (TPM)`);\n    }\n    if (certType !== 'TPM_ST_ATTEST_CERTIFY') {\n        throw new Error(`Unexpected type \"${certType}\", expected \"TPM_ST_ATTEST_CERTIFY\" (TPM)`);\n    }\n    // Hash pubArea to create pubAreaHash using the nameAlg in attested\n    const pubAreaHash = await toHash(pubArea, attestedNameAlgToCOSEAlg(attested.nameAlg));\n    // Concatenate attested.nameAlg and pubAreaHash to create attestedName.\n    const attestedName = isoUint8Array.concat([\n        attested.nameAlgBuffer,\n        pubAreaHash,\n    ]);\n    // Check that certInfo.attested.name is equals to attestedName.\n    if (!isoUint8Array.areEqual(attested.name, attestedName)) {\n        throw new Error(`Attested name comparison failed (TPM)`);\n    }\n    // Concatenate authData with clientDataHash to create attToBeSigned\n    const attToBeSigned = isoUint8Array.concat([authData, clientDataHash]);\n    // Hash attToBeSigned using the algorithm specified in attStmt.alg to create attToBeSignedHash\n    const attToBeSignedHash = await toHash(attToBeSigned, alg);\n    // Check that certInfo.extraData is equals to attToBeSignedHash.\n    if (!isoUint8Array.areEqual(extraData, attToBeSignedHash)) {\n        throw new Error('CertInfo extra data did not equal hashed attestation (TPM)');\n    }\n    /**\n     * Verify signature\n     */\n    if (x5c.length < 1) {\n        throw new Error('No certificates present in x5c array (TPM)');\n    }\n    // Pick a leaf AIK certificate of the x5c array and parse it.\n    const leafCertInfo = getCertificateInfo(x5c[0]);\n    const { basicConstraintsCA, version, subject, notAfter, notBefore } = leafCertInfo;\n    if (basicConstraintsCA) {\n        throw new Error('Certificate basic constraints CA was not `false` (TPM)');\n    }\n    // Check that certificate is of version 3 (value must be set to 2).\n    if (version !== 2) {\n        throw new Error('Certificate version was not `3` (ASN.1 value of 2) (TPM)');\n    }\n    // Check that Subject sequence is empty.\n    if (subject.combined.length > 0) {\n        throw new Error('Certificate subject was not empty (TPM)');\n    }\n    // Check that certificate is currently valid\n    let now = new Date();\n    if (notBefore > now) {\n        throw new Error(`Certificate not good before \"${notBefore.toString()}\" (TPM)`);\n    }\n    // Check that certificate has not expired\n    now = new Date();\n    if (notAfter < now) {\n        throw new Error(`Certificate not good after \"${notAfter.toString()}\" (TPM)`);\n    }\n    /**\n     * Plumb the depths of the certificate's ASN.1-formatted data for some values we need to verify\n     */\n    const parsedCert = AsnParser.parse(x5c[0], Certificate);\n    if (!parsedCert.tbsCertificate.extensions) {\n        throw new Error('Certificate was missing extensions (TPM)');\n    }\n    let subjectAltNamePresent;\n    let extKeyUsage;\n    parsedCert.tbsCertificate.extensions.forEach((ext) => {\n        if (ext.extnID === id_ce_subjectAltName) {\n            subjectAltNamePresent = AsnParser.parse(ext.extnValue, SubjectAlternativeName);\n        }\n        else if (ext.extnID === id_ce_extKeyUsage) {\n            extKeyUsage = AsnParser.parse(ext.extnValue, ExtendedKeyUsage);\n        }\n    });\n    // Check that certificate contains subjectAltName (2.5.29.17) extension,\n    if (!subjectAltNamePresent) {\n        throw new Error('Certificate did not contain subjectAltName extension (TPM)');\n    }\n    // TPM-specific values are buried within `directoryName`, so first make sure there are values\n    // there.\n    if (!subjectAltNamePresent[0].directoryName?.[0].length) {\n        throw new Error('Certificate subjectAltName extension directoryName was empty (TPM)');\n    }\n    const { tcgAtTpmManufacturer, tcgAtTpmModel, tcgAtTpmVersion } = getTcgAtTpmValues(subjectAltNamePresent[0].directoryName);\n    if (!tcgAtTpmManufacturer || !tcgAtTpmModel || !tcgAtTpmVersion) {\n        throw new Error('Certificate contained incomplete subjectAltName data (TPM)');\n    }\n    if (!extKeyUsage) {\n        throw new Error('Certificate did not contain ExtendedKeyUsage extension (TPM)');\n    }\n    // Check that tcpaTpmManufacturer (2.23.133.2.1) field is set to a valid manufacturer ID.\n    if (!TPM_MANUFACTURERS[tcgAtTpmManufacturer]) {\n        throw new Error(`Could not match TPM manufacturer \"${tcgAtTpmManufacturer}\" (TPM)`);\n    }\n    // Check that certificate contains extKeyUsage (2.5.29.37) extension and it must contain\n    // tcg-kp-AIKCertificate (2.23.133.8.3) OID.\n    if (extKeyUsage[0] !== '2.23.133.8.3') {\n        throw new Error(`Unexpected extKeyUsage \"${extKeyUsage[0]}\", expected \"2.23.133.8.3\" (TPM)`);\n    }\n    // Validate attestation statement AAGUID against leaf cert AAGUID\n    try {\n        await validateExtFIDOGenCEAAGUID(parsedCert.tbsCertificate.extensions, aaguid);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (TPM)`);\n    }\n    // Run some metadata checks if a statement exists for this authenticator\n    const statement = await MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await verifyAttestationWithMetadata({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    // Verify signature over certInfo with the public key extracted from AIK certificate.\n    // In the wise words of Yuriy Ackermann: \"Get Martini friend, you are done!\"\n    return verifySignature({\n        signature: sig,\n        data: certInfo,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg,\n    });\n}\n/**\n * Contain logic for pulling TPM-specific values out of subjectAlternativeName extension\n */\nfunction getTcgAtTpmValues(root) {\n    const oidManufacturer = '2.23.133.2.1';\n    const oidModel = '2.23.133.2.2';\n    const oidVersion = '2.23.133.2.3';\n    let tcgAtTpmManufacturer;\n    let tcgAtTpmModel;\n    let tcgAtTpmVersion;\n    /**\n     * Iterate through the following potential structures:\n     *\n     * (Good, follows the spec)\n     * https://trustedcomputinggroup.org/wp-content/uploads/TCG_IWG_EKCredentialProfile_v2p3_r2_pub.pdf (page 33)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * (Bad, does not follow the spec)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * Both structures have been seen in the wild and need to be supported\n     */\n    root.forEach((relName) => {\n        relName.forEach((attr) => {\n            if (attr.type === oidManufacturer) {\n                tcgAtTpmManufacturer = attr.value.toString();\n            }\n            else if (attr.type === oidModel) {\n                tcgAtTpmModel = attr.value.toString();\n            }\n            else if (attr.type === oidVersion) {\n                tcgAtTpmVersion = attr.value.toString();\n            }\n        });\n    });\n    return {\n        tcgAtTpmManufacturer,\n        tcgAtTpmModel,\n        tcgAtTpmVersion,\n    };\n}\n/**\n * Convert TPM-specific SHA algorithm ID's with COSE-specific equivalents. Note that the choice to\n * use ECDSA SHA IDs is arbitrary; any such COSEALG that would map to SHA-256 in\n * `mapCoseAlgToWebCryptoAlg()`\n *\n * SHA IDs referenced from here:\n *\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG_TPM2_r1p59_Part2_Structures_pub.pdf\n */\nfunction attestedNameAlgToCOSEAlg(alg) {\n    if (alg === 'TPM_ALG_SHA256') {\n        return COSEALG.ES256;\n    }\n    else if (alg === 'TPM_ALG_SHA384') {\n        return COSEALG.ES384;\n    }\n    else if (alg === 'TPM_ALG_SHA512') {\n        return COSEALG.ES512;\n    }\n    throw new Error(`Unexpected TPM attested name alg ${alg}`);\n}\n", "import { AsnParser, Certificate, id_ce_keyDescription, KeyDescription } from '../../deps.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { verifySignature } from '../../helpers/verifySignature.js';\nimport { convertCOSEtoPKCS } from '../../helpers/convertCOSEtoPKCS.js';\nimport { isCOSEAlg } from '../../helpers/cose.js';\nimport { isoUint8Array } from '../../helpers/iso/index.js';\nimport { MetadataService } from '../../services/metadataService.js';\nimport { verifyAttestationWithMetadata } from '../../metadata/verifyAttestationWithMetadata.js';\n/**\n * Verify an attestation response with fmt 'android-key'\n */\nexport async function verifyAttestationAndroidKey(options) {\n    const { authData, clientDataHash, attStmt, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const x5c = attStmt.get('x5c');\n    const sig = attStmt.get('sig');\n    const alg = attStmt.get('alg');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (AndroidKey)');\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (AndroidKey)');\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (AndroidKey)`);\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (AndroidKey)`);\n    }\n    // Check that credentialPublicKey matches the public key in the attestation certificate\n    // Find the public cert in the certificate as PKCS\n    const parsedCert = AsnParser.parse(x5c[0], Certificate);\n    const parsedCertPubKey = new Uint8Array(parsedCert.tbsCertificate.subjectPublicKeyInfo.subjectPublicKey);\n    // Convert the credentialPublicKey to PKCS\n    const credPubKeyPKCS = convertCOSEtoPKCS(credentialPublicKey);\n    if (!isoUint8Array.areEqual(credPubKeyPKCS, parsedCertPubKey)) {\n        throw new Error('Credential public key does not equal leaf cert public key (AndroidKey)');\n    }\n    // Find Android KeyStore Extension in certificate extensions\n    const extKeyStore = parsedCert.tbsCertificate.extensions?.find((ext) => ext.extnID === id_ce_keyDescription);\n    if (!extKeyStore) {\n        throw new Error('Certificate did not contain extKeyStore (AndroidKey)');\n    }\n    const parsedExtKeyStore = AsnParser.parse(extKeyStore.extnValue, KeyDescription);\n    // Verify extKeyStore values\n    const { attestationChallenge, teeEnforced, softwareEnforced } = parsedExtKeyStore;\n    if (!isoUint8Array.areEqual(new Uint8Array(attestationChallenge.buffer), clientDataHash)) {\n        throw new Error('Attestation challenge was not equal to client data hash (AndroidKey)');\n    }\n    // Ensure that the key is strictly bound to the caller app identifier (shouldn't contain the\n    // [600] tag)\n    if (teeEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (AndroidKey)');\n    }\n    if (softwareEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (AndroidKey)');\n    }\n    const statement = await MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await verifyAttestationWithMetadata({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (AndroidKey)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (AndroidKey)`);\n        }\n    }\n    const signatureBase = isoUint8Array.concat([authData, clientDataHash]);\n    return verifySignature({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg,\n    });\n}\n", "import { AsnParser, Certificate } from '../../deps.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { toHash } from '../../helpers/toHash.js';\nimport { convertCOSEtoPKCS } from '../../helpers/convertCOSEtoPKCS.js';\nimport { isoUint8Array } from '../../helpers/iso/index.js';\nexport async function verifyAttestationApple(options) {\n    const { attStmt, authData, clientDataHash, credentialPublicKey, rootCertificates, } = options;\n    const x5c = attStmt.get('x5c');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (Apple)');\n    }\n    /**\n     * Verify certificate path\n     */\n    try {\n        await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (Apple)`);\n    }\n    /**\n     * Compare nonce in certificate extension to computed nonce\n     */\n    const parsedCredCert = AsnParser.parse(x5c[0], Certificate);\n    const { extensions, subjectPublicKeyInfo } = parsedCredCert.tbsCertificate;\n    if (!extensions) {\n        throw new Error('credCert missing extensions (Apple)');\n    }\n    const extCertNonce = extensions.find((ext) => ext.extnID === '1.2.840.113635.100.8.2');\n    if (!extCertNonce) {\n        throw new Error('credCert missing \"1.2.840.113635.100.8.2\" extension (Apple)');\n    }\n    const nonceToHash = isoUint8Array.concat([authData, clientDataHash]);\n    const nonce = await toHash(nonceToHash);\n    /**\n     * Ignore the first six ASN.1 structure bytes that define the nonce as an OCTET STRING. Should\n     * trim off <Buffer 30 24 a1 22 04 20>\n     *\n     * TODO: Try and get @peculiar (GitHub) to add a schema for \"1.2.840.113635.100.8.2\" when we\n     * find out where it's defined (doesn't seem to be publicly documented at the moment...)\n     */\n    const extNonce = new Uint8Array(extCertNonce.extnValue.buffer).slice(6);\n    if (!isoUint8Array.areEqual(nonce, extNonce)) {\n        throw new Error(`credCert nonce was not expected value (Apple)`);\n    }\n    /**\n     * Verify credential public key matches the Subject Public Key of credCert\n     */\n    const credPubKeyPKCS = convertCOSEtoPKCS(credentialPublicKey);\n    const credCertSubjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n    if (!isoUint8Array.areEqual(credPubKeyPKCS, credCertSubjectPublicKey)) {\n        throw new Error('Credential public key does not equal credCert public key (Apple)');\n    }\n    return true;\n}\n", "import { decodeAttestationObject, } from '../helpers/decodeAttestationObject.js';\nimport { decodeClientDataJSON } from '../helpers/decodeClientDataJSON.js';\nimport { parseAuthenticatorData } from '../helpers/parseAuthenticatorData.js';\nimport { toHash } from '../helpers/toHash.js';\nimport { decodeCredentialPublicKey } from '../helpers/decodeCredentialPublicKey.js';\nimport { COSEKEYS } from '../helpers/cose.js';\nimport { convertAAGUIDToString } from '../helpers/convertAAGUIDToString.js';\nimport { parseBackupFlags } from '../helpers/parseBackupFlags.js';\nimport { matchExpectedRPID } from '../helpers/matchExpectedRPID.js';\nimport { isoBase64URL } from '../helpers/iso/index.js';\nimport { SettingsService } from '../services/settingsService.js';\nimport { supportedCOSEAlgorithmIdentifiers } from './generateRegistrationOptions.js';\nimport { verifyAttestationFIDOU2F } from './verifications/verifyAttestationFIDOU2F.js';\nimport { verifyAttestationPacked } from './verifications/verifyAttestationPacked.js';\nimport { verifyAttestationAndroidSafetyNet } from './verifications/verifyAttestationAndroidSafetyNet.js';\nimport { verifyAttestationTPM } from './verifications/tpm/verifyAttestationTPM.js';\nimport { verifyAttestationAndroidKey } from './verifications/verifyAttestationAndroidKey.js';\nimport { verifyAttestationApple } from './verifications/verifyAttestationApple.js';\n/**\n * Verify that the user has legitimately completed the registration process\n *\n * **Options:**\n *\n * @param response - Response returned by **@simplewebauthn/browser**'s `startAuthentication()`\n * @param expectedChallenge - The base64url-encoded `options.challenge` returned by `generateRegistrationOptions()`\n * @param expectedOrigin - Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID - RP ID (or array of IDs) that was specified in the registration options\n * @param expectedType **(Optional)** - The response type expected ('webauthn.create')\n * @param requireUserPresence **(Optional)** - Enforce user presence by the authenticator (or skip it during auto registration) Defaults to `true`\n * @param requireUserVerification **(Optional)** - Enforce user verification by the authenticator (via PIN, fingerprint, etc...) Defaults to `true`\n * @param supportedAlgorithmIDs **(Optional)** - Array of numeric COSE algorithm identifiers supported for attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms. Defaults to all supported algorithm IDs\n */\nexport async function verifyRegistrationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, requireUserPresence = true, requireUserVerification = true, supportedAlgorithmIDs = supportedCOSEAlgorithmIdentifiers, } = options;\n    const { id, rawId, type: credentialType, response: attestationResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error('Missing credential ID');\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error('Credential ID was not base64url-encoded');\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== 'public-key') {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    const clientDataJSON = decodeClientDataJSON(attestationResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an registration\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(', ');\n            throw new Error(`Unexpected registration response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    }\n    else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected registration response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    }\n    else if (type !== 'webauthn.create') {\n        throw new Error(`Unexpected registration response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === 'function') {\n        if (!(await expectedChallenge(challenge))) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    }\n    else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected registration response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected one of: ${expectedOrigin.join(', ')}`);\n        }\n    }\n    else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== 'object') {\n            throw new Error(`Unexpected value for TokenBinding \"${tokenBinding}\"`);\n        }\n        if (['present', 'supported', 'not-supported'].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding.status value of \"${tokenBinding.status}\"`);\n        }\n    }\n    const attestationObject = isoBase64URL.toBuffer(attestationResponse.attestationObject);\n    const decodedAttestationObject = decodeAttestationObject(attestationObject);\n    const fmt = decodedAttestationObject.get('fmt');\n    const authData = decodedAttestationObject.get('authData');\n    const attStmt = decodedAttestationObject.get('attStmt');\n    const parsedAuthData = parseAuthenticatorData(authData);\n    const { aaguid, rpIdHash, flags, credentialID, counter, credentialPublicKey, extensionsData, } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let matchedRPID;\n    if (expectedRPID) {\n        let expectedRPIDs = [];\n        if (typeof expectedRPID === 'string') {\n            expectedRPIDs = [expectedRPID];\n        }\n        else {\n            expectedRPIDs = expectedRPID;\n        }\n        matchedRPID = await matchExpectedRPID(rpIdHash, expectedRPIDs);\n    }\n    // Make sure someone was physically present\n    if (requireUserPresence && !flags.up) {\n        throw new Error('User presence was required, but user was not present');\n    }\n    // Enforce user verification if specified\n    if (requireUserVerification && !flags.uv) {\n        throw new Error('User verification was required, but user could not be verified');\n    }\n    if (!credentialID) {\n        throw new Error('No credential ID was provided by authenticator');\n    }\n    if (!credentialPublicKey) {\n        throw new Error('No public key was provided by authenticator');\n    }\n    if (!aaguid) {\n        throw new Error('No AAGUID was present during registration');\n    }\n    const decodedPublicKey = decodeCredentialPublicKey(credentialPublicKey);\n    const alg = decodedPublicKey.get(COSEKEYS.alg);\n    if (typeof alg !== 'number') {\n        throw new Error('Credential public key was missing numeric alg');\n    }\n    // Make sure the key algorithm is one we specified within the registration options\n    if (!supportedAlgorithmIDs.includes(alg)) {\n        const supported = supportedAlgorithmIDs.join(', ');\n        throw new Error(`Unexpected public key alg \"${alg}\", expected one of \"${supported}\"`);\n    }\n    const clientDataHash = await toHash(isoBase64URL.toBuffer(attestationResponse.clientDataJSON));\n    const rootCertificates = SettingsService.getRootCertificates({\n        identifier: fmt,\n    });\n    // Prepare arguments to pass to the relevant verification method\n    const verifierOpts = {\n        aaguid,\n        attStmt,\n        authData,\n        clientDataHash,\n        credentialID,\n        credentialPublicKey,\n        rootCertificates,\n        rpIdHash,\n    };\n    /**\n     * Verification can only be performed when attestation = 'direct'\n     */\n    let verified = false;\n    if (fmt === 'fido-u2f') {\n        verified = await verifyAttestationFIDOU2F(verifierOpts);\n    }\n    else if (fmt === 'packed') {\n        verified = await verifyAttestationPacked(verifierOpts);\n    }\n    else if (fmt === 'android-safetynet') {\n        verified = await verifyAttestationAndroidSafetyNet(verifierOpts);\n    }\n    else if (fmt === 'android-key') {\n        verified = await verifyAttestationAndroidKey(verifierOpts);\n    }\n    else if (fmt === 'tpm') {\n        verified = await verifyAttestationTPM(verifierOpts);\n    }\n    else if (fmt === 'apple') {\n        verified = await verifyAttestationApple(verifierOpts);\n    }\n    else if (fmt === 'none') {\n        if (attStmt.size > 0) {\n            throw new Error('None attestation had unexpected attestation statement');\n        }\n        // This is the weaker of the attestations, so there's nothing else to really check\n        verified = true;\n    }\n    else {\n        throw new Error(`Unsupported Attestation Format: ${fmt}`);\n    }\n    const toReturn = {\n        verified,\n    };\n    if (toReturn.verified) {\n        const { credentialDeviceType, credentialBackedUp } = parseBackupFlags(flags);\n        toReturn.registrationInfo = {\n            fmt,\n            aaguid: convertAAGUIDToString(aaguid),\n            credentialType,\n            credential: {\n                id: isoBase64URL.fromBuffer(credentialID),\n                publicKey: credentialPublicKey,\n                counter,\n                transports: response.response.transports,\n            },\n            attestationObject,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n            authenticatorExtensionResults: extensionsData,\n        };\n    }\n    return toReturn;\n}\n", "import { isoBase64URL, isoUint8Array } from '../helpers/iso/index.js';\nimport { generateChallenge } from '../helpers/generateChallenge.js';\n/**\n * Prepare a value to pass into navigator.credentials.get(...) for authenticator authentication\n *\n * **Options:**\n *\n * @param rpID - Valid domain name (after `https://`)\n * @param allowCredentials **(Optional)** - Authenticators previously registered by the user, if any. If undefined the client will ask the user which credential they want to use\n * @param challenge **(Optional)** - Random value the authenticator needs to sign and pass back user for authentication. Defaults to generating a random value\n * @param timeout **(Optional)** - How long (in ms) the user can take to complete authentication. Defaults to `60000`\n * @param userVerification **(Optional)** - Set to `'discouraged'` when asserting as part of a 2FA flow, otherwise set to `'preferred'` or `'required'` as desired. Defaults to `\"preferred\"`\n * @param extensions **(Optional)** - Additional plugins the authenticator or browser should use during authentication\n */\nexport async function generateAuthenticationOptions(options) {\n    const { allowCredentials, challenge = await generateChallenge(), timeout = 60000, userVerification = 'preferred', extensions, rpID, } = options;\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */\n    let _challenge = challenge;\n    if (typeof _challenge === 'string') {\n        _challenge = isoUint8Array.fromUTF8String(_challenge);\n    }\n    return {\n        rpId: rpID,\n        challenge: isoBase64URL.fromBuffer(_challenge),\n        allowCredentials: allowCredentials?.map((cred) => {\n            if (!isoBase64URL.isBase64URL(cred.id)) {\n                throw new Error(`excludeCredential id \"${cred.id}\" is not a valid base64url string`);\n            }\n            return {\n                ...cred,\n                id: isoBase64URL.trimPadding(cred.id),\n                type: 'public-key',\n            };\n        }),\n        timeout,\n        userVerification,\n        extensions,\n    };\n}\n", "import { decodeClientDataJSON } from '../helpers/decodeClientDataJSON.js';\nimport { toHash } from '../helpers/toHash.js';\nimport { verifySignature } from '../helpers/verifySignature.js';\nimport { parseAuthenticatorData } from '../helpers/parseAuthenticatorData.js';\nimport { parseBackupFlags } from '../helpers/parseBackupFlags.js';\nimport { matchExpectedRPID } from '../helpers/matchExpectedRPID.js';\nimport { isoBase64URL, isoUint8Array } from '../helpers/iso/index.js';\n/**\n * Verify that the user has legitimately completed the authentication process\n *\n * **Options:**\n *\n * @param response - Response returned by **@simplewebauthn/browser**'s `startAssertion()`\n * @param expectedChallenge - The base64url-encoded `options.challenge` returned by `generateAuthenticationOptions()`\n * @param expectedOrigin - Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID - RP ID (or array of IDs) that was specified in the registration options\n * @param credential - An internal {@link WebAuthnCredential} corresponding to `id` in the authentication response\n * @param expectedType **(Optional)** - The response type expected ('webauthn.get')\n * @param requireUserVerification **(Optional)** - Enforce user verification by the authenticator (via PIN, fingerprint, etc...) Defaults to `true`\n * @param advancedFIDOConfig **(Optional)** - Options for satisfying more stringent FIDO RP feature requirements\n * @param advancedFIDOConfig.userVerification **(Optional)** - Enable alternative rules for evaluating the User Presence and User Verified flags in authenticator data: UV (and UP) flags are optional unless this value is `\"required\"`\n */\nexport async function verifyAuthenticationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, credential, requireUserVerification = true, advancedFIDOConfig, } = options;\n    const { id, rawId, type: credentialType, response: assertionResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error('Missing credential ID');\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error('Credential ID was not base64url-encoded');\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== 'public-key') {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    if (!response) {\n        throw new Error('Credential missing response');\n    }\n    if (typeof assertionResponse?.clientDataJSON !== 'string') {\n        throw new Error('Credential response clientDataJSON was not a string');\n    }\n    const clientDataJSON = decodeClientDataJSON(assertionResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an authentication\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(', ');\n            throw new Error(`Unexpected authentication response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    }\n    else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected authentication response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    }\n    else if (type !== 'webauthn.get') {\n        throw new Error(`Unexpected authentication response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === 'function') {\n        if (!(await expectedChallenge(challenge))) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    }\n    else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected authentication response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            const joinedExpectedOrigin = expectedOrigin.join(', ');\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected one of: ${joinedExpectedOrigin}`);\n        }\n    }\n    else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (!isoBase64URL.isBase64URL(assertionResponse.authenticatorData)) {\n        throw new Error('Credential response authenticatorData was not a base64url string');\n    }\n    if (!isoBase64URL.isBase64URL(assertionResponse.signature)) {\n        throw new Error('Credential response signature was not a base64url string');\n    }\n    if (assertionResponse.userHandle &&\n        typeof assertionResponse.userHandle !== 'string') {\n        throw new Error('Credential response userHandle was not a string');\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== 'object') {\n            throw new Error('ClientDataJSON tokenBinding was not an object');\n        }\n        if (['present', 'supported', 'notSupported'].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding status ${tokenBinding.status}`);\n        }\n    }\n    const authDataBuffer = isoBase64URL.toBuffer(assertionResponse.authenticatorData);\n    const parsedAuthData = parseAuthenticatorData(authDataBuffer);\n    const { rpIdHash, flags, counter, extensionsData } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let expectedRPIDs = [];\n    if (typeof expectedRPID === 'string') {\n        expectedRPIDs = [expectedRPID];\n    }\n    else {\n        expectedRPIDs = expectedRPID;\n    }\n    const matchedRPID = await matchExpectedRPID(rpIdHash, expectedRPIDs);\n    if (advancedFIDOConfig !== undefined) {\n        const { userVerification: fidoUserVerification } = advancedFIDOConfig;\n        /**\n         * Use FIDO Conformance-defined rules for verifying UP and UV flags\n         */\n        if (fidoUserVerification === 'required') {\n            // Require `flags.uv` be true (implies `flags.up` is true)\n            if (!flags.uv) {\n                throw new Error('User verification required, but user could not be verified');\n            }\n        }\n        else if (fidoUserVerification === 'preferred' ||\n            fidoUserVerification === 'discouraged') {\n            // Ignore `flags.uv`\n        }\n    }\n    else {\n        /**\n         * Use WebAuthn spec-defined rules for verifying UP and UV flags\n         */\n        // WebAuthn only requires the user presence flag be true\n        if (!flags.up) {\n            throw new Error('User not present during authentication');\n        }\n        // Enforce user verification if required\n        if (requireUserVerification && !flags.uv) {\n            throw new Error('User verification required, but user could not be verified');\n        }\n    }\n    const clientDataHash = await toHash(isoBase64URL.toBuffer(assertionResponse.clientDataJSON));\n    const signatureBase = isoUint8Array.concat([authDataBuffer, clientDataHash]);\n    const signature = isoBase64URL.toBuffer(assertionResponse.signature);\n    if ((counter > 0 || credential.counter > 0) &&\n        counter <= credential.counter) {\n        // Error out when the counter in the DB is greater than or equal to the counter in the\n        // dataStruct. It's related to how the authenticator maintains the number of times its been\n        // used for this client. If this happens, then someone's somehow increased the counter\n        // on the device without going through this site\n        throw new Error(`Response counter value ${counter} was lower than expected ${credential.counter}`);\n    }\n    const { credentialDeviceType, credentialBackedUp } = parseBackupFlags(flags);\n    const toReturn = {\n        verified: await verifySignature({\n            signature,\n            data: signatureBase,\n            credentialPublicKey: credential.publicKey,\n        }),\n        authenticationInfo: {\n            newCounter: counter,\n            credentialID: credential.id,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            authenticatorExtensionResults: extensionsData,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n        },\n    };\n    return toReturn;\n}\n", "/**\n * Encapsulates the logic for issuing a request to the Stripe API.\n *\n * A custom HTTP client should should implement:\n * 1. A response class which extends HttpClientResponse and wraps around their\n *    own internal representation of a response.\n * 2. A client class which extends HttpClient and implements all methods,\n *    returning their own response class when making requests.\n */\nexport class HttpClient {\n    /** The client name used for diagnostics. */\n    getClientName() {\n        throw new Error('getClientName not implemented.');\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        throw new Error('makeRequest not implemented.');\n    }\n    /** Helper to make a consistent timeout error across implementations. */\n    static makeTimeoutError() {\n        const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n        timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n        return timeoutErr;\n    }\n}\n// Public API accessible via Stripe.HttpClient\nHttpClient.CONNECTION_CLOSED_ERROR_CODES = ['ECONNRESET', 'EPIPE'];\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\nexport class HttpClientResponse {\n    constructor(statusCode, headers) {\n        this._statusCode = statusCode;\n        this._headers = headers;\n    }\n    getStatusCode() {\n        return this._statusCode;\n    }\n    getHeaders() {\n        return this._headers;\n    }\n    getRawResponse() {\n        throw new Error('getRawResponse not implemented.');\n    }\n    toStream(streamCompleteCallback) {\n        throw new Error('toStream not implemented.');\n    }\n    toJSON() {\n        throw new Error('toJSON not implemented.');\n    }\n}\n", "import { HttpClient, HttpClientResponse, } from './HttpClient.js';\n/**\n * HTTP client which uses a `fetch` function to issue requests.\n *\n * By default relies on the global `fetch` function, but an optional function\n * can be passed in. If passing in a function, it is expected to match the Web\n * Fetch API. As an example, this could be the function provided by the\n * node-fetch package (https://github.com/node-fetch/node-fetch).\n */\nexport class FetchHttpClient extends HttpClient {\n    constructor(fetchFn) {\n        super();\n        // Default to global fetch if available\n        if (!fetchFn) {\n            if (!globalThis.fetch) {\n                throw new Error('fetch() function not provided and is not defined in the global scope. ' +\n                    'You must provide a fetch implementation.');\n            }\n            fetchFn = globalThis.fetch;\n        }\n        // Both timeout behaviors differs from Node:\n        // - Fetch uses a single timeout for the entire length of the request.\n        // - Node is more fine-grained and resets the timeout after each stage of the request.\n        if (globalThis.AbortController) {\n            // Utilise native AbortController if available\n            // AbortController was added in Node v15.0.0, v14.17.0\n            this._fetchFn = FetchHttpClient.makeFetchWithAbortTimeout(fetchFn);\n        }\n        else {\n            // Fall back to racing against a timeout promise if not available in the runtime\n            // This does not actually cancel the underlying fetch operation or resources\n            this._fetchFn = FetchHttpClient.makeFetchWithRaceTimeout(fetchFn);\n        }\n    }\n    static makeFetchWithRaceTimeout(fetchFn) {\n        return (url, init, timeout) => {\n            let pendingTimeoutId;\n            const timeoutPromise = new Promise((_, reject) => {\n                pendingTimeoutId = setTimeout(() => {\n                    pendingTimeoutId = null;\n                    reject(HttpClient.makeTimeoutError());\n                }, timeout);\n            });\n            const fetchPromise = fetchFn(url, init);\n            return Promise.race([fetchPromise, timeoutPromise]).finally(() => {\n                if (pendingTimeoutId) {\n                    clearTimeout(pendingTimeoutId);\n                }\n            });\n        };\n    }\n    static makeFetchWithAbortTimeout(fetchFn) {\n        return async (url, init, timeout) => {\n            // Use AbortController because AbortSignal.timeout() was added later in Node v17.3.0, v16.14.0\n            const abort = new AbortController();\n            let timeoutId = setTimeout(() => {\n                timeoutId = null;\n                abort.abort(HttpClient.makeTimeoutError());\n            }, timeout);\n            try {\n                return await fetchFn(url, Object.assign(Object.assign({}, init), { signal: abort.signal }));\n            }\n            catch (err) {\n                // Some implementations, like node-fetch, do not respect the reason passed to AbortController.abort()\n                // and instead it always throws an AbortError\n                // We catch this case to normalise all timeout errors\n                if (err.name === 'AbortError') {\n                    throw HttpClient.makeTimeoutError();\n                }\n                else {\n                    throw err;\n                }\n            }\n            finally {\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                }\n            }\n        };\n    }\n    /** @override. */\n    getClientName() {\n        return 'fetch';\n    }\n    async makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        const isInsecureConnection = protocol === 'http';\n        const url = new URL(path, `${isInsecureConnection ? 'http' : 'https'}://${host}`);\n        url.port = port;\n        // For methods which expect payloads, we should always pass a body value\n        // even when it is empty. Without this, some JS runtimes (eg. Deno) will\n        // inject a second Content-Length header. See https://github.com/stripe/stripe-node/issues/1519\n        // for more details.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        const body = requestData || (methodHasPayload ? '' : undefined);\n        const res = await this._fetchFn(url.toString(), {\n            method,\n            // @ts-ignore\n            headers,\n            // @ts-ignore\n            body,\n        }, timeout);\n        return new FetchHttpClientResponse(res);\n    }\n}\nexport class FetchHttpClientResponse extends HttpClientResponse {\n    constructor(res) {\n        super(res.status, FetchHttpClientResponse._transformHeadersToObject(res.headers));\n        this._res = res;\n    }\n    getRawResponse() {\n        return this._res;\n    }\n    toStream(streamCompleteCallback) {\n        // Unfortunately `fetch` does not have event handlers for when the stream is\n        // completely read. We therefore invoke the streamCompleteCallback right\n        // away. This callback emits a response event with metadata and completes\n        // metrics, so it's ok to do this without waiting for the stream to be\n        // completely read.\n        streamCompleteCallback();\n        // Fetch's `body` property is expected to be a readable stream of the body.\n        return this._res.body;\n    }\n    toJSON() {\n        return this._res.json();\n    }\n    static _transformHeadersToObject(headers) {\n        // Fetch uses a Headers instance so this must be converted to a barebones\n        // JS object to meet the HttpClient interface.\n        const headersObj = {};\n        for (const entry of headers) {\n            if (!Array.isArray(entry) || entry.length != 2) {\n                throw new Error('Response objects produced by the fetch function given to FetchHttpClient do not have an iterable headers map. Response#headers should be an iterable object.');\n            }\n            headersObj[entry[0]] = entry[1];\n        }\n        return headersObj;\n    }\n}\n", "/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nexport class CryptoProvider {\n    /**\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignature(payload, secret) {\n        throw new Error('computeHMACSignature not implemented.');\n    }\n    /**\n     * Asynchronous version of `computeHMACSignature`. Some implementations may\n     * only allow support async signature computation.\n     *\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignatureAsync(payload, secret) {\n        throw new Error('computeHMACSignatureAsync not implemented.');\n    }\n}\n/**\n * If the crypto provider only supports asynchronous operations,\n * throw CryptoProviderOnlySupportsAsyncError instead of\n * a generic error so that the caller can choose to provide\n * a more helpful error message to direct the user to use\n * an asynchronous pathway.\n */\nexport class CryptoProviderOnlySupportsAsyncError extends Error {\n}\n", "import { CryptoProvider, CryptoProviderOnlySupportsAsyncError, } from './CryptoProvider.js';\n/**\n * `CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n *\n * This only supports asynchronous operations.\n */\nexport class SubtleCryptoProvider extends CryptoProvider {\n    constructor(subtleCrypto) {\n        super();\n        // If no subtle crypto is interface, default to the global namespace. This\n        // is to allow custom interfaces (eg. using the Node webcrypto interface in\n        // tests).\n        this.subtleCrypto = subtleCrypto || crypto.subtle;\n    }\n    /** @override */\n    computeHMACSignature(payload, secret) {\n        throw new CryptoProviderOnlySupportsAsyncError('SubtleCryptoProvider cannot be used in a synchronous context.');\n    }\n    /** @override */\n    async computeHMACSignatureAsync(payload, secret) {\n        const encoder = new TextEncoder();\n        const key = await this.subtleCrypto.importKey('raw', encoder.encode(secret), {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        }, false, ['sign']);\n        const signatureBuffer = await this.subtleCrypto.sign('hmac', key, encoder.encode(payload));\n        // crypto.subtle returns the signature in base64 format. This must be\n        // encoded in hex to match the CryptoProvider contract. We map each byte in\n        // the buffer to its corresponding hex octet and then combine into a string.\n        const signatureBytes = new Uint8Array(signatureBuffer);\n        const signatureHexCodes = new Array(signatureBytes.length);\n        for (let i = 0; i < signatureBytes.length; i++) {\n            signatureHexCodes[i] = byteHexMapping[signatureBytes[i]];\n        }\n        return signatureHexCodes.join('');\n    }\n}\n// Cached mapping of byte to hex representation. We do this once to avoid re-\n// computing every time we need to convert the result of a signature to hex.\nconst byteHexMapping = new Array(256);\nfor (let i = 0; i < byteHexMapping.length; i++) {\n    byteHexMapping[i] = i.toString(16).padStart(2, '0');\n}\n", "import { FetchHttpClient } from '../net/FetchHttpClient.js';\nimport { SubtleCryptoProvider } from '../crypto/SubtleCryptoProvider.js';\n/**\n * Interface encapsulating various utility functions whose\n * implementations depend on the platform / JS runtime.\n */\nexport class PlatformFunctions {\n    constructor() {\n        this._fetchFn = null;\n        this._agent = null;\n    }\n    /**\n     * Gets uname with Node's built-in `exec` function, if available.\n     */\n    getUname() {\n        throw new Error('getUname not implemented.');\n    }\n    /**\n     * Generates a v4 UUID. See https://stackoverflow.com/a/2117523\n     */\n    uuid4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Compares strings in constant time.\n     */\n    secureCompare(a, b) {\n        // return early here if buffer lengths are not equal\n        if (a.length !== b.length) {\n            return false;\n        }\n        const len = a.length;\n        let result = 0;\n        for (let i = 0; i < len; ++i) {\n            result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n        }\n        return result === 0;\n    }\n    /**\n     * Creates an event emitter.\n     */\n    createEmitter() {\n        throw new Error('createEmitter not implemented.');\n    }\n    /**\n     * Checks if the request data is a stream. If so, read the entire stream\n     * to a buffer and return the buffer.\n     */\n    tryBufferData(data) {\n        throw new Error('tryBufferData not implemented.');\n    }\n    /**\n     * Creates an HTTP client which uses the Node `http` and `https` packages\n     * to issue requests.\n     */\n    createNodeHttpClient(agent) {\n        throw new Error('createNodeHttpClient not implemented.');\n    }\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    createFetchHttpClient(fetchFn) {\n        return new FetchHttpClient(fetchFn);\n    }\n    /**\n     * Creates an HTTP client using runtime-specific APIs.\n     */\n    createDefaultHttpClient() {\n        throw new Error('createDefaultHttpClient not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the Node `crypto` package for its computations.\n     */\n    createNodeCryptoProvider() {\n        throw new Error('createNodeCryptoProvider not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n     */\n    createSubtleCryptoProvider(subtleCrypto) {\n        return new SubtleCryptoProvider(subtleCrypto);\n    }\n    createDefaultCryptoProvider() {\n        throw new Error('createDefaultCryptoProvider not implemented.');\n    }\n}\n", "/**\n * @private\n * (For internal use in stripe-node.)\n * Wrapper around the Event Web API.\n */\nclass _StripeEvent extends Event {\n    constructor(eventName, data) {\n        super(eventName);\n        this.data = data;\n    }\n}\n/** Minimal EventEmitter wrapper around EventTarget. */\nexport class StripeEmitter {\n    constructor() {\n        this.eventTarget = new EventTarget();\n        this.listenerMapping = new Map();\n    }\n    on(eventName, listener) {\n        const listenerWrapper = (event) => {\n            listener(event.data);\n        };\n        this.listenerMapping.set(listener, listenerWrapper);\n        return this.eventTarget.addEventListener(eventName, listenerWrapper);\n    }\n    removeListener(eventName, listener) {\n        const listenerWrapper = this.listenerMapping.get(listener);\n        this.listenerMapping.delete(listener);\n        return this.eventTarget.removeEventListener(eventName, listenerWrapper);\n    }\n    once(eventName, listener) {\n        const listenerWrapper = (event) => {\n            listener(event.data);\n        };\n        this.listenerMapping.set(listener, listenerWrapper);\n        return this.eventTarget.addEventListener(eventName, listenerWrapper, {\n            once: true,\n        });\n    }\n    emit(eventName, data) {\n        return this.eventTarget.dispatchEvent(new _StripeEvent(eventName, data));\n    }\n}\n", "import { PlatformFunctions } from './PlatformFunctions.js';\nimport { StripeEmitter } from '../StripeEmitter.js';\n/**\n * Specializes WebPlatformFunctions using APIs available in Web workers.\n */\nexport class WebPlatformFunctions extends PlatformFunctions {\n    /** @override */\n    getUname() {\n        return Promise.resolve(null);\n    }\n    /** @override */\n    createEmitter() {\n        return new StripeEmitter();\n    }\n    /** @override */\n    tryBufferData(data) {\n        if (data.file.data instanceof ReadableStream) {\n            throw new Error('Uploading a file as a stream is not supported in non-Node environments. Please open or upvote an issue at github.com/stripe/stripe-node if you use this, detailing your use-case.');\n        }\n        return Promise.resolve(data);\n    }\n    /** @override */\n    createNodeHttpClient() {\n        throw new Error('Stripe: `createNodeHttpClient()` is not available in non-Node environments. Please use `createFetchHttpClient()` instead.');\n    }\n    /** @override */\n    createDefaultHttpClient() {\n        return super.createFetchHttpClient();\n    }\n    /** @override */\n    createNodeCryptoProvider() {\n        throw new Error('Stripe: `createNodeCryptoProvider()` is not available in non-Node environments. Please use `createSubtleCryptoProvider()` instead.');\n    }\n    /** @override */\n    createDefaultCryptoProvider() {\n        return this.createSubtleCryptoProvider();\n    }\n}\n", "/* eslint-disable camelcase */\nexport const generate = (rawStripeError) => {\n    switch (rawStripeError.type) {\n        case 'card_error':\n            return new StripeCardError(rawStripeError);\n        case 'invalid_request_error':\n            return new StripeInvalidRequestError(rawStripeError);\n        case 'api_error':\n            return new StripeAPIError(rawStripeError);\n        case 'authentication_error':\n            return new StripeAuthenticationError(rawStripeError);\n        case 'rate_limit_error':\n            return new StripeRateLimitError(rawStripeError);\n        case 'idempotency_error':\n            return new StripeIdempotencyError(rawStripeError);\n        case 'invalid_grant':\n            return new StripeInvalidGrantError(rawStripeError);\n        default:\n            return new StripeUnknownError(rawStripeError);\n    }\n};\n/**\n * StripeError is the base error from which all other more specific Stripe errors derive.\n * Specifically for errors returned from Stripe's REST API.\n */\nexport class StripeError extends Error {\n    constructor(raw = {}, type = null) {\n        super(raw.message);\n        this.type = type || this.constructor.name;\n        this.raw = raw;\n        this.rawType = raw.type;\n        this.code = raw.code;\n        this.doc_url = raw.doc_url;\n        this.param = raw.param;\n        this.detail = raw.detail;\n        this.headers = raw.headers;\n        this.requestId = raw.requestId;\n        this.statusCode = raw.statusCode;\n        // @ts-ignore\n        this.message = raw.message;\n        this.charge = raw.charge;\n        this.decline_code = raw.decline_code;\n        this.payment_intent = raw.payment_intent;\n        this.payment_method = raw.payment_method;\n        this.payment_method_type = raw.payment_method_type;\n        this.setup_intent = raw.setup_intent;\n        this.source = raw.source;\n    }\n}\n/**\n * Helper factory which takes raw stripe errors and outputs wrapping instances\n */\nStripeError.generate = generate;\n// Specific Stripe Error types:\n/**\n * CardError is raised when a user enters a card that can't be charged for\n * some reason.\n */\nexport class StripeCardError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeCardError');\n    }\n}\n/**\n * InvalidRequestError is raised when a request is initiated with invalid\n * parameters.\n */\nexport class StripeInvalidRequestError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeInvalidRequestError');\n    }\n}\n/**\n * APIError is a generic error that may be raised in cases where none of the\n * other named errors cover the problem. It could also be raised in the case\n * that a new error has been introduced in the API, but this version of the\n * Node.JS SDK doesn't know how to handle it.\n */\nexport class StripeAPIError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeAPIError');\n    }\n}\n/**\n * AuthenticationError is raised when invalid credentials are used to connect\n * to Stripe's servers.\n */\nexport class StripeAuthenticationError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeAuthenticationError');\n    }\n}\n/**\n * PermissionError is raised in cases where access was attempted on a resource\n * that wasn't allowed.\n */\nexport class StripePermissionError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripePermissionError');\n    }\n}\n/**\n * RateLimitError is raised in cases where an account is putting too much load\n * on Stripe's API servers (usually by performing too many requests). Please\n * back off on request rate.\n */\nexport class StripeRateLimitError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeRateLimitError');\n    }\n}\n/**\n * StripeConnectionError is raised in the event that the SDK can't connect to\n * Stripe's servers. That can be for a variety of different reasons from a\n * downed network to a bad TLS certificate.\n */\nexport class StripeConnectionError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeConnectionError');\n    }\n}\n/**\n * SignatureVerificationError is raised when the signature verification for a\n * webhook fails\n */\nexport class StripeSignatureVerificationError extends StripeError {\n    constructor(header, payload, raw = {}) {\n        super(raw, 'StripeSignatureVerificationError');\n        this.header = header;\n        this.payload = payload;\n    }\n}\n/**\n * IdempotencyError is raised in cases where an idempotency key was used\n * improperly.\n */\nexport class StripeIdempotencyError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeIdempotencyError');\n    }\n}\n/**\n * InvalidGrantError is raised when a specified code doesn't exist, is\n * expired, has been used, or doesn't belong to you; a refresh token doesn't\n * exist, or doesn't belong to you; or if an API key's mode (live or test)\n * doesn't match the mode of a code or refresh token.\n */\nexport class StripeInvalidGrantError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeInvalidGrantError');\n    }\n}\n/**\n * Any other error from Stripe not specifically captured above\n */\nexport class StripeUnknownError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeUnknownError');\n    }\n}\n", "// File generated from our OpenAPI spec\nexport const ApiVersion = '2023-10-16';\n", "// File generated from our OpenAPI spec\nimport { resourceNamespace } from './ResourceNamespace.js';\nimport { Accounts as FinancialConnectionsAccounts } from './resources/FinancialConnections/Accounts.js';\nimport { ActiveEntitlements as EntitlementsActiveEntitlements } from './resources/Entitlements/ActiveEntitlements.js';\nimport { Authorizations as TestHelpersIssuingAuthorizations } from './resources/TestHelpers/Issuing/Authorizations.js';\nimport { Authorizations as IssuingAuthorizations } from './resources/Issuing/Authorizations.js';\nimport { Calculations as TaxCalculations } from './resources/Tax/Calculations.js';\nimport { Cardholders as IssuingCardholders } from './resources/Issuing/Cardholders.js';\nimport { Cards as TestHelpersIssuingCards } from './resources/TestHelpers/Issuing/Cards.js';\nimport { Cards as IssuingCards } from './resources/Issuing/Cards.js';\nimport { Configurations as BillingPortalConfigurations } from './resources/BillingPortal/Configurations.js';\nimport { Configurations as TerminalConfigurations } from './resources/Terminal/Configurations.js';\nimport { ConfirmationTokens as TestHelpersConfirmationTokens } from './resources/TestHelpers/ConfirmationTokens.js';\nimport { ConnectionTokens as TerminalConnectionTokens } from './resources/Terminal/ConnectionTokens.js';\nimport { CreditReversals as TreasuryCreditReversals } from './resources/Treasury/CreditReversals.js';\nimport { Customers as TestHelpersCustomers } from './resources/TestHelpers/Customers.js';\nimport { DebitReversals as TreasuryDebitReversals } from './resources/Treasury/DebitReversals.js';\nimport { Disputes as IssuingDisputes } from './resources/Issuing/Disputes.js';\nimport { EarlyFraudWarnings as RadarEarlyFraudWarnings } from './resources/Radar/EarlyFraudWarnings.js';\nimport { Features as EntitlementsFeatures } from './resources/Entitlements/Features.js';\nimport { FinancialAccounts as TreasuryFinancialAccounts } from './resources/Treasury/FinancialAccounts.js';\nimport { InboundTransfers as TestHelpersTreasuryInboundTransfers } from './resources/TestHelpers/Treasury/InboundTransfers.js';\nimport { InboundTransfers as TreasuryInboundTransfers } from './resources/Treasury/InboundTransfers.js';\nimport { Locations as TerminalLocations } from './resources/Terminal/Locations.js';\nimport { MeterEventAdjustments as BillingMeterEventAdjustments } from './resources/Billing/MeterEventAdjustments.js';\nimport { MeterEvents as BillingMeterEvents } from './resources/Billing/MeterEvents.js';\nimport { Meters as BillingMeters } from './resources/Billing/Meters.js';\nimport { Orders as ClimateOrders } from './resources/Climate/Orders.js';\nimport { OutboundPayments as TestHelpersTreasuryOutboundPayments } from './resources/TestHelpers/Treasury/OutboundPayments.js';\nimport { OutboundPayments as TreasuryOutboundPayments } from './resources/Treasury/OutboundPayments.js';\nimport { OutboundTransfers as TestHelpersTreasuryOutboundTransfers } from './resources/TestHelpers/Treasury/OutboundTransfers.js';\nimport { OutboundTransfers as TreasuryOutboundTransfers } from './resources/Treasury/OutboundTransfers.js';\nimport { PersonalizationDesigns as TestHelpersIssuingPersonalizationDesigns } from './resources/TestHelpers/Issuing/PersonalizationDesigns.js';\nimport { PersonalizationDesigns as IssuingPersonalizationDesigns } from './resources/Issuing/PersonalizationDesigns.js';\nimport { PhysicalBundles as IssuingPhysicalBundles } from './resources/Issuing/PhysicalBundles.js';\nimport { Products as ClimateProducts } from './resources/Climate/Products.js';\nimport { Readers as TestHelpersTerminalReaders } from './resources/TestHelpers/Terminal/Readers.js';\nimport { Readers as TerminalReaders } from './resources/Terminal/Readers.js';\nimport { ReceivedCredits as TestHelpersTreasuryReceivedCredits } from './resources/TestHelpers/Treasury/ReceivedCredits.js';\nimport { ReceivedCredits as TreasuryReceivedCredits } from './resources/Treasury/ReceivedCredits.js';\nimport { ReceivedDebits as TestHelpersTreasuryReceivedDebits } from './resources/TestHelpers/Treasury/ReceivedDebits.js';\nimport { ReceivedDebits as TreasuryReceivedDebits } from './resources/Treasury/ReceivedDebits.js';\nimport { Refunds as TestHelpersRefunds } from './resources/TestHelpers/Refunds.js';\nimport { Registrations as TaxRegistrations } from './resources/Tax/Registrations.js';\nimport { ReportRuns as ReportingReportRuns } from './resources/Reporting/ReportRuns.js';\nimport { ReportTypes as ReportingReportTypes } from './resources/Reporting/ReportTypes.js';\nimport { Requests as ForwardingRequests } from './resources/Forwarding/Requests.js';\nimport { ScheduledQueryRuns as SigmaScheduledQueryRuns } from './resources/Sigma/ScheduledQueryRuns.js';\nimport { Secrets as AppsSecrets } from './resources/Apps/Secrets.js';\nimport { Sessions as BillingPortalSessions } from './resources/BillingPortal/Sessions.js';\nimport { Sessions as CheckoutSessions } from './resources/Checkout/Sessions.js';\nimport { Sessions as FinancialConnectionsSessions } from './resources/FinancialConnections/Sessions.js';\nimport { Settings as TaxSettings } from './resources/Tax/Settings.js';\nimport { Suppliers as ClimateSuppliers } from './resources/Climate/Suppliers.js';\nimport { TestClocks as TestHelpersTestClocks } from './resources/TestHelpers/TestClocks.js';\nimport { Tokens as IssuingTokens } from './resources/Issuing/Tokens.js';\nimport { TransactionEntries as TreasuryTransactionEntries } from './resources/Treasury/TransactionEntries.js';\nimport { Transactions as TestHelpersIssuingTransactions } from './resources/TestHelpers/Issuing/Transactions.js';\nimport { Transactions as FinancialConnectionsTransactions } from './resources/FinancialConnections/Transactions.js';\nimport { Transactions as IssuingTransactions } from './resources/Issuing/Transactions.js';\nimport { Transactions as TaxTransactions } from './resources/Tax/Transactions.js';\nimport { Transactions as TreasuryTransactions } from './resources/Treasury/Transactions.js';\nimport { ValueListItems as RadarValueListItems } from './resources/Radar/ValueListItems.js';\nimport { ValueLists as RadarValueLists } from './resources/Radar/ValueLists.js';\nimport { VerificationReports as IdentityVerificationReports } from './resources/Identity/VerificationReports.js';\nimport { VerificationSessions as IdentityVerificationSessions } from './resources/Identity/VerificationSessions.js';\nexport { Accounts as Account } from './resources/Accounts.js';\nexport { AccountLinks } from './resources/AccountLinks.js';\nexport { AccountSessions } from './resources/AccountSessions.js';\nexport { Accounts } from './resources/Accounts.js';\nexport { ApplePayDomains } from './resources/ApplePayDomains.js';\nexport { ApplicationFees } from './resources/ApplicationFees.js';\nexport { Balance } from './resources/Balance.js';\nexport { BalanceTransactions } from './resources/BalanceTransactions.js';\nexport { Charges } from './resources/Charges.js';\nexport { ConfirmationTokens } from './resources/ConfirmationTokens.js';\nexport { CountrySpecs } from './resources/CountrySpecs.js';\nexport { Coupons } from './resources/Coupons.js';\nexport { CreditNotes } from './resources/CreditNotes.js';\nexport { CustomerSessions } from './resources/CustomerSessions.js';\nexport { Customers } from './resources/Customers.js';\nexport { Disputes } from './resources/Disputes.js';\nexport { EphemeralKeys } from './resources/EphemeralKeys.js';\nexport { Events } from './resources/Events.js';\nexport { ExchangeRates } from './resources/ExchangeRates.js';\nexport { FileLinks } from './resources/FileLinks.js';\nexport { Files } from './resources/Files.js';\nexport { InvoiceItems } from './resources/InvoiceItems.js';\nexport { Invoices } from './resources/Invoices.js';\nexport { Mandates } from './resources/Mandates.js';\nexport { OAuth } from './resources/OAuth.js';\nexport { PaymentIntents } from './resources/PaymentIntents.js';\nexport { PaymentLinks } from './resources/PaymentLinks.js';\nexport { PaymentMethodConfigurations } from './resources/PaymentMethodConfigurations.js';\nexport { PaymentMethodDomains } from './resources/PaymentMethodDomains.js';\nexport { PaymentMethods } from './resources/PaymentMethods.js';\nexport { Payouts } from './resources/Payouts.js';\nexport { Plans } from './resources/Plans.js';\nexport { Prices } from './resources/Prices.js';\nexport { Products } from './resources/Products.js';\nexport { PromotionCodes } from './resources/PromotionCodes.js';\nexport { Quotes } from './resources/Quotes.js';\nexport { Refunds } from './resources/Refunds.js';\nexport { Reviews } from './resources/Reviews.js';\nexport { SetupAttempts } from './resources/SetupAttempts.js';\nexport { SetupIntents } from './resources/SetupIntents.js';\nexport { ShippingRates } from './resources/ShippingRates.js';\nexport { Sources } from './resources/Sources.js';\nexport { SubscriptionItems } from './resources/SubscriptionItems.js';\nexport { SubscriptionSchedules } from './resources/SubscriptionSchedules.js';\nexport { Subscriptions } from './resources/Subscriptions.js';\nexport { TaxCodes } from './resources/TaxCodes.js';\nexport { TaxIds } from './resources/TaxIds.js';\nexport { TaxRates } from './resources/TaxRates.js';\nexport { Tokens } from './resources/Tokens.js';\nexport { Topups } from './resources/Topups.js';\nexport { Transfers } from './resources/Transfers.js';\nexport { WebhookEndpoints } from './resources/WebhookEndpoints.js';\nexport const Apps = resourceNamespace('apps', { Secrets: AppsSecrets });\nexport const Billing = resourceNamespace('billing', {\n    MeterEventAdjustments: BillingMeterEventAdjustments,\n    MeterEvents: BillingMeterEvents,\n    Meters: BillingMeters,\n});\nexport const BillingPortal = resourceNamespace('billingPortal', {\n    Configurations: BillingPortalConfigurations,\n    Sessions: BillingPortalSessions,\n});\nexport const Checkout = resourceNamespace('checkout', {\n    Sessions: CheckoutSessions,\n});\nexport const Climate = resourceNamespace('climate', {\n    Orders: ClimateOrders,\n    Products: ClimateProducts,\n    Suppliers: ClimateSuppliers,\n});\nexport const Entitlements = resourceNamespace('entitlements', {\n    ActiveEntitlements: EntitlementsActiveEntitlements,\n    Features: EntitlementsFeatures,\n});\nexport const FinancialConnections = resourceNamespace('financialConnections', {\n    Accounts: FinancialConnectionsAccounts,\n    Sessions: FinancialConnectionsSessions,\n    Transactions: FinancialConnectionsTransactions,\n});\nexport const Forwarding = resourceNamespace('forwarding', {\n    Requests: ForwardingRequests,\n});\nexport const Identity = resourceNamespace('identity', {\n    VerificationReports: IdentityVerificationReports,\n    VerificationSessions: IdentityVerificationSessions,\n});\nexport const Issuing = resourceNamespace('issuing', {\n    Authorizations: IssuingAuthorizations,\n    Cardholders: IssuingCardholders,\n    Cards: IssuingCards,\n    Disputes: IssuingDisputes,\n    PersonalizationDesigns: IssuingPersonalizationDesigns,\n    PhysicalBundles: IssuingPhysicalBundles,\n    Tokens: IssuingTokens,\n    Transactions: IssuingTransactions,\n});\nexport const Radar = resourceNamespace('radar', {\n    EarlyFraudWarnings: RadarEarlyFraudWarnings,\n    ValueListItems: RadarValueListItems,\n    ValueLists: RadarValueLists,\n});\nexport const Reporting = resourceNamespace('reporting', {\n    ReportRuns: ReportingReportRuns,\n    ReportTypes: ReportingReportTypes,\n});\nexport const Sigma = resourceNamespace('sigma', {\n    ScheduledQueryRuns: SigmaScheduledQueryRuns,\n});\nexport const Tax = resourceNamespace('tax', {\n    Calculations: TaxCalculations,\n    Registrations: TaxRegistrations,\n    Settings: TaxSettings,\n    Transactions: TaxTransactions,\n});\nexport const Terminal = resourceNamespace('terminal', {\n    Configurations: TerminalConfigurations,\n    ConnectionTokens: TerminalConnectionTokens,\n    Locations: TerminalLocations,\n    Readers: TerminalReaders,\n});\nexport const TestHelpers = resourceNamespace('testHelpers', {\n    ConfirmationTokens: TestHelpersConfirmationTokens,\n    Customers: TestHelpersCustomers,\n    Refunds: TestHelpersRefunds,\n    TestClocks: TestHelpersTestClocks,\n    Issuing: resourceNamespace('issuing', {\n        Authorizations: TestHelpersIssuingAuthorizations,\n        Cards: TestHelpersIssuingCards,\n        PersonalizationDesigns: TestHelpersIssuingPersonalizationDesigns,\n        Transactions: TestHelpersIssuingTransactions,\n    }),\n    Terminal: resourceNamespace('terminal', {\n        Readers: TestHelpersTerminalReaders,\n    }),\n    Treasury: resourceNamespace('treasury', {\n        InboundTransfers: TestHelpersTreasuryInboundTransfers,\n        OutboundPayments: TestHelpersTreasuryOutboundPayments,\n        OutboundTransfers: TestHelpersTreasuryOutboundTransfers,\n        ReceivedCredits: TestHelpersTreasuryReceivedCredits,\n        ReceivedDebits: TestHelpersTreasuryReceivedDebits,\n    }),\n});\nexport const Treasury = resourceNamespace('treasury', {\n    CreditReversals: TreasuryCreditReversals,\n    DebitReversals: TreasuryDebitReversals,\n    FinancialAccounts: TreasuryFinancialAccounts,\n    InboundTransfers: TreasuryInboundTransfers,\n    OutboundPayments: TreasuryOutboundPayments,\n    OutboundTransfers: TreasuryOutboundTransfers,\n    ReceivedCredits: TreasuryReceivedCredits,\n    ReceivedDebits: TreasuryReceivedDebits,\n    TransactionEntries: TreasuryTransactionEntries,\n    Transactions: TreasuryTransactions,\n});\n", "// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\nfunction ResourceNamespace(stripe, resources) {\n    for (const name in resources) {\n        const camelCaseName = name[0].toLowerCase() + name.substring(1);\n        const resource = new resources[name](stripe);\n        this[camelCaseName] = resource;\n    }\n}\nexport function resourceNamespace(namespace, resources) {\n    return function (stripe) {\n        return new ResourceNamespace(stripe, resources);\n    };\n}\n", "import * as qs from 'qs';\nconst OPTIONS_KEYS = [\n    'apiKey',\n    'idempotencyKey',\n    'stripeAccount',\n    'apiVersion',\n    'maxNetworkRetries',\n    'timeout',\n    'host',\n];\nexport function isOptionsHash(o) {\n    return (o &&\n        typeof o === 'object' &&\n        OPTIONS_KEYS.some((prop) => Object.prototype.hasOwnProperty.call(o, prop)));\n}\n/**\n * Stringifies an Object, accommodating nested objects\n * (forming the conventional key 'parent[child]=value')\n */\nexport function stringifyRequestData(data) {\n    return (qs\n        .stringify(data, {\n        serializeDate: (d) => Math.floor(d.getTime() / 1000).toString(),\n    })\n        // Don't use strict form encoding by changing the square bracket control\n        // characters back to their literals. This is fine by the server, and\n        // makes these parameter strings easier to read.\n        .replace(/%5B/g, '[')\n        .replace(/%5D/g, ']'));\n}\n/**\n * Outputs a new function with interpolated object property values.\n * Use like so:\n *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n */\nexport const makeURLInterpolator = (() => {\n    const rc = {\n        '\\n': '\\\\n',\n        '\"': '\\\\\"',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n    return (str) => {\n        const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n        return (outputs) => {\n            return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) => \n            // @ts-ignore\n            encodeURIComponent(outputs[$1] || ''));\n        };\n    };\n})();\nexport function extractUrlParams(path) {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n        return [];\n    }\n    return params.map((param) => param.replace(/[{}]/g, ''));\n}\n/**\n * Return the data argument from a list of arguments\n *\n * @param {object[]} args\n * @returns {object}\n */\nexport function getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n        return {};\n    }\n    if (!isOptionsHash(args[0])) {\n        return args.shift();\n    }\n    const argKeys = Object.keys(args[0]);\n    const optionKeysInArgs = argKeys.filter((key) => OPTIONS_KEYS.includes(key));\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (optionKeysInArgs.length > 0 &&\n        optionKeysInArgs.length !== argKeys.length) {\n        emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n    }\n    return {};\n}\n/**\n * Return the options hash from a list of arguments\n */\nexport function getOptionsFromArgs(args) {\n    const opts = {\n        auth: null,\n        host: null,\n        headers: {},\n        settings: {},\n    };\n    if (args.length > 0) {\n        const arg = args[args.length - 1];\n        if (typeof arg === 'string') {\n            opts.auth = args.pop();\n        }\n        else if (isOptionsHash(arg)) {\n            const params = Object.assign({}, args.pop());\n            const extraKeys = Object.keys(params).filter((key) => !OPTIONS_KEYS.includes(key));\n            if (extraKeys.length) {\n                emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n            }\n            if (params.apiKey) {\n                opts.auth = params.apiKey;\n            }\n            if (params.idempotencyKey) {\n                opts.headers['Idempotency-Key'] = params.idempotencyKey;\n            }\n            if (params.stripeAccount) {\n                opts.headers['Stripe-Account'] = params.stripeAccount;\n            }\n            if (params.apiVersion) {\n                opts.headers['Stripe-Version'] = params.apiVersion;\n            }\n            if (Number.isInteger(params.maxNetworkRetries)) {\n                opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n            }\n            if (Number.isInteger(params.timeout)) {\n                opts.settings.timeout = params.timeout;\n            }\n            if (params.host) {\n                opts.host = params.host;\n            }\n        }\n    }\n    return opts;\n}\n/**\n * Provide simple \"Class\" extension mechanism.\n * <!-- Public API accessible via Stripe.StripeResource.extend -->\n */\nexport function protoExtend(sub) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const Super = this;\n    const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor')\n        ? sub.constructor\n        : function (...args) {\n            Super.apply(this, args);\n        };\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n    return Constructor;\n}\n/**\n * Remove empty values from an object\n */\nexport function removeNullish(obj) {\n    if (typeof obj !== 'object') {\n        throw new Error('Argument must be an object');\n    }\n    return Object.keys(obj).reduce((result, key) => {\n        if (obj[key] != null) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\n/**\n * Normalize standard HTTP Headers:\n * {'foo-bar': 'hi'}\n * becomes\n * {'Foo-Bar': 'hi'}\n */\nexport function normalizeHeaders(obj) {\n    if (!(obj && typeof obj === 'object')) {\n        return obj;\n    }\n    return Object.keys(obj).reduce((result, header) => {\n        result[normalizeHeader(header)] = obj[header];\n        return result;\n    }, {});\n}\n/**\n * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n * without the exceptions which are irrelevant to us.\n */\nexport function normalizeHeader(header) {\n    return header\n        .split('-')\n        .map((text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase())\n        .join('-');\n}\nexport function callbackifyPromiseWithTimeout(promise, callback) {\n    if (callback) {\n        // Ensure callback is called outside of promise stack.\n        return promise.then((res) => {\n            setTimeout(() => {\n                callback(null, res);\n            }, 0);\n        }, (err) => {\n            setTimeout(() => {\n                callback(err, null);\n            }, 0);\n        });\n    }\n    return promise;\n}\n/**\n * Allow for special capitalization cases (such as OAuth)\n */\nexport function pascalToCamelCase(name) {\n    if (name === 'OAuth') {\n        return 'oauth';\n    }\n    else {\n        return name[0].toLowerCase() + name.substring(1);\n    }\n}\nexport function emitWarning(warning) {\n    if (typeof process.emitWarning !== 'function') {\n        return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n    }\n    return process.emitWarning(warning, 'Stripe');\n}\nexport function isObject(obj) {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n}\n// For use in multipart requests\nexport function flattenAndStringify(data) {\n    const result = {};\n    const step = (obj, prevKey) => {\n        Object.keys(obj).forEach((key) => {\n            // @ts-ignore\n            const value = obj[key];\n            const newKey = prevKey ? `${prevKey}[${key}]` : key;\n            if (isObject(value)) {\n                if (!(value instanceof Uint8Array) &&\n                    !Object.prototype.hasOwnProperty.call(value, 'data')) {\n                    // Non-buffer non-file Objects are recursively flattened\n                    return step(value, newKey);\n                }\n                else {\n                    // Buffers and file objects are stored without modification\n                    result[newKey] = value;\n                }\n            }\n            else {\n                // Primitives are converted to strings\n                result[newKey] = String(value);\n            }\n        });\n    };\n    step(data, null);\n    return result;\n}\nexport function validateInteger(name, n, defaultVal) {\n    if (!Number.isInteger(n)) {\n        if (defaultVal !== undefined) {\n            return defaultVal;\n        }\n        else {\n            throw new Error(`${name} must be an integer`);\n        }\n    }\n    return n;\n}\nexport function determineProcessUserAgentProperties() {\n    return typeof process === 'undefined'\n        ? {}\n        : {\n            lang_version: process.version,\n            platform: process.platform,\n        };\n}\n/**\n * Joins an array of Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n    const merged = new Uint8Array(totalLength);\n    let offset = 0;\n    arrays.forEach((array) => {\n        merged.set(array, offset);\n        offset += array.length;\n    });\n    return merged;\n}\n", "import { callbackifyPromiseWithTimeout, getDataFromArgs } from './utils.js';\nclass StripeIterator {\n    constructor(firstPagePromise, requestArgs, spec, stripeResource) {\n        this.index = 0;\n        this.pagePromise = firstPagePromise;\n        this.promiseCache = { currentPromise: null };\n        this.requestArgs = requestArgs;\n        this.spec = spec;\n        this.stripeResource = stripeResource;\n    }\n    async iterate(pageResult) {\n        if (!(pageResult &&\n            pageResult.data &&\n            typeof pageResult.data.length === 'number')) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `data` array.');\n        }\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        if (this.index < pageResult.data.length) {\n            const idx = reverseIteration\n                ? pageResult.data.length - 1 - this.index\n                : this.index;\n            const value = pageResult.data[idx];\n            this.index += 1;\n            return { value, done: false };\n        }\n        else if (pageResult.has_more) {\n            // Reset counter, request next page, and recurse.\n            this.index = 0;\n            this.pagePromise = this.getNextPage(pageResult);\n            const nextPageResult = await this.pagePromise;\n            return this.iterate(nextPageResult);\n        }\n        return { done: true, value: undefined };\n    }\n    /** @abstract */\n    getNextPage(_pageResult) {\n        throw new Error('Unimplemented');\n    }\n    async _next() {\n        return this.iterate(await this.pagePromise);\n    }\n    next() {\n        /**\n         * If a user calls `.next()` multiple times in parallel,\n         * return the same result until something has resolved\n         * to prevent page-turning race conditions.\n         */\n        if (this.promiseCache.currentPromise) {\n            return this.promiseCache.currentPromise;\n        }\n        const nextPromise = (async () => {\n            const ret = await this._next();\n            this.promiseCache.currentPromise = null;\n            return ret;\n        })();\n        this.promiseCache.currentPromise = nextPromise;\n        return nextPromise;\n    }\n}\nclass ListIterator extends StripeIterator {\n    getNextPage(pageResult) {\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        const lastId = getLastId(pageResult, reverseIteration);\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            [reverseIteration ? 'ending_before' : 'starting_after']: lastId,\n        });\n    }\n}\nclass SearchIterator extends StripeIterator {\n    getNextPage(pageResult) {\n        if (!pageResult.next_page) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `next_page` field, but `has_more` was true.');\n        }\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            page: pageResult.next_page,\n        });\n    }\n}\nexport const makeAutoPaginationMethods = (stripeResource, requestArgs, spec, firstPagePromise) => {\n    if (spec.methodType === 'search') {\n        return makeAutoPaginationMethodsFromIterator(new SearchIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    if (spec.methodType === 'list') {\n        return makeAutoPaginationMethodsFromIterator(new ListIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    return null;\n};\nconst makeAutoPaginationMethodsFromIterator = (iterator) => {\n    const autoPagingEach = makeAutoPagingEach((...args) => iterator.next(...args));\n    const autoPagingToArray = makeAutoPagingToArray(autoPagingEach);\n    const autoPaginationMethods = {\n        autoPagingEach,\n        autoPagingToArray,\n        // Async iterator functions:\n        next: () => iterator.next(),\n        return: () => {\n            // This is required for `break`.\n            return {};\n        },\n        [getAsyncIteratorSymbol()]: () => {\n            return autoPaginationMethods;\n        },\n    };\n    return autoPaginationMethods;\n};\n/**\n * ----------------\n * Private Helpers:\n * ----------------\n */\nfunction getAsyncIteratorSymbol() {\n    if (typeof Symbol !== 'undefined' && Symbol.asyncIterator) {\n        return Symbol.asyncIterator;\n    }\n    // Follow the convention from libraries like iterall: https://github.com/leebyron/iterall#asynciterator-1\n    return '@@asyncIterator';\n}\nfunction getDoneCallback(args) {\n    if (args.length < 2) {\n        return null;\n    }\n    const onDone = args[1];\n    if (typeof onDone !== 'function') {\n        throw Error(`The second argument to autoPagingEach, if present, must be a callback function; received ${typeof onDone}`);\n    }\n    return onDone;\n}\n/**\n * We allow four forms of the `onItem` callback (the middle two being equivalent),\n *\n *   1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n *   2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n *   3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n *   4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n *\n * In addition to standard validation, this helper\n * coalesces the former forms into the latter form.\n */\nfunction getItemCallback(args) {\n    if (args.length === 0) {\n        return undefined;\n    }\n    const onItem = args[0];\n    if (typeof onItem !== 'function') {\n        throw Error(`The first argument to autoPagingEach, if present, must be a callback function; received ${typeof onItem}`);\n    }\n    // 4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n    if (onItem.length === 2) {\n        return onItem;\n    }\n    if (onItem.length > 2) {\n        throw Error(`The \\`onItem\\` callback function passed to autoPagingEach must accept at most two arguments; got ${onItem}`);\n    }\n    // This magically handles all three of these usecases (the latter two being functionally identical):\n    // 1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n    // 2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n    // 3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n    return function _onItem(item, next) {\n        const shouldContinue = onItem(item);\n        next(shouldContinue);\n    };\n}\nfunction getLastId(listResult, reverseIteration) {\n    const lastIdx = reverseIteration ? 0 : listResult.data.length - 1;\n    const lastItem = listResult.data[lastIdx];\n    const lastId = lastItem && lastItem.id;\n    if (!lastId) {\n        throw Error('Unexpected: No `id` found on the last item while auto-paging a list.');\n    }\n    return lastId;\n}\nfunction makeAutoPagingEach(asyncIteratorNext) {\n    return function autoPagingEach( /* onItem?, onDone? */) {\n        const args = [].slice.call(arguments);\n        const onItem = getItemCallback(args);\n        const onDone = getDoneCallback(args);\n        if (args.length > 2) {\n            throw Error(`autoPagingEach takes up to two arguments; received ${args}`);\n        }\n        const autoPagePromise = wrapAsyncIteratorWithCallback(asyncIteratorNext, \n        // @ts-ignore we might need a null check\n        onItem);\n        return callbackifyPromiseWithTimeout(autoPagePromise, onDone);\n    };\n}\nfunction makeAutoPagingToArray(autoPagingEach) {\n    return function autoPagingToArray(opts, onDone) {\n        const limit = opts && opts.limit;\n        if (!limit) {\n            throw Error('You must pass a `limit` option to autoPagingToArray, e.g., `autoPagingToArray({limit: 1000});`.');\n        }\n        if (limit > 10000) {\n            throw Error('You cannot specify a limit of more than 10,000 items to fetch in `autoPagingToArray`; use `autoPagingEach` to iterate through longer lists.');\n        }\n        const promise = new Promise((resolve, reject) => {\n            const items = [];\n            autoPagingEach((item) => {\n                items.push(item);\n                if (items.length >= limit) {\n                    return false;\n                }\n            })\n                .then(() => {\n                resolve(items);\n            })\n                .catch(reject);\n        });\n        // @ts-ignore\n        return callbackifyPromiseWithTimeout(promise, onDone);\n    };\n}\nfunction wrapAsyncIteratorWithCallback(asyncIteratorNext, onItem) {\n    return new Promise((resolve, reject) => {\n        function handleIteration(iterResult) {\n            if (iterResult.done) {\n                resolve();\n                return;\n            }\n            const item = iterResult.value;\n            return new Promise((next) => {\n                // Bit confusing, perhaps; we pass a `resolve` fn\n                // to the user, so they can decide when and if to continue.\n                // They can return false, or a promise which resolves to false, to break.\n                onItem(item, next);\n            }).then((shouldContinue) => {\n                if (shouldContinue === false) {\n                    return handleIteration({ done: true, value: undefined });\n                }\n                else {\n                    return asyncIteratorNext().then(handleIteration);\n                }\n            });\n        }\n        asyncIteratorNext()\n            .then(handleIteration)\n            .catch(reject);\n    });\n}\nfunction isReverseIteration(requestArgs) {\n    const args = [].slice.call(requestArgs);\n    const dataFromArgs = getDataFromArgs(args);\n    return !!dataFromArgs.ending_before;\n}\n", "import { callbackifyPromiseWithTimeout, extractUrlParams } from './utils.js';\nimport { makeAutoPaginationMethods } from './autoPagination.js';\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.fullPath=''] Fully qualified path to the method (eg. /v1/a/b/c).\n *  If this is specified, path should not be specified.\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n *\n * <!-- Public API accessible via Stripe.StripeResource.method -->\n */\nexport function stripeMethod(spec) {\n    if (spec.path !== undefined && spec.fullPath !== undefined) {\n        throw new Error(`Method spec specified both a 'path' (${spec.path}) and a 'fullPath' (${spec.fullPath}).`);\n    }\n    return function (...args) {\n        const callback = typeof args[args.length - 1] == 'function' && args.pop();\n        spec.urlParams = extractUrlParams(spec.fullPath || this.createResourcePathWithSymbols(spec.path || ''));\n        const requestPromise = callbackifyPromiseWithTimeout(this._makeRequest(args, spec, {}), callback);\n        Object.assign(requestPromise, makeAutoPaginationMethods(this, args, spec, requestPromise));\n        return requestPromise;\n    };\n}\n", "import { getDataFromArgs, getOptionsFromArgs, makeURLInterpolator, protoExtend, stringifyRequestData, } from './utils.js';\nimport { stripeMethod } from './StripeMethod.js';\n// Provide extension mechanism for Stripe Resource Sub-Classes\nStripeResource.extend = protoExtend;\n// Expose method-creator\nStripeResource.method = stripeMethod;\nStripeResource.MAX_BUFFERED_REQUEST_METRICS = 100;\n/**\n * Encapsulates request logic for a Stripe Resource\n */\nfunction StripeResource(stripe, deprecatedUrlData) {\n    this._stripe = stripe;\n    if (deprecatedUrlData) {\n        throw new Error('Support for curried url params was dropped in stripe-node v7.0.0. Instead, pass two ids.');\n    }\n    this.basePath = makeURLInterpolator(\n    // @ts-ignore changing type of basePath\n    this.basePath || stripe.getApiField('basePath'));\n    // @ts-ignore changing type of path\n    this.resourcePath = this.path;\n    // @ts-ignore changing type of path\n    this.path = makeURLInterpolator(this.path);\n    this.initialize(...arguments);\n}\nStripeResource.prototype = {\n    _stripe: null,\n    // @ts-ignore the type of path changes in ctor\n    path: '',\n    resourcePath: '',\n    // Methods that don't use the API's default '/v1' path can override it with this setting.\n    basePath: null,\n    initialize() { },\n    // Function to override the default data processor. This allows full control\n    // over how a StripeResource's request data will get converted into an HTTP\n    // body. This is useful for non-standard HTTP requests. The function should\n    // take method name, data, and headers as arguments.\n    requestDataProcessor: null,\n    // Function to add a validation checks before sending the request, errors should\n    // be thrown, and they will be passed to the callback/promise.\n    validateRequest: null,\n    createFullPath(commandPath, urlData) {\n        const urlParts = [this.basePath(urlData), this.path(urlData)];\n        if (typeof commandPath === 'function') {\n            const computedCommandPath = commandPath(urlData);\n            // If we have no actual command path, we just omit it to avoid adding a\n            // trailing slash. This is important for top-level listing requests, which\n            // do not have a command path.\n            if (computedCommandPath) {\n                urlParts.push(computedCommandPath);\n            }\n        }\n        else {\n            urlParts.push(commandPath);\n        }\n        return this._joinUrlParts(urlParts);\n    },\n    // Creates a relative resource path with symbols left in (unlike\n    // createFullPath which takes some data to replace them with). For example it\n    // might produce: /invoices/{id}\n    createResourcePathWithSymbols(pathWithSymbols) {\n        // If there is no path beyond the resource path, we want to produce just\n        // /<resource path> rather than /<resource path>/.\n        if (pathWithSymbols) {\n            return `/${this._joinUrlParts([this.resourcePath, pathWithSymbols])}`;\n        }\n        else {\n            return `/${this.resourcePath}`;\n        }\n    },\n    _joinUrlParts(parts) {\n        // Replace any accidentally doubled up slashes. This previously used\n        // path.join, which would do this as well. Unfortunately we need to do this\n        // as the functions for creating paths are technically part of the public\n        // interface and so we need to preserve backwards compatibility.\n        return parts.join('/').replace(/\\/{2,}/g, '/');\n    },\n    _getRequestOpts(requestArgs, spec, overrideData) {\n        // Extract spec values with defaults.\n        const requestMethod = (spec.method || 'GET').toUpperCase();\n        const usage = spec.usage || [];\n        const urlParams = spec.urlParams || [];\n        const encode = spec.encode || ((data) => data);\n        const isUsingFullPath = !!spec.fullPath;\n        const commandPath = makeURLInterpolator(isUsingFullPath ? spec.fullPath : spec.path || '');\n        // When using fullPath, we ignore the resource path as it should already be\n        // fully qualified.\n        const path = isUsingFullPath\n            ? spec.fullPath\n            : this.createResourcePathWithSymbols(spec.path);\n        // Don't mutate args externally.\n        const args = [].slice.call(requestArgs);\n        // Generate and validate url params.\n        const urlData = urlParams.reduce((urlData, param) => {\n            const arg = args.shift();\n            if (typeof arg !== 'string') {\n                throw new Error(`Stripe: Argument \"${param}\" must be a string, but got: ${arg} (on API request to \\`${requestMethod} ${path}\\`)`);\n            }\n            urlData[param] = arg;\n            return urlData;\n        }, {});\n        // Pull request data and options (headers, auth) from args.\n        const dataFromArgs = getDataFromArgs(args);\n        const data = encode(Object.assign({}, dataFromArgs, overrideData));\n        const options = getOptionsFromArgs(args);\n        const host = options.host || spec.host;\n        const streaming = !!spec.streaming;\n        // Validate that there are no more args.\n        if (args.filter((x) => x != null).length) {\n            throw new Error(`Stripe: Unknown arguments (${args}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options. (on API request to ${requestMethod} \\`${path}\\`)`);\n        }\n        // When using full path, we can just invoke the URL interpolator directly\n        // as we don't need to use the resource to create a full path.\n        const requestPath = isUsingFullPath\n            ? commandPath(urlData)\n            : this.createFullPath(commandPath, urlData);\n        const headers = Object.assign(options.headers, spec.headers);\n        if (spec.validator) {\n            spec.validator(data, { headers });\n        }\n        const dataInQuery = spec.method === 'GET' || spec.method === 'DELETE';\n        const bodyData = dataInQuery ? {} : data;\n        const queryData = dataInQuery ? data : {};\n        return {\n            requestMethod,\n            requestPath,\n            bodyData,\n            queryData,\n            auth: options.auth,\n            headers,\n            host: host !== null && host !== void 0 ? host : null,\n            streaming,\n            settings: options.settings,\n            usage,\n        };\n    },\n    _makeRequest(requestArgs, spec, overrideData) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            let opts;\n            try {\n                opts = this._getRequestOpts(requestArgs, spec, overrideData);\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(spec.transformResponseData\n                        ? spec.transformResponseData(response)\n                        : response);\n                }\n            }\n            const emptyQuery = Object.keys(opts.queryData).length === 0;\n            const path = [\n                opts.requestPath,\n                emptyQuery ? '' : '?',\n                stringifyRequestData(opts.queryData),\n            ].join('');\n            const { headers, settings } = opts;\n            this._stripe._requestSender._request(opts.requestMethod, opts.host, path, opts.bodyData, opts.auth, { headers, settings, streaming: opts.streaming }, opts.usage, requestCallback, (_a = this.requestDataProcessor) === null || _a === void 0 ? void 0 : _a.bind(this));\n        });\n    },\n};\nexport { StripeResource };\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Accounts = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts',\n        methodType: 'list',\n    }),\n    disconnect: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/disconnect',\n    }),\n    listOwners: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}/owners',\n        methodType: 'list',\n    }),\n    refresh: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/refresh',\n    }),\n    subscribe: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/subscribe',\n    }),\n    unsubscribe: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/unsubscribe',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ActiveEntitlements = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/active_entitlements/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/active_entitlements',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/capture',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/expire',\n    }),\n    increment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/increment',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/reverse',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/approve',\n    }),\n    decline: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/decline',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Calculations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/calculations' }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/calculations/{calculation}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cardholders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cardholders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    deliverCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/deliver',\n    }),\n    failCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/fail',\n    }),\n    returnCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/return',\n    }),\n    shipCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/ship',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/issuing/cards/{card}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards/{card}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cards',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConfirmationTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/confirmation_tokens',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConnectionTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/connection_tokens',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/credit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals/{credit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    fundCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/customers/{customer}/fund_cash_balance',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const DebitReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/debit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals/{debit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/disputes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes',\n        methodType: 'list',\n    }),\n    submit: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}/submit',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EarlyFraudWarnings = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings/{early_fraud_warning}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Features = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/entitlements/features' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/features/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/entitlements/features/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/features',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FinancialAccounts = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts',\n        methodType: 'list',\n    }),\n    retrieveFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n    updateFeatures: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/fail',\n    }),\n    returnInboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/return',\n    }),\n    succeed: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/succeed',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers/{inbound_transfer}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Locations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/locations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventAdjustments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meter_event_adjustments',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEvents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meter_events' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Meters = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meters' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/billing/meters/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meters/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/meters',\n        methodType: 'list',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meters/{id}/deactivate',\n    }),\n    listEventSummaries: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/meters/{id}/event_summaries',\n        methodType: 'list',\n    }),\n    reactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meters/{id}/reactivate',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Orders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/climate/orders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/orders/{order}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/climate/orders/{order}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/orders',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/climate/orders/{order}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/post',\n    }),\n    returnOutboundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/return',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments/{id}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post',\n    }),\n    returnOutboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PersonalizationDesigns = StripeResource.extend({\n    activate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/activate',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/deactivate',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/reject',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PersonalizationDesigns = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/personalization_designs',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/personalization_designs/{personalization_design}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/personalization_designs/{personalization_design}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/personalization_designs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PhysicalBundles = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/physical_bundles/{physical_bundle}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/physical_bundles',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/products/{product}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/products',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    presentPaymentMethod: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/present_payment_method',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/readers' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    cancelAction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/cancel_action',\n    }),\n    processPaymentIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_payment_intent',\n    }),\n    processSetupIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_setup_intent',\n    }),\n    refundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/refund_payment',\n    }),\n    setReaderDisplay: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/set_reader_display',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_credits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_debits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/refunds/{refund}/expire',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Registrations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/registrations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/registrations/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/registrations/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/registrations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportRuns = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/reporting/report_runs' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs/{report_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportTypes = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types/{report_type}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Requests = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/forwarding/requests' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/forwarding/requests/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/forwarding/requests',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ScheduledQueryRuns = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs/{scheduled_query_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Secrets = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apps/secrets' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apps/secrets',\n        methodType: 'list',\n    }),\n    deleteWhere: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/apps/secrets/delete',\n    }),\n    find: stripeMethod({ method: 'GET', fullPath: '/v1/apps/secrets/find' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/sessions',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/checkout/sessions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions',\n        methodType: 'list',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/checkout/sessions/{session}/expire',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/sessions/{session}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Settings = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax/settings' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax/settings' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Suppliers = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/suppliers/{supplier}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/suppliers',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TestClocks = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    advance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}/advance',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/tokens/{token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/tokens/{token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/tokens',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TransactionEntries = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    createForceCapture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/create_force_capture',\n    }),\n    createUnlinkedRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/create_unlinked_refund',\n    }),\n    refund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/{transaction}/refund',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}',\n    }),\n    createFromCalculation: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_from_calculation',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_reversal',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueListItems = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_list_items',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueLists = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/radar/value_lists' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationReports = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports/{report}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationSessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/cancel',\n    }),\n    redact: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/redact',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\n// Since path can either be `account` or `accounts`, support both through stripeMethod path\nexport const Accounts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/accounts' }),\n    retrieve(id, ...args) {\n        // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n        // old account ids and api keys. To request the account for an api key, send null as the id\n        if (typeof id === 'string') {\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/accounts/{id}',\n            }).apply(this, [id, ...args]);\n        }\n        else {\n            if (id === null || id === undefined) {\n                // Remove id as stripeMethod would complain of unexpected argument\n                [].shift.apply([id, ...args]);\n            }\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/account',\n            }).apply(this, [id, ...args]);\n        }\n    },\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/accounts/{account}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/accounts/{account}' }),\n    createExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n    }),\n    createLoginLink: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/login_links',\n    }),\n    createPerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons',\n    }),\n    deleteExternalAccount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    deletePerson: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    listCapabilities: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities',\n        methodType: 'list',\n    }),\n    listExternalAccounts: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n        methodType: 'list',\n    }),\n    listPersons: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons',\n        methodType: 'list',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/reject',\n    }),\n    retrieveCurrent: stripeMethod({ method: 'GET', fullPath: '/v1/account' }),\n    retrieveCapability: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    retrieveExternalAccount: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    retrievePerson: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    updateCapability: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    updateExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    updatePerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_links' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountSessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_sessions' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplePayDomains = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apple_pay/domains' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplicationFees = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees',\n        methodType: 'list',\n    }),\n    createRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{id}/refunds',\n    }),\n    listRefunds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}/refunds',\n        methodType: 'list',\n    }),\n    retrieveRefund: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n    updateRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Balance = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/balance' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const BalanceTransactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Charges = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/charges' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/charges/{charge}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/charges/{charge}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges',\n        methodType: 'list',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/charges/{charge}/capture',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConfirmationTokens = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/confirmation_tokens/{confirmation_token}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CountrySpecs = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs/{country}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Coupons = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/coupons' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/coupons/{coupon}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/coupons/{coupon}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/coupons',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/coupons/{coupon}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditNotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/{credit_note}/lines',\n        methodType: 'list',\n    }),\n    listPreviewLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/preview/lines',\n        methodType: 'list',\n    }),\n    preview: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/preview' }),\n    voidCreditNote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/credit_notes/{id}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CustomerSessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customer_sessions' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/customers/{customer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/customers/{customer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/customers/{customer}' }),\n    createBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n    }),\n    createFundingInstructions: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/funding_instructions',\n    }),\n    createSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources',\n    }),\n    createTaxId: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/discount',\n    }),\n    deleteSource: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    deleteTaxId: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    listBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n        methodType: 'list',\n    }),\n    listCashBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions',\n        methodType: 'list',\n    }),\n    listPaymentMethods: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods',\n        methodType: 'list',\n    }),\n    listSources: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources',\n        methodType: 'list',\n    }),\n    listTaxIds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n        methodType: 'list',\n    }),\n    retrieveBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    retrieveCashBalance: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    retrieveCashBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions/{transaction}',\n    }),\n    retrievePaymentMethod: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods/{payment_method}',\n    }),\n    retrieveSource: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    retrieveTaxId: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/search',\n        methodType: 'search',\n    }),\n    updateBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    updateCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    updateSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    verifySource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}/verify',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/disputes/{dispute}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/disputes/{dispute}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/disputes',\n        methodType: 'list',\n    }),\n    close: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/disputes/{dispute}/close',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EphemeralKeys = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/ephemeral_keys',\n        validator: (data, options) => {\n            if (!options.headers || !options.headers['Stripe-Version']) {\n                throw new Error('Passing apiVersion in a separate options hash is required to create an ephemeral key. See https://stripe.com/docs/api/versioning?lang=node');\n            }\n        },\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/ephemeral_keys/{key}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Events = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/events/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/events',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ExchangeRates = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates/{rate_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FileLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/file_links' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/file_links/{link}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/file_links/{link}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/file_links',\n        methodType: 'list',\n    }),\n});\n", "import { flattenAndStringify, stringifyRequestData } from './utils.js';\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n    const segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n    headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n    const textEncoder = new TextEncoder();\n    let buffer = new Uint8Array(0);\n    const endBuffer = textEncoder.encode('\\r\\n');\n    function push(l) {\n        const prevBuffer = buffer;\n        const newBuffer = l instanceof Uint8Array ? l : new Uint8Array(textEncoder.encode(l));\n        buffer = new Uint8Array(prevBuffer.length + newBuffer.length + 2);\n        buffer.set(prevBuffer);\n        buffer.set(newBuffer, prevBuffer.length);\n        buffer.set(endBuffer, buffer.length - 2);\n    }\n    function q(s) {\n        return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n    }\n    const flattenedData = flattenAndStringify(data);\n    for (const k in flattenedData) {\n        const v = flattenedData[k];\n        push(`--${segno}`);\n        if (Object.prototype.hasOwnProperty.call(v, 'data')) {\n            const typedEntry = v;\n            push(`Content-Disposition: form-data; name=${q(k)}; filename=${q(typedEntry.name || 'blob')}`);\n            push(`Content-Type: ${typedEntry.type || 'application/octet-stream'}`);\n            push('');\n            push(typedEntry.data);\n        }\n        else {\n            push(`Content-Disposition: form-data; name=${q(k)}`);\n            push('');\n            push(v);\n        }\n    }\n    push(`--${segno}--`);\n    return buffer;\n};\nexport function multipartRequestDataProcessor(method, data, headers, callback) {\n    data = data || {};\n    if (method !== 'POST') {\n        return callback(null, stringifyRequestData(data));\n    }\n    this._stripe._platformFunctions\n        .tryBufferData(data)\n        .then((bufferedData) => {\n        const buffer = multipartDataGenerator(method, bufferedData, headers);\n        return callback(null, buffer);\n    })\n        .catch((err) => callback(err, null));\n}\n", "// File generated from our OpenAPI spec\nimport { multipartRequestDataProcessor } from '../multipart.js';\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Files = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/files',\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n        host: 'files.stripe.com',\n    }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/files/{file}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/files',\n        methodType: 'list',\n    }),\n    requestDataProcessor: multipartRequestDataProcessor,\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoiceItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoiceitems' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Invoices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/invoices/{invoice}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/invoices/{invoice}' }),\n    finalizeInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/finalize',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/{invoice}/lines',\n        methodType: 'list',\n    }),\n    listUpcomingLines: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/upcoming/lines',\n        methodType: 'list',\n    }),\n    markUncollectible: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/mark_uncollectible',\n    }),\n    pay: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}/pay' }),\n    retrieveUpcoming: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/upcoming',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/search',\n        methodType: 'search',\n    }),\n    sendInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/send',\n    }),\n    updateLineItem: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/lines/{line_item_id}',\n    }),\n    voidInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Mandates = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/mandates/{mandate}' }),\n});\n", "'use strict';\nimport { StripeResource } from '../StripeResource.js';\nimport { stringifyRequestData } from '../utils.js';\nconst stripeMethod = StripeResource.method;\nconst oAuthHost = 'connect.stripe.com';\nexport const OAuth = StripeResource.extend({\n    basePath: '/',\n    authorizeUrl(params, options) {\n        params = params || {};\n        options = options || {};\n        let path = 'oauth/authorize';\n        // For Express accounts, the path changes\n        if (options.express) {\n            path = `express/${path}`;\n        }\n        if (!params.response_type) {\n            params.response_type = 'code';\n        }\n        if (!params.client_id) {\n            params.client_id = this._stripe.getClientId();\n        }\n        if (!params.scope) {\n            params.scope = 'read_write';\n        }\n        return `https://${oAuthHost}/${path}?${stringifyRequestData(params)}`;\n    },\n    token: stripeMethod({\n        method: 'POST',\n        path: 'oauth/token',\n        host: oAuthHost,\n    }),\n    deauthorize(spec, ...args) {\n        if (!spec.client_id) {\n            spec.client_id = this._stripe.getClientId();\n        }\n        return stripeMethod({\n            method: 'POST',\n            path: 'oauth/deauthorize',\n            host: oAuthHost,\n        }).apply(this, [spec, ...args]);\n    },\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents',\n        methodType: 'list',\n    }),\n    applyCustomerBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/apply_customer_balance',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/cancel',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/capture',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/confirm',\n    }),\n    incrementAuthorization: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/increment_authorization',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/search',\n        methodType: 'search',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/verify_microdeposits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_links' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethodConfigurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_configurations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethodDomains = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_domains',\n        methodType: 'list',\n    }),\n    validate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}/validate',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethods = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_methods' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods',\n        methodType: 'list',\n    }),\n    attach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/attach',\n    }),\n    detach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/detach',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Payouts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payouts' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/payouts/{payout}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/payouts/{payout}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payouts',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/cancel',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/reverse',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Plans = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/plans' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/plans/{plan}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/plans/{plan}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/plans',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/plans/{plan}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Prices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/prices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/prices/{price}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/prices/{price}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices',\n        methodType: 'list',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/products' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/products/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/products/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/products/{id}' }),\n    createFeature: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/products/{product}/features',\n    }),\n    deleteFeature: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/products/{product}/features/{id}',\n    }),\n    listFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/{product}/features',\n        methodType: 'list',\n    }),\n    retrieveFeature: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/{product}/features/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PromotionCodes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/promotion_codes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Quotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/quotes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/quotes/{quote}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes',\n        methodType: 'list',\n    }),\n    accept: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/accept' }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/cancel' }),\n    finalizeQuote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/quotes/{quote}/finalize',\n    }),\n    listComputedUpfrontLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/computed_upfront_line_items',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/line_items',\n        methodType: 'list',\n    }),\n    pdf: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/pdf',\n        host: 'files.stripe.com',\n        streaming: true,\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/refunds' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/refunds/{refund}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/refunds/{refund}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/refunds',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/refunds/{refund}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Reviews = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/reviews/{review}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reviews',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/reviews/{review}/approve',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupAttempts = StripeResource.extend({\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_attempts',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/setup_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/cancel',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/confirm',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/verify_microdeposits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ShippingRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/shipping_rates' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sources = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/sources' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/sources/{source}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/sources/{source}' }),\n    listSourceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sources/{source}/source_transactions',\n        methodType: 'list',\n    }),\n    verify: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/sources/{source}/verify',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscription_items' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    createUsageRecord: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_items/{subscription_item}/usage_records',\n    }),\n    listUsageRecordSummaries: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items/{subscription_item}/usage_record_summaries',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionSchedules = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/cancel',\n    }),\n    release: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/release',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Subscriptions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscriptions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}/discount',\n    }),\n    resume: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription}/resume',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxCodes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_codes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_codes',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxIds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_ids' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_ids/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_ids',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/tax_ids/{id}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tokens' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tokens/{token}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Topups = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/topups' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/topups/{topup}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/topups',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}/cancel' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transfers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/transfers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/transfers/{transfer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/transfers/{transfer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers',\n        methodType: 'list',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{id}/reversals',\n    }),\n    listReversals: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{id}/reversals',\n        methodType: 'list',\n    }),\n    retrieveReversal: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n    updateReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const WebhookEndpoints = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/webhook_endpoints' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n});\n", "import { StripeAPIError, StripeAuthenticationError, StripeConnectionError, StripeError, StripePermissionError, StripeRateLimitError, } from './Error.js';\nimport { emitWarning, normalizeHeaders, removeNullish, stringifyRequestData, } from './utils.js';\nimport { HttpClient } from './net/HttpClient.js';\nconst MAX_RETRY_AFTER_WAIT = 60;\nexport class RequestSender {\n    constructor(stripe, maxBufferedRequestMetric) {\n        this._stripe = stripe;\n        this._maxBufferedRequestMetric = maxBufferedRequestMetric;\n    }\n    _addHeadersDirectlyToObject(obj, headers) {\n        // For convenience, make some headers easily accessible on\n        // lastResponse.\n        // NOTE: Stripe responds with lowercase header names/keys.\n        obj.requestId = headers['request-id'];\n        obj.stripeAccount = obj.stripeAccount || headers['stripe-account'];\n        obj.apiVersion = obj.apiVersion || headers['stripe-version'];\n        obj.idempotencyKey = obj.idempotencyKey || headers['idempotency-key'];\n    }\n    _makeResponseEvent(requestEvent, statusCode, headers) {\n        const requestEndTime = Date.now();\n        const requestDurationMs = requestEndTime - requestEvent.request_start_time;\n        return removeNullish({\n            api_version: headers['stripe-version'],\n            account: headers['stripe-account'],\n            idempotency_key: headers['idempotency-key'],\n            method: requestEvent.method,\n            path: requestEvent.path,\n            status: statusCode,\n            request_id: this._getRequestId(headers),\n            elapsed: requestDurationMs,\n            request_start_time: requestEvent.request_start_time,\n            request_end_time: requestEndTime,\n        });\n    }\n    _getRequestId(headers) {\n        return headers['request-id'];\n    }\n    /**\n     * Used by methods with spec.streaming === true. For these methods, we do not\n     * buffer successful responses into memory or do parse them into stripe\n     * objects, we delegate that all of that to the user and pass back the raw\n     * http.Response object to the callback.\n     *\n     * (Unsuccessful responses shouldn't make it here, they should\n     * still be buffered/parsed and handled by _jsonResponseHandler -- see\n     * makeRequest)\n     */\n    _streamingResponseHandler(requestEvent, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const streamCompleteCallback = () => {\n                const responseEvent = this._makeResponseEvent(requestEvent, res.getStatusCode(), headers);\n                this._stripe._emitter.emit('response', responseEvent);\n                this._recordRequestMetrics(this._getRequestId(headers), responseEvent.elapsed, usage);\n            };\n            const stream = res.toStream(streamCompleteCallback);\n            // This is here for backwards compatibility, as the stream is a raw\n            // HTTP response in Node and the legacy behavior was to mutate this\n            // response.\n            this._addHeadersDirectlyToObject(stream, headers);\n            return callback(null, stream);\n        };\n    }\n    /**\n     * Default handler for Stripe responses. Buffers the response into memory,\n     * parses the JSON and returns it (i.e. passes it to the callback) if there\n     * is no \"error\" field. Otherwise constructs/passes an appropriate Error.\n     */\n    _jsonResponseHandler(requestEvent, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const requestId = this._getRequestId(headers);\n            const statusCode = res.getStatusCode();\n            const responseEvent = this._makeResponseEvent(requestEvent, statusCode, headers);\n            this._stripe._emitter.emit('response', responseEvent);\n            res\n                .toJSON()\n                .then((jsonResponse) => {\n                if (jsonResponse.error) {\n                    let err;\n                    // Convert OAuth error responses into a standard format\n                    // so that the rest of the error logic can be shared\n                    if (typeof jsonResponse.error === 'string') {\n                        jsonResponse.error = {\n                            type: jsonResponse.error,\n                            message: jsonResponse.error_description,\n                        };\n                    }\n                    jsonResponse.error.headers = headers;\n                    jsonResponse.error.statusCode = statusCode;\n                    jsonResponse.error.requestId = requestId;\n                    if (statusCode === 401) {\n                        err = new StripeAuthenticationError(jsonResponse.error);\n                    }\n                    else if (statusCode === 403) {\n                        err = new StripePermissionError(jsonResponse.error);\n                    }\n                    else if (statusCode === 429) {\n                        err = new StripeRateLimitError(jsonResponse.error);\n                    }\n                    else {\n                        err = StripeError.generate(jsonResponse.error);\n                    }\n                    throw err;\n                }\n                return jsonResponse;\n            }, (e) => {\n                throw new StripeAPIError({\n                    message: 'Invalid JSON received from the Stripe API',\n                    exception: e,\n                    requestId: headers['request-id'],\n                });\n            })\n                .then((jsonResponse) => {\n                this._recordRequestMetrics(requestId, responseEvent.elapsed, usage);\n                // Expose raw response object.\n                const rawResponse = res.getRawResponse();\n                this._addHeadersDirectlyToObject(rawResponse, headers);\n                Object.defineProperty(jsonResponse, 'lastResponse', {\n                    enumerable: false,\n                    writable: false,\n                    value: rawResponse,\n                });\n                callback(null, jsonResponse);\n            }, (e) => callback(e, null));\n        };\n    }\n    static _generateConnectionErrorMessage(requestRetries) {\n        return `An error occurred with our connection to Stripe.${requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''}`;\n    }\n    // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n    static _shouldRetry(res, numRetries, maxRetries, error) {\n        if (error &&\n            numRetries === 0 &&\n            HttpClient.CONNECTION_CLOSED_ERROR_CODES.includes(error.code)) {\n            return true;\n        }\n        // Do not retry if we are out of retries.\n        if (numRetries >= maxRetries) {\n            return false;\n        }\n        // Retry on connection error.\n        if (!res) {\n            return true;\n        }\n        // The API may ask us not to retry (e.g., if doing so would be a no-op)\n        // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n        if (res.getHeaders()['stripe-should-retry'] === 'false') {\n            return false;\n        }\n        if (res.getHeaders()['stripe-should-retry'] === 'true') {\n            return true;\n        }\n        // Retry on conflict errors.\n        if (res.getStatusCode() === 409) {\n            return true;\n        }\n        // Retry on 500, 503, and other internal errors.\n        //\n        // Note that we expect the stripe-should-retry header to be false\n        // in most cases when a 500 is returned, since our idempotency framework\n        // would typically replay it anyway.\n        if (res.getStatusCode() >= 500) {\n            return true;\n        }\n        return false;\n    }\n    _getSleepTimeInMS(numRetries, retryAfter = null) {\n        const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n        const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n        // Apply exponential backoff with initialNetworkRetryDelay on the\n        // number of numRetries so far as inputs. Do not allow the number to exceed\n        // maxNetworkRetryDelay.\n        let sleepSeconds = Math.min(initialNetworkRetryDelay * Math.pow(numRetries - 1, 2), maxNetworkRetryDelay);\n        // Apply some jitter by randomizing the value in the range of\n        // (sleepSeconds / 2) to (sleepSeconds).\n        sleepSeconds *= 0.5 * (1 + Math.random());\n        // But never sleep less than the base sleep seconds.\n        sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n        // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n        if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n            sleepSeconds = Math.max(sleepSeconds, retryAfter);\n        }\n        return sleepSeconds * 1000;\n    }\n    // Max retries can be set on a per request basis. Favor those over the global setting\n    _getMaxNetworkRetries(settings = {}) {\n        return settings.maxNetworkRetries !== undefined &&\n            Number.isInteger(settings.maxNetworkRetries)\n            ? settings.maxNetworkRetries\n            : this._stripe.getMaxNetworkRetries();\n    }\n    _defaultIdempotencyKey(method, settings) {\n        // If this is a POST and we allow multiple retries, ensure an idempotency key.\n        const maxRetries = this._getMaxNetworkRetries(settings);\n        if (method === 'POST' && maxRetries > 0) {\n            return `stripe-node-retry-${this._stripe._platformFunctions.uuid4()}`;\n        }\n        return null;\n    }\n    _makeHeaders(auth, contentLength, apiVersion, clientUserAgent, method, userSuppliedHeaders, userSuppliedSettings) {\n        const defaultHeaders = {\n            // Use specified auth token or use default from this stripe instance:\n            Authorization: auth ? `Bearer ${auth}` : this._stripe.getApiField('auth'),\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'User-Agent': this._getUserAgentString(),\n            'X-Stripe-Client-User-Agent': clientUserAgent,\n            'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n            'Stripe-Version': apiVersion,\n            'Stripe-Account': this._stripe.getApiField('stripeAccount'),\n            'Idempotency-Key': this._defaultIdempotencyKey(method, userSuppliedSettings),\n        };\n        // As per https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2:\n        //   A user agent SHOULD send a Content-Length in a request message when\n        //   no Transfer-Encoding is sent and the request method defines a meaning\n        //   for an enclosed payload body.  For example, a Content-Length header\n        //   field is normally sent in a POST request even when the value is 0\n        //   (indicating an empty payload body).  A user agent SHOULD NOT send a\n        //   Content-Length header field when the request message does not contain\n        //   a payload body and the method semantics do not anticipate such a\n        //   body.\n        //\n        // These method types are expected to have bodies and so we should always\n        // include a Content-Length.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        // If a content length was specified, we always include it regardless of\n        // whether the method semantics anticipate such a body. This keeps us\n        // consistent with historical behavior. We do however want to warn on this\n        // and fix these cases as they are semantically incorrect.\n        if (methodHasPayload || contentLength) {\n            if (!methodHasPayload) {\n                emitWarning(`${method} method had non-zero contentLength but no payload is expected for this verb`);\n            }\n            defaultHeaders['Content-Length'] = contentLength;\n        }\n        return Object.assign(removeNullish(defaultHeaders), \n        // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n        normalizeHeaders(userSuppliedHeaders));\n    }\n    _getUserAgentString() {\n        const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n        const appInfo = this._stripe._appInfo\n            ? this._stripe.getAppInfoAsString()\n            : '';\n        return `Stripe/v1 NodeBindings/${packageVersion} ${appInfo}`.trim();\n    }\n    _getTelemetryHeader() {\n        if (this._stripe.getTelemetryEnabled() &&\n            this._stripe._prevRequestMetrics.length > 0) {\n            const metrics = this._stripe._prevRequestMetrics.shift();\n            return JSON.stringify({\n                last_request_metrics: metrics,\n            });\n        }\n    }\n    _recordRequestMetrics(requestId, requestDurationMs, usage) {\n        if (this._stripe.getTelemetryEnabled() && requestId) {\n            if (this._stripe._prevRequestMetrics.length > this._maxBufferedRequestMetric) {\n                emitWarning('Request metrics buffer is full, dropping telemetry message.');\n            }\n            else {\n                const m = {\n                    request_id: requestId,\n                    request_duration_ms: requestDurationMs,\n                };\n                if (usage && usage.length > 0) {\n                    m.usage = usage;\n                }\n                this._stripe._prevRequestMetrics.push(m);\n            }\n        }\n    }\n    _request(method, host, path, data, auth, options = {}, usage = [], callback, requestDataProcessor = null) {\n        let requestData;\n        const retryRequest = (requestFn, apiVersion, headers, requestRetries, retryAfter) => {\n            return setTimeout(requestFn, this._getSleepTimeInMS(requestRetries, retryAfter), apiVersion, headers, requestRetries + 1);\n        };\n        const makeRequest = (apiVersion, headers, numRetries) => {\n            // timeout can be set on a per-request basis. Favor that over the global setting\n            const timeout = options.settings &&\n                options.settings.timeout &&\n                Number.isInteger(options.settings.timeout) &&\n                options.settings.timeout >= 0\n                ? options.settings.timeout\n                : this._stripe.getApiField('timeout');\n            const req = this._stripe\n                .getApiField('httpClient')\n                .makeRequest(host || this._stripe.getApiField('host'), this._stripe.getApiField('port'), path, method, headers, requestData, this._stripe.getApiField('protocol'), timeout);\n            const requestStartTime = Date.now();\n            // @ts-ignore\n            const requestEvent = removeNullish({\n                api_version: apiVersion,\n                account: headers['Stripe-Account'],\n                idempotency_key: headers['Idempotency-Key'],\n                method,\n                path,\n                request_start_time: requestStartTime,\n            });\n            const requestRetries = numRetries || 0;\n            const maxRetries = this._getMaxNetworkRetries(options.settings || {});\n            this._stripe._emitter.emit('request', requestEvent);\n            req\n                .then((res) => {\n                if (RequestSender._shouldRetry(res, requestRetries, maxRetries)) {\n                    return retryRequest(makeRequest, apiVersion, headers, requestRetries, \n                    // @ts-ignore\n                    res.getHeaders()['retry-after']);\n                }\n                else if (options.streaming && res.getStatusCode() < 400) {\n                    return this._streamingResponseHandler(requestEvent, usage, callback)(res);\n                }\n                else {\n                    return this._jsonResponseHandler(requestEvent, usage, callback)(res);\n                }\n            })\n                .catch((error) => {\n                if (RequestSender._shouldRetry(null, requestRetries, maxRetries, error)) {\n                    return retryRequest(makeRequest, apiVersion, headers, requestRetries, null);\n                }\n                else {\n                    const isTimeoutError = error.code && error.code === HttpClient.TIMEOUT_ERROR_CODE;\n                    return callback(new StripeConnectionError({\n                        message: isTimeoutError\n                            ? `Request aborted due to timeout being reached (${timeout}ms)`\n                            : RequestSender._generateConnectionErrorMessage(requestRetries),\n                        // @ts-ignore\n                        detail: error,\n                    }));\n                }\n            });\n        };\n        const prepareAndMakeRequest = (error, data) => {\n            if (error) {\n                return callback(error);\n            }\n            requestData = data;\n            this._stripe.getClientUserAgent((clientUserAgent) => {\n                var _a, _b;\n                const apiVersion = this._stripe.getApiField('version');\n                const headers = this._makeHeaders(auth, requestData.length, apiVersion, clientUserAgent, method, (_a = options.headers) !== null && _a !== void 0 ? _a : null, (_b = options.settings) !== null && _b !== void 0 ? _b : {});\n                makeRequest(apiVersion, headers, 0);\n            });\n        };\n        if (requestDataProcessor) {\n            requestDataProcessor(method, data, options.headers, prepareAndMakeRequest);\n        }\n        else {\n            prepareAndMakeRequest(null, stringifyRequestData(data || {}));\n        }\n    }\n}\n", "import { StripeError, StripeSignatureVerificationError } from './Error.js';\nimport { CryptoProviderOnlySupportsAsyncError, } from './crypto/CryptoProvider.js';\nexport function createWebhooks(platformFunctions) {\n    const Webhook = {\n        DEFAULT_TOLERANCE: 300,\n        // @ts-ignore\n        signature: null,\n        constructEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            try {\n                this.signature.verifyHeader(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            }\n            catch (e) {\n                if (e instanceof CryptoProviderOnlySupportsAsyncError) {\n                    e.message +=\n                        '\\nUse `await constructEventAsync(...)` instead of `constructEvent(...)`';\n                }\n                throw e;\n            }\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        async constructEventAsync(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            await this.signature.verifyHeaderAsync(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        /**\n         * Generates a header to be used for webhook mocking\n         *\n         * @typedef {object} opts\n         * @property {number} timestamp - Timestamp of the header. Defaults to Date.now()\n         * @property {string} payload - JSON stringified payload object, containing the 'id' and 'object' parameters\n         * @property {string} secret - Stripe webhook secret 'whsec_...'\n         * @property {string} scheme - Version of API to hit. Defaults to 'v1'.\n         * @property {string} signature - Computed webhook signature\n         * @property {CryptoProvider} cryptoProvider - Crypto provider to use for computing the signature if none was provided. Defaults to NodeCryptoProvider.\n         */\n        generateTestHeaderString: function (opts) {\n            if (!opts) {\n                throw new StripeError({\n                    message: 'Options are required',\n                });\n            }\n            opts.timestamp =\n                Math.floor(opts.timestamp) || Math.floor(Date.now() / 1000);\n            opts.scheme = opts.scheme || signature.EXPECTED_SCHEME;\n            opts.cryptoProvider = opts.cryptoProvider || getCryptoProvider();\n            opts.signature =\n                opts.signature ||\n                    opts.cryptoProvider.computeHMACSignature(opts.timestamp + '.' + opts.payload, opts.secret);\n            const generatedHeader = [\n                't=' + opts.timestamp,\n                opts.scheme + '=' + opts.signature,\n            ].join(',');\n            return generatedHeader;\n        },\n    };\n    const signature = {\n        EXPECTED_SCHEME: 'v1',\n        verifyHeader(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = cryptoProvider.computeHMACSignature(makeHMACContent(payload, details), secret);\n            validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n            return true;\n        },\n        async verifyHeaderAsync(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = await cryptoProvider.computeHMACSignatureAsync(makeHMACContent(payload, details), secret);\n            return validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n        },\n    };\n    function makeHMACContent(payload, details) {\n        return `${details.timestamp}.${payload}`;\n    }\n    function parseEventDetails(encodedPayload, encodedHeader, expectedScheme) {\n        if (!encodedPayload) {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No webhook payload was provided.',\n            });\n        }\n        const suspectPayloadType = typeof encodedPayload != 'string' &&\n            !(encodedPayload instanceof Uint8Array);\n        const textDecoder = new TextDecoder('utf8');\n        const decodedPayload = encodedPayload instanceof Uint8Array\n            ? textDecoder.decode(encodedPayload)\n            : encodedPayload;\n        // Express's type for `Request#headers` is `string | []string`\n        // which is because the `set-cookie` header is an array,\n        // but no other headers are an array (docs: https://nodejs.org/api/http.html#http_message_headers)\n        // (Express's Request class is an extension of http.IncomingMessage, and doesn't appear to be relevantly modified: https://github.com/expressjs/express/blob/master/lib/request.js#L31)\n        if (Array.isArray(encodedHeader)) {\n            throw new Error('Unexpected: An array was passed as a header, which should not be possible for the stripe-signature header.');\n        }\n        if (encodedHeader == null || encodedHeader == '') {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No stripe-signature header value was provided.',\n            });\n        }\n        const decodedHeader = encodedHeader instanceof Uint8Array\n            ? textDecoder.decode(encodedHeader)\n            : encodedHeader;\n        const details = parseHeader(decodedHeader, expectedScheme);\n        if (!details || details.timestamp === -1) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'Unable to extract timestamp and signatures from header',\n            });\n        }\n        if (!details.signatures.length) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'No signatures found with expected scheme',\n            });\n        }\n        return {\n            decodedPayload,\n            decodedHeader,\n            details,\n            suspectPayloadType,\n        };\n    }\n    function validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt) {\n        const signatureFound = !!details.signatures.filter(platformFunctions.secureCompare.bind(platformFunctions, expectedSignature)).length;\n        const docsLocation = '\\nLearn more about webhook signing and explore webhook integration examples for various frameworks at ' +\n            'https://github.com/stripe/stripe-node#webhook-signing';\n        const whitespaceMessage = secretContainsWhitespace\n            ? '\\n\\nNote: The provided signing secret contains whitespace. This often indicates an extra newline or space is in the value'\n            : '';\n        if (!signatureFound) {\n            if (suspectPayloadType) {\n                throw new StripeSignatureVerificationError(header, payload, {\n                    message: 'Webhook payload must be provided as a string or a Buffer (https://nodejs.org/api/buffer.html) instance representing the _raw_ request body.' +\n                        'Payload was provided as a parsed JavaScript object instead. \\n' +\n                        'Signature verification is impossible without access to the original signed material. \\n' +\n                        docsLocation +\n                        '\\n' +\n                        whitespaceMessage,\n                });\n            }\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'No signatures found matching the expected signature for payload.' +\n                    ' Are you passing the raw request body you received from Stripe? \\n' +\n                    ' If a webhook request is being forwarded by a third-party tool,' +\n                    ' ensure that the exact request body, including JSON formatting and new line style, is preserved.\\n' +\n                    docsLocation +\n                    '\\n' +\n                    whitespaceMessage,\n            });\n        }\n        const timestampAge = Math.floor((typeof receivedAt === 'number' ? receivedAt : Date.now()) / 1000) - details.timestamp;\n        if (tolerance > 0 && timestampAge > tolerance) {\n            // @ts-ignore\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'Timestamp outside the tolerance zone',\n            });\n        }\n        return true;\n    }\n    function parseHeader(header, scheme) {\n        if (typeof header !== 'string') {\n            return null;\n        }\n        return header.split(',').reduce((accum, item) => {\n            const kv = item.split('=');\n            if (kv[0] === 't') {\n                accum.timestamp = parseInt(kv[1], 10);\n            }\n            if (kv[0] === scheme) {\n                accum.signatures.push(kv[1]);\n            }\n            return accum;\n        }, {\n            timestamp: -1,\n            signatures: [],\n        });\n    }\n    let webhooksCryptoProviderInstance = null;\n    /**\n     * Lazily instantiate a CryptoProvider instance. This is a stateless object\n     * so a singleton can be used here.\n     */\n    function getCryptoProvider() {\n        if (!webhooksCryptoProviderInstance) {\n            webhooksCryptoProviderInstance = platformFunctions.createDefaultCryptoProvider();\n        }\n        return webhooksCryptoProviderInstance;\n    }\n    Webhook.signature = signature;\n    return Webhook;\n}\n", "import * as _Error from './Error.js';\nimport * as apiVersion from './apiVersion.js';\nimport * as resources from './resources.js';\nimport { HttpClient, HttpClientResponse } from './net/HttpClient.js';\nimport { determineProcessUserAgentProperties, pascalToCamelCase, validateInteger, } from './utils.js';\nimport { CryptoProvider } from './crypto/CryptoProvider.js';\nimport { RequestSender } from './RequestSender.js';\nimport { StripeResource } from './StripeResource.js';\nimport { createWebhooks } from './Webhooks.js';\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = apiVersion.ApiVersion;\nconst DEFAULT_TIMEOUT = 80000;\nconst MAX_NETWORK_RETRY_DELAY_SEC = 2;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = [\n    'apiVersion',\n    'typescript',\n    'maxNetworkRetries',\n    'httpAgent',\n    'httpClient',\n    'timeout',\n    'host',\n    'port',\n    'protocol',\n    'telemetry',\n    'appInfo',\n    'stripeAccount',\n];\nconst defaultRequestSenderFactory = (stripe) => new RequestSender(stripe, StripeResource.MAX_BUFFERED_REQUEST_METRICS);\nexport function createStripe(platformFunctions, requestSender = defaultRequestSenderFactory) {\n    Stripe.PACKAGE_VERSION = '14.25.0';\n    Stripe.USER_AGENT = Object.assign({ bindings_version: Stripe.PACKAGE_VERSION, lang: 'node', publisher: 'stripe', uname: null, typescript: false }, determineProcessUserAgentProperties());\n    Stripe.StripeResource = StripeResource;\n    Stripe.resources = resources;\n    Stripe.HttpClient = HttpClient;\n    Stripe.HttpClientResponse = HttpClientResponse;\n    Stripe.CryptoProvider = CryptoProvider;\n    // Previously Stripe.webhooks was just the createWebhooks() factory function\n    // however going forward it will be a WebhookObject instance. To maintain\n    // backwards compatibility it is currently a factory function that also\n    // complies to the WebhookObject signature. The factory function signature\n    // will be removed as a breaking change in the next major release.\n    // See https://github.com/stripe/stripe-node/issues/1956\n    function createWebhooksDefault(fns = platformFunctions) {\n        return createWebhooks(fns);\n    }\n    Stripe.webhooks = Object.assign(createWebhooksDefault, createWebhooks(platformFunctions));\n    function Stripe(key, config = {}) {\n        if (!(this instanceof Stripe)) {\n            return new Stripe(key, config);\n        }\n        const props = this._getPropsFromConfig(config);\n        this._platformFunctions = platformFunctions;\n        Object.defineProperty(this, '_emitter', {\n            value: this._platformFunctions.createEmitter(),\n            enumerable: false,\n            configurable: false,\n            writable: false,\n        });\n        this.VERSION = Stripe.PACKAGE_VERSION;\n        this.on = this._emitter.on.bind(this._emitter);\n        this.once = this._emitter.once.bind(this._emitter);\n        this.off = this._emitter.removeListener.bind(this._emitter);\n        const agent = props.httpAgent || null;\n        this._api = {\n            auth: null,\n            host: props.host || DEFAULT_HOST,\n            port: props.port || DEFAULT_PORT,\n            protocol: props.protocol || 'https',\n            basePath: DEFAULT_BASE_PATH,\n            version: props.apiVersion || DEFAULT_API_VERSION,\n            timeout: validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n            maxNetworkRetries: validateInteger('maxNetworkRetries', props.maxNetworkRetries, 1),\n            agent: agent,\n            httpClient: props.httpClient ||\n                (agent\n                    ? this._platformFunctions.createNodeHttpClient(agent)\n                    : this._platformFunctions.createDefaultHttpClient()),\n            dev: false,\n            stripeAccount: props.stripeAccount || null,\n        };\n        const typescript = props.typescript || false;\n        if (typescript !== Stripe.USER_AGENT.typescript) {\n            // The mutation here is uncomfortable, but likely fastest;\n            // serializing the user agent involves shelling out to the system,\n            // and given some users may instantiate the library many times without switching between TS and non-TS,\n            // we only want to incur the performance hit when that actually happens.\n            Stripe.USER_AGENT.typescript = typescript;\n        }\n        if (props.appInfo) {\n            this._setAppInfo(props.appInfo);\n        }\n        this._prepResources();\n        this._setApiKey(key);\n        this.errors = _Error;\n        // Once Stripe.webhooks looses the factory function signature in a future release\n        // then this should become this.webhooks = Stripe.webhooks\n        this.webhooks = createWebhooksDefault();\n        this._prevRequestMetrics = [];\n        this._enableTelemetry = props.telemetry !== false;\n        this._requestSender = requestSender(this);\n        // Expose StripeResource on the instance too\n        // @ts-ignore\n        this.StripeResource = Stripe.StripeResource;\n    }\n    Stripe.errors = _Error;\n    Stripe.createNodeHttpClient = platformFunctions.createNodeHttpClient;\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    Stripe.createFetchHttpClient = platformFunctions.createFetchHttpClient;\n    /**\n     * Create a CryptoProvider which uses the built-in Node crypto libraries for\n     * its crypto operations.\n     */\n    Stripe.createNodeCryptoProvider = platformFunctions.createNodeCryptoProvider;\n    /**\n     * Creates a CryptoProvider which uses the Subtle Crypto API from the Web\n     * Crypto API spec for its crypto operations.\n     *\n     * A SubtleCrypto interface can optionally be passed in as a parameter. If none\n     * is passed, will default to the default `crypto.subtle` object in the global\n     * scope.\n     */\n    Stripe.createSubtleCryptoProvider =\n        platformFunctions.createSubtleCryptoProvider;\n    Stripe.prototype = {\n        // Properties are set in the constructor above\n        _appInfo: undefined,\n        on: null,\n        off: null,\n        once: null,\n        VERSION: null,\n        StripeResource: null,\n        webhooks: null,\n        errors: null,\n        _api: null,\n        _prevRequestMetrics: null,\n        _emitter: null,\n        _enableTelemetry: null,\n        _requestSender: null,\n        _platformFunctions: null,\n        /**\n         * @private\n         */\n        _setApiKey(key) {\n            if (key) {\n                this._setApiField('auth', `Bearer ${key}`);\n            }\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setAppInfo(info) {\n            if (info && typeof info !== 'object') {\n                throw new Error('AppInfo must be an object.');\n            }\n            if (info && !info.name) {\n                throw new Error('AppInfo.name is required');\n            }\n            info = info || {};\n            this._appInfo = APP_INFO_PROPERTIES.reduce((accum, prop) => {\n                if (typeof info[prop] == 'string') {\n                    accum = accum || {};\n                    accum[prop] = info[prop];\n                }\n                return accum;\n            }, \n            // @ts-ignore\n            undefined);\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiField(key, value) {\n            this._api[key] = value;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getApiField(key) {\n            return this._api[key];\n        },\n        setClientId(clientId) {\n            this._clientId = clientId;\n        },\n        getClientId() {\n            return this._clientId;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getConstant: (c) => {\n            switch (c) {\n                case 'DEFAULT_HOST':\n                    return DEFAULT_HOST;\n                case 'DEFAULT_PORT':\n                    return DEFAULT_PORT;\n                case 'DEFAULT_BASE_PATH':\n                    return DEFAULT_BASE_PATH;\n                case 'DEFAULT_API_VERSION':\n                    return DEFAULT_API_VERSION;\n                case 'DEFAULT_TIMEOUT':\n                    return DEFAULT_TIMEOUT;\n                case 'MAX_NETWORK_RETRY_DELAY_SEC':\n                    return MAX_NETWORK_RETRY_DELAY_SEC;\n                case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n                    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n            }\n            return Stripe[c];\n        },\n        getMaxNetworkRetries() {\n            return this.getApiField('maxNetworkRetries');\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiNumberField(prop, n, defaultVal) {\n            const val = validateInteger(prop, n, defaultVal);\n            this._setApiField(prop, val);\n        },\n        getMaxNetworkRetryDelay() {\n            return MAX_NETWORK_RETRY_DELAY_SEC;\n        },\n        getInitialNetworkRetryDelay() {\n            return INITIAL_NETWORK_RETRY_DELAY_SEC;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent and uses a cached version for a slight\n         * speed advantage.\n         */\n        getClientUserAgent(cb) {\n            return this.getClientUserAgentSeeded(Stripe.USER_AGENT, cb);\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent by encoding a seeded object and\n         * fetching a uname from the system.\n         */\n        getClientUserAgentSeeded(seed, cb) {\n            this._platformFunctions.getUname().then((uname) => {\n                var _a;\n                const userAgent = {};\n                for (const field in seed) {\n                    userAgent[field] = encodeURIComponent((_a = seed[field]) !== null && _a !== void 0 ? _a : 'null');\n                }\n                // URI-encode in case there are unusual characters in the system's uname.\n                userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n                const client = this.getApiField('httpClient');\n                if (client) {\n                    userAgent.httplib = encodeURIComponent(client.getClientName());\n                }\n                if (this._appInfo) {\n                    userAgent.application = this._appInfo;\n                }\n                cb(JSON.stringify(userAgent));\n            });\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getAppInfoAsString() {\n            if (!this._appInfo) {\n                return '';\n            }\n            let formatted = this._appInfo.name;\n            if (this._appInfo.version) {\n                formatted += `/${this._appInfo.version}`;\n            }\n            if (this._appInfo.url) {\n                formatted += ` (${this._appInfo.url})`;\n            }\n            return formatted;\n        },\n        getTelemetryEnabled() {\n            return this._enableTelemetry;\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _prepResources() {\n            for (const name in resources) {\n                // @ts-ignore\n                this[pascalToCamelCase(name)] = new resources[name](this);\n            }\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _getPropsFromConfig(config) {\n            // If config is null or undefined, just bail early with no props\n            if (!config) {\n                return {};\n            }\n            // config can be an object or a string\n            const isString = typeof config === 'string';\n            const isObject = config === Object(config) && !Array.isArray(config);\n            if (!isObject && !isString) {\n                throw new Error('Config must either be an object or a string');\n            }\n            // If config is a string, we assume the old behavior of passing in a string representation of the api version\n            if (isString) {\n                return {\n                    apiVersion: config,\n                };\n            }\n            // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n            const values = Object.keys(config).filter((value) => !ALLOWED_CONFIG_PROPERTIES.includes(value));\n            if (values.length > 0) {\n                throw new Error(`Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(', ')}`);\n            }\n            return config;\n        },\n    };\n    return Stripe;\n}\n", "import { WebPlatformFunctions } from './platform/WebPlatformFunctions.js';\nimport { createStripe } from './stripe.core.js';\nexport const Stripe = createStripe(new WebPlatformFunctions());\nexport default Stripe;\n", "export class CommentsRoom implements DurableObject {\n  private state: DurableObjectState;\n  private storage: DurableObjectStorage;\n\n  constructor(state: DurableObjectState, env: any) {\n    this.state = state;\n    this.storage = state.storage;\n  }\n\n  async fetch(request: Request) {\n    const url = new URL(request.url);\n    const method = request.method.toUpperCase();\n    \n    if (method === 'GET') {\n      const cursor = url.searchParams.get('cursor') || undefined;\n      const list = await this.storage.list({ reverse: true, limit: 50 });\n      const items: any[] = [];\n      for (const [_key, value] of list) items.push(value);\n      return new Response(JSON.stringify({ comments: items, cursor: null }), { \n        headers: { 'Content-Type': 'application/json' } \n      });\n    }\n    \n    if (method === 'POST') {\n      const body = await request.json() as { \n        text?: string; \n        file?: string; \n        line?: number;\n        author?: string;\n      };\n      \n      if (!body.text || !body.text.trim()) {\n        return new Response(JSON.stringify({ error: 'Comment text is required' }), { \n          status: 400,\n          headers: { 'Content-Type': 'application/json' } \n        });\n      }\n\n      const record = {\n        id: `c:${Date.now()}:${Math.random().toString(36).substr(2, 9)}`,\n        text: String(body.text || '').slice(0, 1000),\n        createdAt: Date.now(),\n        author: body.author || 'Anonymous',\n        file: body.file || undefined,\n        line: body.line || undefined,\n      };\n      \n      await this.storage.put(record.id, record);\n      return new Response(JSON.stringify({ ok: true, comment: record }), { \n        headers: { 'Content-Type': 'application/json' } \n      });\n    }\n    \n    return new Response('Method not allowed', { status: 405 });\n  }\n}\n\n\n", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport { getCookie, setCookie } from 'hono/cookie';\nimport { Bindings } from './types';\nimport { CreateSnapshotBodySchema, FinalizeSnapshotBodySchema } from '../../../packages/shared/src/schemas';\nimport { DEFAULT_CAPS, SESSION_COOKIE_NAME, VIEWER_COOKIE_PREFIX, ALLOW_MIME_PREFIXES } from '../../../packages/shared/src/index';\nimport { generateIdBase62, hashPasswordArgon2id, verifyPasswordHash, nowMs, randomHex, sha256Hex } from './utils';\nimport { signSession, verifySession, generatePassword } from '../../../packages/shared/src/cookies';\nimport { presignR2PutURL } from './s3presign';\nimport { getExtensionVersion } from './version-info';\n// Passkeys (WebAuthn)\n// @ts-ignore\nimport {\n  generateRegistrationOptions,\n  verifyRegistrationResponse,\n  generateAuthenticationOptions,\n  verifyAuthenticationResponse,\n} from '@simplewebauthn/server';\n// Billing (Stripe)\n// Edge-compatible Stripe client with Fetch + SubtleCrypto providers\n// @ts-ignore\nimport Stripe from 'stripe';\n\nconst app = new Hono();\n\napp.use('*', cors({ \n  origin: (origin: string | undefined) => {\n    // Allow requests from quickstage.tech and localhost\n    if (!origin) return '*';\n    if (origin.includes('quickstage.tech') || origin.includes('localhost')) return origin;\n    return false;\n  }, \n  credentials: true \n}));\n\nfunction isSecureRequest(c: any): boolean {\n  try {\n    const url = new URL(c.req.url);\n    if (url.protocol === 'https:') return true;\n  } catch {}\n  const xfProto = c.req.header('x-forwarded-proto') || c.req.header('X-Forwarded-Proto');\n  return typeof xfProto === 'string' && xfProto.toLowerCase().includes('https');\n}\n\nasync function getUidFromSession(c: any): Promise<string | null> {\n  const cookie = getCookie(c, SESSION_COOKIE_NAME);\n  let token = cookie;\n  if (!token) {\n    const auth = c.req.header('authorization') || c.req.header('Authorization');\n    if (auth && auth.startsWith('Bearer ')) token = auth.slice(7);\n  }\n  if (!token) return null;\n  const data = await verifySession(token, c.env.SESSION_HMAC_SECRET);\n  return data && data.uid ? String(data.uid) : null;\n}\n\n\n\n// User helpers\ntype UserRecord = {\n  uid: string;\n  createdAt: number;\n  lastLoginAt?: number;\n  plan: 'free' | 'pro';\n  licenseKey?: string;\n  email?: string;\n  name?: string;\n  passwordHash?: string;\n  googleId?: string;\n  passkeys?: Array<{\n    id: string; // credential ID (base64url)\n    publicKey: string; // base64url\n    counter: number;\n    transports?: string[];\n  }>;\n};\n\nasync function getUserByName(c: any, name: string): Promise<UserRecord | null> {\n  const uid = await c.env.KV_USERS.get(`user:byname:${name}`);\n  if (!uid) return null;\n  const raw = await c.env.KV_USERS.get(`user:${uid}`);\n  return raw ? JSON.parse(raw) : null;\n}\n\nasync function ensureUserByName(c: any, name: string): Promise<UserRecord> {\n  let user = await getUserByName(c, name);\n  if (user) return user;\n  const uid = generateIdBase62(16);\n  user = { uid, createdAt: Date.now(), plan: 'free', passkeys: [] };\n  await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n  await c.env.KV_USERS.put(`user:byname:${name}`, uid);\n  return user;\n}\n\n// Passkey: Register begin\napp.post('/auth/register-passkey/begin', async (c: any) => {\n  const { name } = await c.req.json();\n  if (!name) return c.json({ error: 'name_required' }, 400);\n  const user = await ensureUserByName(c, name);\n  const options = generateRegistrationOptions({\n    rpID: c.env.RP_ID,\n    rpName: 'QuickStage',\n    userID: user.uid,\n    userName: name,\n    attestationType: 'none',\n    authenticatorSelection: { residentKey: 'preferred', userVerification: 'preferred' },\n    excludeCredentials: (user.passkeys || []).map((pk) => ({ id: pk.id, type: 'public-key' as const })),\n  } as any);\n  await c.env.KV_USERS.put(`user:${user.uid}:regChallenge`, options.challenge, { expirationTtl: 600 });\n  return c.json(options);\n});\n\n// Passkey: Register finish\napp.post('/auth/register-passkey/finish', async (c: any) => {\n  const { name, response } = await c.req.json();\n  if (!name || !response) return c.json({ error: 'bad_request' }, 400);\n  const user = await getUserByName(c, name);\n  if (!user) return c.json({ error: 'not_found' }, 404);\n  const expectedChallenge = await c.env.KV_USERS.get(`user:${user.uid}:regChallenge`);\n  if (!expectedChallenge) return c.json({ error: 'challenge_expired' }, 400);\n  const verification = await verifyRegistrationResponse({\n    response,\n    expectedChallenge,\n    expectedOrigin: `${c.env.PUBLIC_BASE_URL}`,\n    expectedRPID: c.env.RP_ID,\n  } as any);\n  if (!verification.verified || !verification.registrationInfo) return c.json({ error: 'verify_failed' }, 400);\n  const { credentialID, credentialPublicKey, counter } = verification.registrationInfo;\n  user.passkeys = user.passkeys || [];\n  if (!user.passkeys.find((pk) => pk.id === credentialID)) {\n    user.passkeys.push({ id: credentialID, publicKey: credentialPublicKey, counter: counter || 0 });\n  }\n  user.lastLoginAt = Date.now();\n  await c.env.KV_USERS.put(`user:${user.uid}`, JSON.stringify(user));\n  const token = await signSession({ uid: user.uid }, c.env.SESSION_HMAC_SECRET, 60 * 60 * 24 * 7);\n  setCookie(c, SESSION_COOKIE_NAME, token, { httpOnly: true, secure: isSecureRequest(c), sameSite: 'Lax', maxAge: 60 * 60 * 24 * 7, path: '/' });\n  return c.json({ ok: true, user: { uid: user.uid, name: user.name, email: user.email, plan: user.plan } });\n});\n\n// Passkey: Login begin\napp.post('/auth/login-passkey/begin', async (c: any) => {\n  const { name } = await c.req.json();\n  if (!name) return c.json({ error: 'name_required' }, 400);\n  const user = await getUserByName(c, name);\n  if (!user || !user.passkeys || user.passkeys.length === 0) return c.json({ error: 'not_found' }, 404);\n  const options = generateAuthenticationOptions({\n    rpID: c.env.RP_ID,\n    userVerification: 'preferred',\n    allowCredentials: user.passkeys.map((pk) => ({ id: pk.id, type: 'public-key' as const })),\n  } as any);\n  await c.env.KV_USERS.put(`user:${user.uid}:authChallenge`, options.challenge, { expirationTtl: 600 });\n  return c.json(options);\n});\n\n// Passkey: Login finish\napp.post('/auth/login-passkey/finish', async (c: any) => {\n  const { name, response } = await c.req.json();\n  if (!name || !response) return c.json({ error: 'bad_request' }, 400);\n  const user = await getUserByName(c, name);\n  if (!user) return c.json({ error: 'not_found' }, 404);\n  const expectedChallenge = await c.env.KV_USERS.get(`user:${user.uid}:authChallenge`);\n  if (!expectedChallenge) return c.json({ error: 'challenge_expired' }, 400);\n  const verification = await verifyAuthenticationResponse({\n    response,\n    expectedChallenge,\n    expectedOrigin: `${c.env.PUBLIC_BASE_URL}`,\n    expectedRPID: c.env.RP_ID,\n    authenticator: {\n      // Use the first for now; in future map credentialID to stored authenticator\n      credentialID: user.passkeys?.[0]?.id,\n      credentialPublicKey: user.passkeys?.[0]?.publicKey,\n      counter: user.passkeys?.[0]?.counter || 0,\n      transports: user.passkeys?.[0]?.transports,\n    } as any,\n  } as any);\n  if (!verification.verified) return c.json({ error: 'verify_failed' }, 400);\n  user.lastLoginAt = Date.now();\n  await c.env.KV_USERS.put(`user:${user.uid}`, JSON.stringify(user));\n  const token = await signSession({ uid: user.uid }, c.env.SESSION_HMAC_SECRET, 60 * 60 * 24 * 7);\n  setCookie(c, SESSION_COOKIE_NAME, token, { httpOnly: true, secure: isSecureRequest(c), sameSite: 'Lax', maxAge: 60 * 60 * 24 * 7, path: '/' });\n  return c.json({ ok: true, user: { uid: user.uid, name: user.name, email: user.email, plan: user.plan } });\n});\n\n// Email/Password: Register\napp.post('/auth/register', async (c: any) => {\n  const { email, password, name } = await c.req.json();\n  if (!email || !password || !name) return c.json({ error: 'missing_fields' }, 400);\n  \n  // Check if user already exists\n  const existingUser = await getUserByName(c, name);\n  if (existingUser) return c.json({ error: 'user_exists' }, 400);\n  \n  // Hash password\n  const salt = randomHex(16);\n  const hashedPassword = await hashPasswordArgon2id(password, salt);\n  \n  // Create user\n  const uid = generateIdBase62(16);\n  const user: UserRecord = { \n    uid, \n    createdAt: Date.now(), \n    plan: 'free', \n    passkeys: [],\n    email,\n    passwordHash: hashedPassword,\n    name\n  };\n  \n  await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n  await c.env.KV_USERS.put(`user:byname:${name}`, uid);\n  await c.env.KV_USERS.put(`user:byemail:${email}`, uid);\n  \n  // Sign session\n  const token = await signSession({ uid }, c.env.SESSION_HMAC_SECRET, 60 * 60 * 24 * 7);\n  setCookie(c, SESSION_COOKIE_NAME, token, { httpOnly: true, secure: isSecureRequest(c), sameSite: 'Lax', maxAge: 60 * 60 * 24 * 7, path: '/' });\n  \n  return c.json({ ok: true, user: { uid, name, email, plan: user.plan } });\n});\n\n// Email/Password: Login\napp.post('/auth/login', async (c: any) => {\n  const { email, password } = await c.req.json();\n  if (!email || !password) return c.json({ error: 'missing_fields' }, 400);\n  \n  // Find user by email\n  const uid = await c.env.KV_USERS.get(`user:byemail:${email}`);\n  if (!uid) return c.json({ error: 'invalid_credentials' }, 401);\n  \n  const raw = await c.env.KV_USERS.get(`user:${uid}`);\n  if (!raw) return c.json({ error: 'invalid_credentials' }, 401);\n  \n  const user = JSON.parse(raw);\n  if (!user.passwordHash) return c.json({ error: 'invalid_credentials' }, 401);\n  \n  // Verify password\n  const isValid = await verifyPasswordHash(password, user.passwordHash);\n  if (!isValid) return c.json({ error: 'invalid_credentials' }, 401);\n  \n  // Update last login\n  user.lastLoginAt = Date.now();\n  await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n  \n  // Sign session\n  const token = await signSession({ uid }, c.env.SESSION_HMAC_SECRET, 60 * 60 * 24 * 7);\n  setCookie(c, SESSION_COOKIE_NAME, token, { httpOnly: true, secure: isSecureRequest(c), sameSite: 'Lax', maxAge: 60 * 60 * 24 * 7, path: '/' });\n  \n  return c.json({ ok: true, user: { uid, name: user.name, email: user.email, plan: user.plan } });\n});\n\n// Google OAuth: Login/Register\napp.post('/auth/google', async (c: any) => {\n  const { idToken } = await c.req.json();\n  if (!idToken) return c.json({ error: 'missing_token' }, 400);\n  \n  try {\n    // Verify Google ID token with Google's servers\n    const verifyResponse = await fetch('https://oauth2.googleapis.com/tokeninfo', {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    });\n    \n    // For now, we'll use the access token to get user info directly\n    // In production, you should verify the ID token properly\n    const userInfoResponse = await fetch('https://www.googleapis.com/oauth2/v2/userinfo', {\n      headers: {\n        'Authorization': `Bearer ${idToken}`,\n      },\n    });\n    \n    if (!userInfoResponse.ok) {\n      return c.json({ error: 'invalid_token' }, 401);\n    }\n    \n    const userInfo = await userInfoResponse.json() as {\n      email: string;\n      name?: string;\n      given_name?: string;\n      family_name?: string;\n    };\n    const { email, name, given_name, family_name } = userInfo;\n    \n    if (!email) {\n      return c.json({ error: 'email_required' }, 400);\n    }\n    \n    // Check if user exists by email\n    let uid = await c.env.KV_USERS.get(`user:byemail:${email}`);\n    let user: UserRecord;\n    \n    if (uid) {\n      // User exists, update last login and Google ID\n      const raw = await c.env.KV_USERS.get(`user:${uid}`);\n      if (raw) {\n        user = JSON.parse(raw);\n        user.lastLoginAt = Date.now();\n        user.googleId = idToken; // Store Google ID for future reference\n        if (!user.name && name) user.name = name;\n        await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n      } else {\n        // Fallback: create user if raw data is missing\n        uid = generateIdBase62(16);\n        user = { \n          uid, \n          createdAt: Date.now(), \n          plan: 'free', \n          passkeys: [],\n          email: email,\n          name: name || `${given_name || ''} ${family_name || ''}`.trim() || 'Google User',\n          googleId: idToken\n        };\n        await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n        await c.env.KV_USERS.put(`user:byname:${user.name}`, uid);\n        await c.env.KV_USERS.put(`user:byemail:${email}`, uid);\n      }\n    } else {\n      // Create new user\n      uid = generateIdBase62(16);\n      const displayName = name || `${given_name || ''} ${family_name || ''}`.trim() || 'Google User';\n      \n      user = { \n        uid, \n        createdAt: Date.now(), \n        plan: 'free', \n        passkeys: [],\n        email: email,\n        name: displayName,\n        googleId: idToken\n      };\n      \n      await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n      await c.env.KV_USERS.put(`user:byname:${displayName}`, uid);\n      await c.env.KV_USERS.put(`user:byemail:${email}`, uid);\n    }\n    \n    // Sign session\n    const token = await signSession({ uid }, c.env.SESSION_HMAC_SECRET, 60 * 60 * 24 * 7);\n    setCookie(c, SESSION_COOKIE_NAME, token, { httpOnly: true, secure: isSecureRequest(c), sameSite: 'Lax', maxAge: 60 * 60 * 24 * 7, path: '/' });\n    \n    return c.json({ ok: true, user: { uid, name: user.name, email: user.email, plan: user.plan } });\n    \n  } catch (error) {\n    console.error('Google OAuth error:', error);\n    return c.json({ error: 'authentication_failed' }, 401);\n  }\n});\n\napp.get('/me', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ user: null });\n  const raw = await c.env.KV_USERS.get(`user:${uid}`);\n  if (!raw) return c.json({ user: null });\n  \n  const user = JSON.parse(raw);\n  // Return safe user data (no sensitive info)\n  return c.json({ \n    user: { \n      uid: user.uid, \n      name: user.name, \n      email: user.email, \n      plan: user.plan,\n      createdAt: user.createdAt,\n      lastLoginAt: user.lastLoginAt,\n      hasPasskeys: user.passkeys && user.passkeys.length > 0,\n      hasPassword: !!user.passwordHash,\n      hasGoogle: !!user.googleId\n    } \n  });\n});\n\n// Logout endpoint\napp.post('/auth/logout', async (c: any) => {\n  // Clear the session cookie\n  setCookie(c, SESSION_COOKIE_NAME, '', { httpOnly: true, secure: isSecureRequest(c), sameSite: 'Lax', maxAge: 0, path: '/' });\n  return c.json({ ok: true });\n});\n\n// Update user profile\napp.put('/auth/profile', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const { name, email } = await c.req.json();\n  if (!name && !email) return c.json({ error: 'no_changes' }, 400);\n  \n  const raw = await c.env.KV_USERS.get(`user:${uid}`);\n  if (!raw) return c.json({ error: 'user_not_found' }, 404);\n  \n  const user = JSON.parse(raw);\n  let updated = false;\n  \n  if (name && name !== user.name) {\n    // Check if new name is already taken\n    const existingUid = await c.env.KV_USERS.get(`user:byname:${name}`);\n    if (existingUid && existingUid !== uid) {\n      return c.json({ error: 'name_taken' }, 400);\n    }\n    \n    // Update name mappings\n    if (user.name) {\n      await c.env.KV_USERS.delete(`user:byname:${user.name}`);\n    }\n    await c.env.KV_USERS.put(`user:byname:${name}`, uid);\n    user.name = name;\n    updated = true;\n  }\n  \n  if (email && email !== user.email) {\n    // Check if new email is already taken\n    const existingUid = await c.env.KV_USERS.get(`user:byemail:${email}`);\n    if (existingUid && existingUid !== uid) {\n      return c.json({ error: 'email_taken' }, 400);\n    }\n    \n    // Update email mappings\n    if (user.email) {\n      await c.env.KV_USERS.delete(`user:byemail:${user.email}`);\n    }\n    await c.env.KV_USERS.put(`user:byemail:${email}`, uid);\n    user.email = email;\n    updated = true;\n  }\n  \n  if (updated) {\n    await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n  }\n  \n  return c.json({ ok: true, user: { uid: user.uid, name: user.name, email: user.email, plan: user.plan } });\n});\n\n// Change password\napp.post('/auth/change-password', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const { currentPassword, newPassword } = await c.req.json();\n  if (!currentPassword || !newPassword) return c.json({ error: 'missing_fields' }, 400);\n  \n  const raw = await c.env.KV_USERS.get(`user:${uid}`);\n  if (!raw) return c.json({ error: 'user_not_found' }, 404);\n  \n  const user = JSON.parse(raw);\n  if (!user.passwordHash) return c.json({ error: 'no_password_set' }, 400);\n  \n  // Verify current password\n  const isValid = await verifyPasswordHash(currentPassword, user.passwordHash);\n  if (!isValid) return c.json({ error: 'invalid_password' }, 401);\n  \n  // Hash new password\n  const salt = randomHex(16);\n  const hashedPassword = await hashPasswordArgon2id(newPassword, salt);\n  \n  // Update password\n  user.passwordHash = hashedPassword;\n  await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n  \n  return c.json({ ok: true });\n});\n\n// Remove passkey\napp.delete('/auth/passkeys/:credentialId', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const credentialId = c.req.param('credentialId');\n  if (!credentialId) return c.json({ error: 'missing_credential_id' }, 400);\n  \n  const raw = await c.env.KV_USERS.get(`user:${uid}`);\n  if (!raw) return c.json({ error: 'user_not_found' }, 404);\n  \n  const user = JSON.parse(raw);\n  if (!user.passkeys || user.passkeys.length === 0) return c.json({ error: 'no_passkeys' }, 400);\n  \n  // Remove the passkey\n  user.passkeys = user.passkeys.filter((pk: any) => pk.id !== credentialId);\n  await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n  \n  return c.json({ ok: true, passkeys: user.passkeys });\n});\n\n// Billing: checkout\napp.post('/billing/checkout', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const stripe = new Stripe(c.env.STRIPE_SECRET_KEY, {\n    apiVersion: '2023-10-16',\n    httpClient: Stripe.createFetchHttpClient(),\n  });\n  const session = await stripe.checkout.sessions.create({\n    mode: 'subscription',\n    line_items: [{ price: c.env.STRIPE_PRICE_ID, quantity: 1 }],\n    success_url: `${c.env.PUBLIC_BASE_URL}/?billing=success`,\n    cancel_url: `${c.env.PUBLIC_BASE_URL}/?billing=canceled`,\n    metadata: { uid },\n  });\n  return c.json({ url: session.url });\n});\n\n// Billing: webhook\napp.post('/billing/webhook', async (c: any) => {\n  const stripe = new Stripe(c.env.STRIPE_SECRET_KEY, {\n    apiVersion: '2023-10-16',\n    httpClient: Stripe.createFetchHttpClient(),\n  });\n  const sig = c.req.header('stripe-signature');\n  const rawBody = await c.req.text();\n  let event: any;\n  try {\n    const cryptoProvider = Stripe.createSubtleCryptoProvider();\n    event = await stripe.webhooks.constructEventAsync(\n      rawBody,\n      sig as string,\n      c.env.STRIPE_WEBHOOK_SECRET,\n      undefined,\n      cryptoProvider,\n    );\n  } catch (err) {\n    return c.json({ error: 'bad_signature' }, 400);\n  }\n  if (event.type === 'checkout.session.completed' || event.type === 'invoice.paid') {\n    const session = event.data.object as any;\n    const uid = session.metadata?.uid;\n    if (uid) {\n      const raw = await c.env.KV_USERS.get(`user:${uid}`);\n      if (raw) {\n        const user = JSON.parse(raw);\n        user.plan = 'pro';\n        await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n      }\n    }\n  }\n  return c.json({ received: true });\n});\n\n// Create snapshot\napp.post('/snapshots/create', async (c: any) => {\n  let uid = await getUidFromSession(c);\n  if (!uid) {\n    // Try PAT authentication as fallback\n    const authHeader = c.req.header('authorization') || c.req.header('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.slice(7);\n      uid = await getUidFromPAT(c, token);\n    }\n  }\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const body = await c.req.json();\n  const parsed = CreateSnapshotBodySchema.safeParse(body);\n  if (!parsed.success) return c.json({ error: 'bad_request', details: parsed.error.format() }, 400);\n  const { expiryDays = 7, password = null, public: isPublic = false } = parsed.data;\n\n  // Quota: count active snapshots\n  const listJson = (await c.env.KV_USERS.get(`user:${uid}:snapshots`)) || '[]';\n  const activeIds: string[] = JSON.parse(listJson);\n  if (activeIds.length >= 10) return c.json({ error: 'quota_exceeded' }, 403);\n\n  const id = generateIdBase62(16);\n  const createdAt = nowMs();\n  const expiresAt = createdAt + expiryDays * 24 * 60 * 60 * 1000;\n  const realPassword = password ?? generatePassword(20);\n  const saltHex = randomHex(8);\n  const passwordHash = await hashPasswordArgon2id(realPassword, saltHex);\n  const meta = {\n    id,\n    ownerUid: uid,\n    createdAt,\n    expiresAt,\n    passwordHash,\n    totalBytes: 0,\n    files: [],\n    views: { m: new Date().toISOString().slice(0, 7).replace('-', ''), n: 0 },\n    commentsCount: 0,\n    public: Boolean(isPublic),\n    caps: DEFAULT_CAPS,\n    status: 'creating' as const,\n    gateVersion: 1,\n  };\n  await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(meta));\n  return c.json({ id, password: realPassword, expiryDays, caps: DEFAULT_CAPS });\n});\n\n// Presign upload URL for direct R2 PUT\napp.post('/upload-url', async (c: any) => {\n  let uid = await getUidFromSession(c);\n  if (!uid) {\n    // Try PAT authentication as fallback\n    const authHeader = c.req.header('authorization') || c.req.header('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.slice(7);\n      uid = await getUidFromPAT(c, token);\n    }\n  }\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const id = c.req.query('id');\n  const p = c.req.query('path');\n  const ct = c.req.query('ct') || 'application/octet-stream';\n  const sz = Number(c.req.query('sz') || '0');\n  if (!id || !p) return c.json({ error: 'bad_request' }, 400);\n  if (p.includes('..')) return c.json({ error: 'bad_path' }, 400);\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'forbidden' }, 403);\n  if (sz > meta.caps.maxFile) return c.json({ error: 'file_too_large' }, 400);\n  if (!ALLOW_MIME_PREFIXES.some((x) => String(ct).startsWith(x))) return c.json({ error: 'type_not_allowed' }, 400);\n  const url = await presignR2PutURL({\n    accountId: c.env.R2_ACCOUNT_ID,\n    bucket: 'snapshots',\n    key: `snap/${id}/${p}`,\n    accessKeyId: c.env.R2_ACCESS_KEY_ID,\n    secretAccessKey: c.env.R2_SECRET_ACCESS_KEY,\n    contentType: String(ct),\n    expiresSeconds: 600,\n  });\n  return c.json({ url });\n});\n\n// Upload via Worker (streaming) to R2; path query is required\napp.put('/upload', async (c: any) => {\n  let uid = await getUidFromSession(c);\n  if (!uid) {\n    // Try PAT authentication as fallback\n    const authHeader = c.req.header('authorization') || c.req.header('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.slice(7);\n      uid = await getUidFromPAT(c, token);\n    }\n  }\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const id = c.req.query('id');\n  const p = c.req.query('path');\n  const ct = c.req.header('content-type') || 'application/octet-stream';\n  const sz = Number(c.req.header('content-length') || '0');\n  const h = c.req.query('h') || '';\n  if (!id || !p) return c.json({ error: 'bad_request' }, 400);\n  if (p.includes('..')) return c.json({ error: 'bad_path' }, 400);\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'forbidden' }, 403);\n  if (sz > meta.caps.maxFile) return c.json({ error: 'file_too_large' }, 400);\n  if (!ALLOW_MIME_PREFIXES.some((prefix) => ct.startsWith(prefix))) return c.json({ error: 'type_not_allowed' }, 400);\n  const objectKey = `snap/${id}/${p}`;\n  const body = c.req.raw.body;\n  if (!body) return c.json({ error: 'no_body' }, 400);\n  \n  try {\n    await c.env.R2_SNAPSHOTS.put(objectKey, body, { httpMetadata: { contentType: ct } });\n    return c.json({ ok: true });\n  } catch (error) {\n    console.error('R2 upload failed:', error);\n    return c.json({ error: 'upload_failed', details: String(error) }, 500);\n  }\n});\n\n// API version of upload endpoint for extension\napp.put('/api/upload', async (c: any) => {\n  let uid = await getUidFromSession(c);\n  if (!uid) {\n    // Try PAT authentication as fallback\n    const authHeader = c.req.header('authorization') || c.req.header('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.slice(7);\n      uid = await getUidFromPAT(c, token);\n    }\n  }\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const id = c.req.query('id');\n  const p = c.req.query('path');\n  const ct = c.req.header('content-type') || 'application/octet-stream';\n  const sz = Number(c.req.header('content-length') || '0');\n  const h = c.req.query('h') || '';\n  \n  if (!id || !p) return c.json({ error: 'bad_request' }, 400);\n  if (p.includes('..')) return c.json({ error: 'bad_path' }, 400);\n  \n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  \n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'forbidden' }, 403);\n  if (sz > meta.caps.maxFile) return c.json({ error: 'file_too_large' }, 400);\n  if (!ALLOW_MIME_PREFIXES.some((prefix) => ct.startsWith(prefix))) return c.json({ error: 'type_not_allowed' }, 400);\n  \n  const objectKey = `snap/${id}/${p}`;\n  const body = c.req.raw.body;\n  if (!body) return c.json({ error: 'no_body' }, 400);\n  \n  try {\n    await c.env.R2_SNAPSHOTS.put(objectKey, body, { httpMetadata: { contentType: ct } });\n    return c.json({ ok: true });\n  } catch (error) {\n    console.error('R2 upload failed:', error);\n    return c.json({ error: 'upload_failed', details: String(error) }, 500);\n  }\n});\n\n// Finalize snapshot\napp.post('/snapshots/finalize', async (c: any) => {\n  let uid = await getUidFromSession(c);\n  if (!uid) {\n    // Try PAT authentication as fallback\n    const authHeader = c.req.header('authorization') || c.req.header('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.slice(7);\n      uid = await getUidFromPAT(c, token);\n    }\n  }\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const body = await c.req.json();\n  const parsed = FinalizeSnapshotBodySchema.safeParse(body);\n  if (!parsed.success) return c.json({ error: 'bad_request', details: parsed.error.format() }, 400);\n  const { id, totalBytes, files } = parsed.data;\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'forbidden' }, 403);\n  if (totalBytes > meta.caps.maxBytes) return c.json({ error: 'bundle_too_large' }, 400);\n  meta.totalBytes = totalBytes;\n  meta.files = files;\n  meta.status = 'active';\n  await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(meta));\n  // Append to user index\n  const listJson = (await c.env.KV_USERS.get(`user:${uid}:snapshots`)) || '[]';\n  const ids: string[] = JSON.parse(listJson);\n  ids.unshift(id);\n  await c.env.KV_USERS.put(`user:${uid}:snapshots`, JSON.stringify(ids.slice(0, 100)));\n  return c.json({ url: `${c.env.PUBLIC_BASE_URL}/s/${id}`, password: 'hidden' });\n});\n\n// List snapshots (compact)\napp.get('/snapshots/list', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const listJson = (await c.env.KV_USERS.get(`user:${uid}:snapshots`)) || '[]';\n  const ids: string[] = JSON.parse(listJson);\n  const metas = await Promise.all(\n    ids.map(async (id) => JSON.parse((await c.env.KV_SNAPS.get(`snap:${id}`)) || '{}')),\n  );\n  return c.json({ snapshots: metas.map((m) => ({ id: m.id, createdAt: m.createdAt, expiresAt: m.expiresAt, totalBytes: m.totalBytes, status: m.status })) });\n});\n\n// Get individual snapshot details\napp.get('/snapshots/:id', async (c: any) => {\n  const id = c.req.param('id');\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  \n  const meta = JSON.parse(metaRaw);\n  if (meta.status === 'expired' || meta.expiresAt < nowMs()) {\n    return c.json({ error: 'gone' }, 410);\n  }\n  \n  // Check if user is authenticated and owns this snapshot\n  const uid = await getUidFromSession(c);\n  if (uid && meta.ownerUid === uid) {\n    // Owner can see full details\n    return c.json({ snapshot: meta });\n  }\n  \n  // For non-owners, check if public or password protected\n  if (meta.public) {\n    // Public snapshots can be viewed without authentication\n    return c.json({ snapshot: meta });\n  } else {\n    // Password protected snapshots require authentication\n    return c.json({ error: 'unauthorized' }, 401);\n  }\n});\n\n// Expire\napp.post('/snapshots/:id/expire', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const id = c.req.param('id');\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'forbidden' }, 403);\n  meta.status = 'expired';\n  meta.expiresAt = nowMs() - 1000;\n  await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(meta));\n  // remove from index\n  const listJson = (await c.env.KV_USERS.get(`user:${uid}:snapshots`)) || '[]';\n  const ids: string[] = JSON.parse(listJson).filter((x: string) => x !== id);\n  await c.env.KV_USERS.put(`user:${uid}:snapshots`, JSON.stringify(ids));\n  return c.json({ ok: true });\n});\n\n// Extend\napp.post('/snapshots/:id/extend', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const id = c.req.param('id');\n  const body: any = await c.req.json();\n  const days: number = Number(body?.days || 1);\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'forbidden' }, 403);\n  const cap = DEFAULT_CAPS.maxDays;\n  const added = Math.min(Math.max(1, days || 1), cap);\n  meta.expiresAt += added * 24 * 60 * 60 * 1000;\n  await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(meta));\n  return c.json({ ok: true, expiresAt: meta.expiresAt });\n});\n\n// Rotate password\napp.post('/snapshots/:id/rotate-password', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  const id = c.req.param('id');\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'forbidden' }, 403);\n  const newPass = generatePassword(20);\n  const saltHex = randomHex(8);\n  meta.passwordHash = await hashPasswordArgon2id(newPass, saltHex);\n  await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(meta));\n  return c.json({ password: newPass });\n});\n\n// Serve viewer shell (redirect to Pages handled app) or simple shell\napp.get('/s/:id', async (c: any) => {\n  const id = c.req.param('id');\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'gone' }, 410);\n  const meta = JSON.parse(metaRaw);\n  if (meta.status === 'expired' || meta.expiresAt < nowMs()) return c.json({ error: 'gone' }, 410);\n  // Let Pages app handle viewer route\n  return c.redirect(`${c.env.PUBLIC_BASE_URL}/app/s/${id}`);\n});\n\n// Asset serving with password gate\napp.get('/s/:id/*', async (c: any) => {\n  const id = c.req.param('id');\n  const path = c.req.param('*') || '';\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.text('Gone', 410);\n  const meta = JSON.parse(metaRaw);\n  if (meta.status === 'expired' || meta.expiresAt < nowMs()) return c.text('Gone', 410);\n  if (!meta.public) {\n    const gateCookie = getCookie(c, `${VIEWER_COOKIE_PREFIX}${id}`);\n    if (!gateCookie || gateCookie !== 'ok') return c.json({ error: 'unauthorized' }, 401);\n  }\n  const r2obj = await c.env.R2_SNAPSHOTS.get(`snap/${id}/${path}`);\n  if (!r2obj) {\n    // SPA fallback\n    const indexObj = await c.env.R2_SNAPSHOTS.get(`snap/${id}/index.html`);\n    if (indexObj) {\n      const headers: Record<string, string> = {\n        'Cache-Control': 'no-cache',\n        'Content-Type': 'text/html; charset=utf-8',\n        'X-Content-Type-Options': 'nosniff',\n        'Referrer-Policy': 'no-referrer',\n        'Permissions-Policy': 'camera=(), microphone=(), geolocation=()'\n      };\n      return new Response(indexObj.body, { headers });\n    }\n    return c.text('Not found', 404);\n  }\n  const headers: Record<string, string> = {\n    'Cache-Control': 'public, max-age=3600',\n    'X-Content-Type-Options': 'nosniff',\n    'Referrer-Policy': 'no-referrer',\n    'Permissions-Policy': 'camera=(), microphone=(), geolocation=()'\n  };\n  const ct = r2obj.httpMetadata?.contentType;\n  if (ct) headers['Content-Type'] = ct;\n  return new Response(r2obj.body, { headers });\n});\n\n// Gate\napp.post('/s/:id/gate', async (c: any) => {\n  const id = c.req.param('id');\n  const body: any = await c.req.json();\n  const password: string = String(body?.password || '');\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'not_found' }, 404);\n  const meta = JSON.parse(metaRaw);\n  const ok = await verifyPasswordHash(password, meta.passwordHash);\n  if (!ok) return c.json({ error: 'forbidden' }, 403);\n  setCookie(c, `${VIEWER_COOKIE_PREFIX}${id}`, 'ok', {\n    secure: isSecureRequest(c),\n    sameSite: 'Lax',\n    path: `/s/${id}`,\n    maxAge: 60 * 60,\n  });\n  return c.json({ ok: true });\n});\n\n// Snapshot comments endpoints\napp.get('/api/snapshots/:id/comments', async (c: any) => {\n  const id = c.req.param('id');\n  if (!id) return c.json({ error: 'bad_request' }, 400);\n  \n  const stub = c.env.COMMENTS_DO.get(c.env.COMMENTS_DO.idFromName(id));\n  const res = await stub.fetch(new URL(`/comments?id=${encodeURIComponent(id)}`, 'http://do').toString());\n  return new Response(res.body as any, { headers: { 'Content-Type': 'application/json' } });\n});\n\n// Get comments for a snapshot (public endpoint)\napp.get('/comments/:snapshotId', async (c: any) => {\n  const snapshotId = c.req.param('snapshotId');\n  if (!snapshotId) return c.json({ error: 'bad_request' }, 400);\n  \n  const stub = c.env.COMMENTS_DO.get(c.env.COMMENTS_DO.idFromName(snapshotId));\n  const res = await stub.fetch(new URL(`/comments?id=${encodeURIComponent(snapshotId)}`, 'http://do').toString());\n  return new Response(res.body as any, { headers: { 'Content-Type': 'application/json' } });\n});\n\napp.post('/api/snapshots/:id/comments', async (c: any) => {\n  const id = c.req.param('id');\n  if (!id) return c.json({ error: 'bad_request' }, 400);\n  \n  const body: any = await c.req.json();\n  if (!body || !body.text) return c.json({ error: 'bad_request' }, 400);\n  \n  // Turnstile verification\n  const token = body.turnstileToken || '';\n  if (!token) return c.json({ error: 'turnstile_required' }, 400);\n  \n  const verifyRes = await fetch('https://challenges.cloudflare.com/turnstile/v0/siteverify', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: new URLSearchParams({ secret: c.env.TURNSTILE_SECRET_KEY, response: token }),\n  });\n  \n  const verifyJson: any = await verifyRes.json();\n  if (!verifyJson.success) return c.json({ error: 'turnstile_failed' }, 403);\n  \n  // Get user info for author\n  const uid = await getUidFromSession(c);\n  const author = uid ? `User-${uid.slice(0, 8)}` : 'Anonymous';\n  \n  const commentData = {\n    text: body.text,\n    file: body.file,\n    line: body.line,\n    author: author\n  };\n  \n  const stub = c.env.COMMENTS_DO.get(c.env.COMMENTS_DO.idFromName(id));\n  const res = await stub.fetch('http://do/comments', { \n    method: 'POST', \n    body: JSON.stringify(commentData), \n    headers: { 'Content-Type': 'application/json' } \n  });\n  \n  // Increment comments count\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (metaRaw) {\n    try {\n      const meta = JSON.parse(metaRaw);\n      meta.commentsCount = (meta.commentsCount || 0) + 1;\n      await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(meta));\n    } catch {}\n  }\n  \n  return new Response(res.body as any, { headers: { 'Content-Type': 'application/json' } });\n});\n\n// Legacy comments endpoints for backward compatibility\napp.get('/comments', async (c: any) => {\n  const id = c.req.query('id');\n  if (!id) return c.json({ error: 'bad_request' }, 400);\n  const stub = c.env.COMMENTS_DO.get(c.env.COMMENTS_DO.idFromName(id));\n  const res = await stub.fetch(new URL(`/comments?id=${encodeURIComponent(id)}`, 'http://do').toString());\n  return new Response(res.body as any, { headers: { 'Content-Type': 'application/json' } });\n});\n\napp.post('/comments', async (c: any) => {\n  const body: any = await c.req.json();\n  if (!body || !body.id || !body.text) return c.json({ error: 'bad_request' }, 400);\n  // Turnstile verification\n  const token = c.req.header('cf-turnstile-token') || c.req.header('x-turnstile-token') || '';\n  if (!token) return c.json({ error: 'turnstile_required' }, 400);\n  const verifyRes = await fetch('https://challenges.cloudflare.com/turnstile/v0/siteverify', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: new URLSearchParams({ secret: c.env.TURNSTILE_SECRET_KEY, response: token }),\n  });\n  const verifyJson: any = await verifyRes.json();\n  if (!verifyJson.success) return c.json({ error: 'turnstile_failed' }, 403);\n  const stub = c.env.COMMENTS_DO.get(c.env.COMMENTS_DO.idFromName(body.id));\n  const res = await stub.fetch('http://do/comments', { method: 'POST', body: JSON.stringify(body), headers: { 'Content-Type': 'application/json' } });\n  // Increment comments count eventually\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${body.id}`);\n  if (metaRaw) {\n    try {\n      const meta = JSON.parse(metaRaw);\n      meta.commentsCount = (meta.commentsCount || 0) + 1;\n      await c.env.KV_SNAPS.put(`snap:${body.id}`, JSON.stringify(meta));\n    } catch {}\n  }\n  return new Response(res.body as any, { headers: { 'Content-Type': 'application/json' } });\n});\n\n// Cron purge\napp.get('/admin/purge-expired', async (c: any) => {\n  // This route will be bound to CRON; iterate KV list\n  // Cloudflare KV list requires pagination; for MVP, skip and rely on manual\n  return c.json({ ok: true });\n});\n\n// Add /api prefixed routes for Cloudflare routing\napp.post('/api/auth/google', async (c: any) => {\n  const { idToken } = await c.req.json();\n  if (!idToken) return c.json({ error: 'missing_token' }, 400);\n  \n  try {\n    // For now, we'll use the access token to get user info directly\n    // In production, you should verify the ID token properly\n    const userInfoResponse = await fetch('https://www.googleapis.com/oauth2/v2/userinfo', {\n      headers: {\n        'Authorization': `Bearer ${idToken}`,\n      },\n    });\n    \n    if (!userInfoResponse.ok) {\n      return c.json({ error: 'invalid_token' }, 401);\n    }\n    \n    const userInfo = await userInfoResponse.json() as {\n      email: string;\n      name?: string;\n      given_name?: string;\n      family_name?: string;\n    };\n    const { email, name, given_name, family_name } = userInfo;\n    \n    if (!email) {\n      return c.json({ error: 'email_required' }, 400);\n    }\n    \n    // Check if user exists by email\n    let uid = await c.env.KV_USERS.get(`user:byemail:${email}`);\n    let user: UserRecord;\n    \n    if (uid) {\n      // User exists, update last login and Google ID\n      const raw = await c.env.KV_USERS.get(`user:${uid}`);\n      if (raw) {\n        user = JSON.parse(raw);\n        user.lastLoginAt = Date.now();\n        user.googleId = idToken; // Store Google ID for future reference\n        if (!user.name && name) user.name = name;\n        await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n      } else {\n        // Fallback: create user if raw data is missing\n        uid = generateIdBase62(16);\n        user = { \n          uid, \n          createdAt: Date.now(), \n          plan: 'free', \n          passkeys: [],\n          email: email,\n          name: name || `${given_name || ''} ${family_name || ''}`.trim() || 'Google User',\n          googleId: idToken\n        };\n        await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n        await c.env.KV_USERS.put(`user:byname:${user.name}`, uid);\n        await c.env.KV_USERS.put(`user:byemail:${email}`, uid);\n      }\n    } else {\n      // Create new user\n      uid = generateIdBase62(16);\n      const displayName = name || `${given_name || ''} ${family_name || ''}`.trim() || 'Google User';\n      \n      user = { \n        uid, \n        createdAt: Date.now(), \n        plan: 'free', \n        passkeys: [],\n        email: email,\n        name: displayName,\n        googleId: idToken\n      };\n      \n      await c.env.KV_USERS.put(`user:${uid}`, JSON.stringify(user));\n      await c.env.KV_USERS.put(`user:byname:${displayName}`, uid);\n      await c.env.KV_USERS.put(`user:byemail:${email}`, uid);\n    }\n    \n    // Sign session\n    const token = await signSession({ uid }, c.env.SESSION_HMAC_SECRET, 60 * 60 * 24 * 7);\n    setCookie(c, SESSION_COOKIE_NAME, token, { httpOnly: true, secure: isSecureRequest(c), sameSite: 'Lax', maxAge: 60 * 60 * 24 * 7, path: '/' });\n    \n    return c.json({ ok: true, user: { uid, name: user.name, email: user.email, plan: user.plan } });\n    \n  } catch (error) {\n    console.error('Google OAuth error:', error);\n    return c.json({ error: 'authentication_failed' }, 401);\n  }\n});\n\napp.get('/api/me', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const userRaw = await c.env.KV_USERS.get(`user:${uid}`);\n  if (!userRaw) return c.json({ error: 'user_not_found' }, 404);\n  \n  const user = JSON.parse(userRaw);\n  return c.json({ user: { uid: user.uid, name: user.name, email: user.email, plan: user.plan, createdAt: user.createdAt, lastLoginAt: user.lastLoginAt } });\n});\n\napp.get('/api/snapshots/list', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const listJson = await c.env.KV_USERS.get(`user:${uid}:snapshots`) || '[]';\n  const ids: string[] = JSON.parse(listJson);\n  \n  const snapshots = [];\n  for (const id of ids) {\n    const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n    if (metaRaw) {\n      try {\n        const meta = JSON.parse(metaRaw);\n        if (meta.expiresAt && meta.expiresAt > Date.now()) {\n          snapshots.push({\n            id: meta.id,\n            name: meta.name || `Snapshot ${meta.id.slice(0, 8)}`,\n            createdAt: meta.createdAt,\n            expiresAt: meta.expiresAt,\n            password: meta.password,\n            isPublic: meta.isPublic || false,\n            viewCount: meta.viewCount || 0\n          });\n        }\n      } catch {}\n    }\n  }\n  \n  return c.json({ data: { snapshots } });\n});\n\n// Add missing /api endpoints for the extension\napp.post('/api/snapshots/create', async (c: any) => {\n  let uid = await getUidFromSession(c);\n  if (!uid) {\n    // Try PAT authentication as fallback\n    const authHeader = c.req.header('authorization') || c.req.header('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.slice(7);\n      uid = await getUidFromPAT(c, token);\n    }\n  }\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const { expiryDays = 7, public: isPublic = false } = await c.req.json();\n  const id = generateIdBase62(16);\n  const password = generatePassword(8);\n  const now = Date.now();\n  const expiresAt = now + (expiryDays * 24 * 60 * 60 * 1000);\n  \n  const snapshot = {\n    id,\n    ownerUid: uid,\n    createdAt: now,\n    expiresAt,\n    password,\n    isPublic,\n    viewCount: 0,\n    commentsCount: 0,\n    status: 'uploading'\n  };\n  \n  await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(snapshot));\n  \n  // Add to user's snapshot list\n  const listJson = await c.env.KV_USERS.get(`user:${uid}:snapshots`) || '[]';\n  const ids: string[] = JSON.parse(listJson);\n  ids.push(id);\n  await c.env.KV_USERS.put(`user:${uid}:snapshots`, JSON.stringify(ids));\n  \n  return c.json({ id, password });\n});\n\n// PAT (Personal Access Token) endpoints for extension authentication\napp.post('/api/tokens/create', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  // Generate a new PAT\n  const tokenId = generateIdBase62(16);\n  const token = `qs_pat_${tokenId}`;\n  const now = Date.now();\n  const expiresAt = now + (90 * 24 * 60 * 60 * 1000); // 90 days\n  \n  const patData = {\n    id: tokenId,\n    token,\n    userId: uid,\n    createdAt: now,\n    expiresAt,\n    lastUsed: null,\n    description: 'VS Code/Cursor Extension'\n  };\n  \n  // Store PAT in KV\n  await c.env.KV_USERS.put(`pat:${token}`, JSON.stringify(patData));\n  \n  // Add to user's PAT list\n  const patListJson = await c.env.KV_USERS.get(`user:${uid}:pats`) || '[]';\n  const patIds: string[] = JSON.parse(patListJson);\n  patIds.push(token);\n  await c.env.KV_USERS.put(`user:${uid}:pats`, JSON.stringify(patIds));\n  \n  return c.json({ \n    token, \n    expiresAt,\n    message: 'Store this token securely. It will not be shown again.'\n  });\n});\n\napp.get('/api/tokens/list', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const patListJson = await c.env.KV_USERS.get(`user:${uid}:pats`) || '[]';\n  const patIds: string[] = JSON.parse(patListJson);\n  \n  const pats = [];\n  for (const patId of patIds) {\n    const patData = await c.env.KV_USERS.get(`pat:${patId}`);\n    if (patData) {\n      const pat = JSON.parse(patData);\n      // Don't return the full token, just metadata\n      pats.push({\n        id: pat.id,\n        createdAt: pat.createdAt,\n        expiresAt: pat.expiresAt,\n        lastUsed: pat.lastUsed,\n        description: pat.description\n      });\n    }\n  }\n  \n  return c.json({ pats });\n});\n\napp.delete('/api/tokens/:tokenId', async (c: any) => {\n  const uid = await getUidFromSession(c);\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const tokenId = c.req.param('tokenId');\n  const fullToken = `qs_pat_${tokenId}`;\n  \n  // Verify ownership\n  const patData = await c.env.KV_USERS.get(`pat:${fullToken}`);\n  if (!patData) return c.json({ error: 'not_found' }, 404);\n  \n  const pat = JSON.parse(patData);\n  if (pat.userId !== uid) return c.json({ error: 'forbidden' }, 403);\n  \n  // Remove PAT\n  await c.env.KV_USERS.delete(`pat:${fullToken}`);\n  \n  // Remove from user's PAT list\n  const patListJson = await c.env.KV_USERS.get(`user:${uid}:pats`) || '[]';\n  const patIds: string[] = JSON.parse(patListJson);\n  const updatedPatIds = patIds.filter(id => id !== fullToken);\n  await c.env.KV_USERS.put(`user:${uid}:pats`, JSON.stringify(updatedPatIds));\n  \n  return c.json({ message: 'PAT revoked successfully' });\n});\n\n// Helper function to get user ID from PAT\nasync function getUidFromPAT(c: any, token: string): Promise<string | null> {\n  const patData = await c.env.KV_USERS.get(`pat:${token}`);\n  if (!patData) return null;\n  \n  const pat = JSON.parse(patData);\n  if (pat.expiresAt < Date.now()) return null;\n  \n  // Update last used timestamp\n  pat.lastUsed = Date.now();\n  await c.env.KV_USERS.put(`pat:${token}`, JSON.stringify(pat));\n  \n  return pat.userId;\n}\n\napp.post('/api/upload-url', async (c: any) => {\n  let uid = await getUidFromSession(c);\n  if (!uid) {\n    // Try PAT authentication as fallback\n    const authHeader = c.req.header('authorization') || c.req.header('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.slice(7);\n      uid = await getUidFromPAT(c, token);\n    }\n  }\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const { id, path: filePath, ct: contentType, sz: size, h: hash } = c.req.query();\n  if (!id || !filePath || !contentType || !size || !hash) {\n    return c.json({ error: 'missing_parameters' }, 400);\n  }\n  \n  // Verify snapshot ownership\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'snapshot_not_found' }, 404);\n  \n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  // Generate presigned URL for R2\n  const key = `snap/${id}/${filePath}`;\n  const url = await presignR2PutURL({\n    accountId: c.env.R2_ACCOUNT_ID,\n    bucket: 'snapshots',\n    key,\n    accessKeyId: c.env.R2_ACCESS_KEY_ID,\n    secretAccessKey: c.env.R2_SECRET_ACCESS_KEY,\n    contentType,\n    expiresSeconds: 600\n  });\n  \n  return c.json({ url });\n});\n\napp.post('/api/snapshots/finalize', async (c: any) => {\n  let uid = await getUidFromSession(c);\n  if (!uid) {\n    // Try PAT authentication as fallback\n    const authHeader = c.req.header('authorization') || c.req.header('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.slice(7);\n      uid = await getUidFromPAT(c, token);\n    }\n  }\n  if (!uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  const { id, totalBytes, files } = await c.req.json();\n  if (!id || totalBytes === undefined || !files) {\n    return c.json({ error: 'missing_parameters' }, 400);\n  }\n  \n  // Verify snapshot ownership\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'snapshot_not_found' }, 404);\n  \n  const meta = JSON.parse(metaRaw);\n  if (meta.ownerUid !== uid) return c.json({ error: 'unauthorized' }, 401);\n  \n  // Update snapshot metadata\n  meta.status = 'ready';\n  meta.totalBytes = totalBytes;\n  meta.files = files;\n  await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(meta));\n  \n  return c.json({ ok: true });\n});\n\n// Add snapshot serving endpoint for /api/s/:id/*\napp.get('/api/s/:id/*', async (c: any) => {\n  const id = c.req.param('id');\n  const path = c.req.param('*');\n  \n  if (!id || !path) return c.json({ error: 'invalid_path' }, 400);\n  \n  // Get snapshot metadata\n  const metaRaw = await c.env.KV_SNAPS.get(`snap:${id}`);\n  if (!metaRaw) return c.json({ error: 'snapshot_not_found' }, 404);\n  \n  const meta = JSON.parse(metaRaw);\n  \n  // Check if expired\n  if (meta.expiresAt && meta.expiresAt < Date.now()) {\n    return c.json({ error: 'snapshot_expired' }, 410);\n  }\n  \n  // Check if password protected\n  if (meta.password) {\n    const accessCookie = getCookie(c, `${VIEWER_COOKIE_PREFIX}${id}`);\n    if (!accessCookie) {\n      return c.json({ error: 'password_required' }, 401);\n    }\n  }\n  \n  // Get file from R2\n  const key = `snap/${id}/${path}`;\n  const obj = await c.env.R2_SNAPSHOTS.get(key);\n  \n  if (!obj) return c.json({ error: 'file_not_found' }, 404);\n  \n  // Increment view count\n  meta.viewCount = (meta.viewCount || 0) + 1;\n  await c.env.KV_SNAPS.put(`snap:${id}`, JSON.stringify(meta));\n  \n  // Return file with appropriate headers\n  const headers = new Headers();\n  if (obj.httpMetadata?.contentType) {\n    headers.set('Content-Type', obj.httpMetadata.contentType);\n  }\n  headers.set('Cache-Control', 'public, max-age=3600');\n  \n  return new Response(obj.body, { headers });\n});\n\n// Add extension version endpoint\napp.get('/api/extensions/version', async (c: any) => {\n  try {\n    const versionInfo = getExtensionVersion();\n    return c.json({\n      version: versionInfo.version,\n      buildDate: versionInfo.buildDate,\n      checksum: 'direct-serve', // No longer serving VSIX content\n      downloadUrl: '/quickstage.vsix', // Direct from web app\n      filename: 'quickstage.vsix'\n    });\n  } catch (error) {\n    console.error('Error serving version info:', error);\n    return c.json({ error: 'version_info_unavailable' }, 500);\n  }\n});\n\n// Backup VSIX download endpoint with explicit headers\napp.get('/api/extensions/download', async (c: any) => {\n  try {\n    // Fetch the VSIX from the web app's public directory\n    const vsixUrl = `https://quickstage.tech/quickstage.vsix`;\n    \n    const response = await fetch(vsixUrl);\n    if (!response.ok) {\n      console.error('Failed to fetch VSIX from web app:', response.status);\n      return c.json({ error: 'download_unavailable' }, 500);\n    }\n    \n    const vsixData = await response.arrayBuffer();\n    \n    // Get version for dynamic filename\n    const versionInfo = getExtensionVersion();\n    const filename = `quickstage-${versionInfo.version}.vsix`;\n    \n    // Serve with explicit headers to ensure proper download\n    const headers = new Headers();\n    headers.set('Content-Type', 'application/octet-stream');\n    headers.set('Content-Disposition', `attachment; filename=\"${filename}\"`);\n    headers.set('Content-Length', vsixData.byteLength.toString());\n    headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');\n    headers.set('Pragma', 'no-cache');\n    headers.set('Expires', '0');\n    \n    return new Response(vsixData, { headers });\n    \n  } catch (error) {\n    console.error('Error serving VSIX download:', error);\n    return c.json({ error: 'download_failed' }, 500);\n  }\n});\n\n// Original web app serving (keep as primary)\n// Extension is served directly from web app public directory\n\nasync function purgeExpired(env: Bindings) {\n  let cursor: string | undefined = undefined;\n  do {\n    const list: any = await env.KV_SNAPS.list({ prefix: 'snap:', cursor });\n    cursor = list.cursor as string | undefined;\n    for (const k of list.keys as any[]) {\n      const metaRaw = await env.KV_SNAPS.get(k.name as string);\n      if (!metaRaw) continue;\n      try {\n        const meta = JSON.parse(metaRaw);\n        if (meta.expiresAt && meta.expiresAt < Date.now()) {\n          // delete R2 objects under snap/id/\n          const id = meta.id as string;\n          let r2cursor: string | undefined = undefined;\n          do {\n            const objs: any = await env.R2_SNAPSHOTS.list({ prefix: `snap/${id}/`, cursor: r2cursor });\n            r2cursor = objs.cursor as string | undefined;\n            if (objs.objects.length) {\n              await env.R2_SNAPSHOTS.delete((objs.objects as any[]).map((o: any) => o.key as string));\n            }\n          } while (r2cursor);\n          await env.KV_SNAPS.delete(k.name);\n          if (meta.ownerUid) {\n            const listJson = (await env.KV_USERS.get(`user:${meta.ownerUid}:snapshots`)) || '[]';\n            const ids: string[] = (JSON.parse(listJson) as string[]).filter((x: string) => x !== id);\n            await env.KV_USERS.put(`user:${meta.ownerUid}:snapshots`, JSON.stringify(ids));\n          }\n        }\n      } catch {}\n    }\n  } while (cursor);\n}\n\nconst worker = {\n  fetch: app.fetch,\n  scheduled: async (_event: any, env: Bindings) => {\n    await purgeExpired(env);\n  },\n};\n\nexport default worker;\nexport { CommentsRoom } from './comments';\n\n\n"],
  "mappings": "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",
  "names": ["p", "i", "globalThis", "exports", "Headers", "chars", "Request", "Response", "fetch", "BufferSourceConverter", "Convert", "base64", "isEqual", "isNaN", "concatty", "slicy", "Empty", "undefined", "doEval", "stringToPath", "getBaseIntrinsic", "compactQueue", "arrayToObject", "merge", "encode", "compact", "isRegExp", "isBuffer", "combine", "maybeMap", "isNonNullishPrimitive", "stringify", "value", "normalizeStringifyOptions", "normalizeParseOptions", "stringify", "parse", "raw", "app", "Node", "Node", "Hono", "util", "objectUtil", "errorUtil", "errorMap", "base64", "ctx", "result", "issues", "elements", "processed", "result", "r", "ZodFirstPartyTypeKind", "Boolean", "Set", "retBuf", "retView", "_a", "retView", "tempBufferView", "Boolean", "Set", "AsnTypeTypes", "AsnPropTypes", "BitString", "import_pvtsutils", "OctetString", "Boolean", "_a", "Set", "defaultConverter", "_a", "Set", "Set", "import_pvtsutils", "import_pvtsutils", "import_pvtsutils", "DirectoryString", "AttributeValue", "RelativeDistinguishedName", "RDNSequence", "Name", "GeneralName", "AuthorityInfoAccessSyntax", "OctetString", "GeneralNames", "CertificateIssuer", "DisplayText", "Qualifier", "CertificatePolicies", "CRLNumber", "BaseCRLNumber", "ReasonFlags", "BitString", "DistributionPointName", "CRLDistributionPoints", "FreshestCRL", "CRLReasons", "CRLReason", "ExtendedKeyUsage", "InhibitAnyPolicy", "InvalidityDate", "IssueAlternativeName", "KeyUsageFlags", "GeneralSubtrees", "PolicyMappings", "SubjectAlternativeName", "SubjectDirectoryAttributes", "EntrustInfoFlags", "BitString", "SubjectInfoAccessSyntax", "pvtsutils", "Time", "OctetString", "Extensions", "Version", "FieldID", "OctetString", "Curve", "ECPVer", "SpecifiedECDomain", "ECParameters", "OctetString", "create", "OctetString", "OtherPrimeInfos", "VerifiedBootState", "OctetString", "IntegerSet", "OctetString", "SecurityLevel", "Version", "NonStandardAuthorization", "NonStandardAuthorizationList", "Version", "OctetString", "NonStandardKeyMintKeyDescription", "toBase64", "COSEKEYS", "COSEKTY", "COSECRV", "COSEALG", "fetch", "fetch", "cert", "digest", "concat", "fromUTF8String", "toUTF8String", "isValid", "concat", "toUTF8String", "fromUTF8String", "OctetString", "SERVICE_STATE", "fetch", "raw", "Accounts", "ConfirmationTokens", "Customers", "Disputes", "Products", "Refunds", "Tokens", "encode", "data", "urlData", "_a", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Authorizations", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Cards", "stripeMethod", "stripeMethod", "Configurations", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "InboundTransfers", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "OutboundPayments", "stripeMethod", "stripeMethod", "OutboundTransfers", "stripeMethod", "stripeMethod", "PersonalizationDesigns", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Readers", "stripeMethod", "stripeMethod", "ReceivedCredits", "stripeMethod", "stripeMethod", "ReceivedDebits", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Sessions", "stripeMethod", "Sessions", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Transactions", "stripeMethod", "Transactions", "stripeMethod", "Transactions", "stripeMethod", "Transactions", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Accounts", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "ConfirmationTokens", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Customers", "stripeMethod", "Disputes", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Products", "stripeMethod", "stripeMethod", "stripeMethod", "Refunds", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Tokens", "stripeMethod", "stripeMethod", "stripeMethod", "Sessions", "Transactions", "Authorizations", "Cards", "PersonalizationDesigns", "Configurations", "Readers", "InboundTransfers", "OutboundPayments", "OutboundTransfers", "ReceivedCredits", "ReceivedDebits", "data", "_a", "Stripe", "_a", "isObject", "Hono", "raw", "isValid", "headers"]
}
